(function(global_object){var console;if(typeof globalThis!=="undefined")global_object=globalThis;else if(typeof global!=="undefined")global_object=global;else if(typeof window!=="undefined")global_object=window;if(global_object.console==null)global_object.console={};if(typeof global_object.console==="object")console=global_object.console;else console={};if(!("log"in console))console.log=function(){};if(!("warn"in console))console.warn=console.log;if(typeof global_object.Opal!=="undefined"){console.warn("Opal already loaded. Loading twice can cause troubles, please fix your setup.");
return global_object.Opal}var nil;var BasicObject;var _Object;var Module;var Class;var _Opal;var Kernel;var Opal=global_object.Opal={};Opal.global=global_object;Opal.config={missing_require_severity:"error",unsupported_features_severity:"warning",experimental_features_severity:"warning",enable_stack_trace:true};var $call=Function.prototype.call;var $bind=Function.prototype.bind;var $has_own=Object.hasOwn||$call.bind(Object.prototype.hasOwnProperty);var $set_proto=Object.setPrototypeOf;var $slice=
$call.bind(Array.prototype.slice);var $splice=$call.bind(Array.prototype.splice);var nil_id=4;var unique_id=nil_id;function $uid(){unique_id+=2;return unique_id}Opal.uid=$uid;Opal.id=function(obj){if(obj.$$is_number)return obj*2+1;if(obj.$$id==null)$prop(obj,"$$id",$uid());return obj.$$id};var $gvars=Opal.gvars={};Opal.exit=function(status){if($gvars.DEBUG)console.log("Exited with status "+status)};Opal.exceptions=[];Opal.pop_exception=function(){var exception=Opal.exceptions.pop();if(exception){$gvars["!"]=
exception;$gvars["@"]=exception.$backtrace()}else $gvars["!"]=$gvars["@"]=nil};function $raise(klass,message){if(!klass)klass=Opal.Exception||Error;if(Kernel&&Kernel.$raise)if(arguments.length>2)Kernel.$raise(klass.$new.apply(klass,$slice(arguments,1)));else Kernel.$raise(klass,message);else if(!klass.$new)throw new klass(message);else throw klass.$new(message);}function $prop(object,name,initialValue){if(typeof object==="string")object[name]=initialValue;else Object.defineProperty(object,name,{value:initialValue,
enumerable:false,configurable:true,writable:true})}Opal.prop=$prop;Opal.defineProperty=Opal.prop;Opal.slice=$slice;var $truthy=Opal.truthy=function(val){return false!==val&&nil!==val&&undefined!==val&&null!==val&&(!(val instanceof Boolean)||true===val.valueOf())};Opal.falsy=function(val){return!$truthy(val)};Opal.type_error=function(object,type,method,coerced){object=object.$$class;if(coerced&&method){coerced=coerced.$$class;$raise(Opal.TypeError,"can't convert "+object+" into "+type+" ("+object+
"#"+method+" gives "+coerced+")")}else $raise(Opal.TypeError,"no implicit conversion of "+object+" into "+type)};Opal.coerce_to=function(object,type,method,args){var body;if(method==="to_int"&&type===Opal.Integer&&object.$$is_number)return object<0?Math.ceil(object):Math.floor(object);if(method==="to_str"&&type===Opal.String&&object.$$is_string)return object;if(Opal.is_a(object,type))return object;if(object["$respond_to?"].$$pristine&&object.$method_missing.$$pristine){body=object[$jsid(method)];
if(body==null||body.$$stub)Opal.type_error(object,type);return body.apply(object,args)}if(!object["$respond_to?"](method))Opal.type_error(object,type);if(args==null)args=[];return Opal.send(object,method,args)};Opal.respond_to=function(obj,jsid,include_all){if(obj==null||!obj.$$class)return false;include_all=!!include_all;var body=obj[jsid];if(obj["$respond_to?"].$$pristine){if(typeof body==="function"&&!body.$$stub)return true;if(!obj["$respond_to_missing?"].$$pristine)return Opal.send(obj,obj["$respond_to_missing?"],
[jsid.substr(1),include_all])}else return Opal.send(obj,obj["$respond_to?"],[jsid.substr(1),include_all])};Opal.trace_class=false;Opal.tracers_for_class=[];function invoke_tracers_for_class(klass_or_module){var i,ii,tracer;for(i=0,ii=Opal.tracers_for_class.length;i<ii;i++){tracer=Opal.tracers_for_class[i];tracer.trace_object=klass_or_module;tracer.block.$call(tracer)}}function handle_autoload(cref,name){if(!cref.$$autoload[name].loaded){cref.$$autoload[name].loaded=true;try{Opal.Kernel.$require(cref.$$autoload[name].path)}catch(e){cref.$$autoload[name].exception=
e;throw e;}cref.$$autoload[name].required=true;if(cref.$$const[name]!=null){cref.$$autoload[name].success=true;return cref.$$const[name]}}else if(cref.$$autoload[name].loaded&&!cref.$$autoload[name].required)if(cref.$$autoload[name].exception)throw cref.$$autoload[name].exception;}function const_get_name(cref,name){if(cref){if(cref.$$const[name]!=null)return cref.$$const[name];if(cref.$$autoload&&cref.$$autoload[name])return handle_autoload(cref,name)}}function const_lookup_nesting(nesting,name){var i,
ii,constant;if(nesting.length===0)return;for(i=0,ii=nesting.length;i<ii;i++){constant=nesting[i].$$const[name];if(constant!=null)return constant;else if(nesting[i].$$autoload&&nesting[i].$$autoload[name])return handle_autoload(nesting[i],name)}}function const_lookup_ancestors(cref,name){var i,ii,ancestors;if(cref==null)return;ancestors=$ancestors(cref);for(i=0,ii=ancestors.length;i<ii;i++)if(ancestors[i].$$const&&$has_own(ancestors[i].$$const,name))return ancestors[i].$$const[name];else if(ancestors[i].$$autoload&&
ancestors[i].$$autoload[name])return handle_autoload(ancestors[i],name)}function const_lookup_Object(cref,name){if(cref==null||cref.$$is_module)return const_lookup_ancestors(_Object,name)}function const_missing(cref,name){return(cref||_Object).$const_missing(name)}Opal.const_get_local=function(cref,name,skip_missing){var result;if(cref==null)return;if(cref==="::")cref=_Object;if(!cref.$$is_module&&!cref.$$is_class)$raise(Opal.TypeError,cref.toString()+" is not a class/module");result=const_get_name(cref,
name);return result!=null||skip_missing?result:const_missing(cref,name)};Opal.const_get_qualified=function(cref,name,skip_missing){var result,cache,cached,current_version=Opal.const_cache_version;if(name==null){result=const_get_name(_Object,cref);if(result!=null)return result;return Opal.const_get_qualified(_Object,cref,skip_missing)}if(cref==null)return;if(cref==="::")cref=_Object;if(!cref.$$is_module&&!cref.$$is_class)$raise(Opal.TypeError,cref.toString()+" is not a class/module");if((cache=cref.$$const_cache)==
null){$prop(cref,"$$const_cache",Object.create(null));cache=cref.$$const_cache}cached=cache[name];if(cached==null||cached[0]!==current_version){(result=const_get_name(cref,name))!=null||(result=const_lookup_ancestors(cref,name))!=null;cache[name]=[current_version,result]}else result=cached[1];return result!=null||skip_missing?result:const_missing(cref,name)};Opal.const_cache_version=1;Opal.const_get_relative=function(nesting,name,skip_missing){var cref=nesting[0],result,current_version=Opal.const_cache_version,
cache,cached;if((cache=nesting.$$const_cache)==null){$prop(nesting,"$$const_cache",Object.create(null));cache=nesting.$$const_cache}cached=cache[name];if(cached==null||cached[0]!==current_version){(result=const_get_name(cref,name))!=null||(result=const_lookup_nesting(nesting,name))!=null||(result=const_lookup_ancestors(cref,name))!=null||(result=const_lookup_Object(cref,name))!=null;cache[name]=[current_version,result]}else result=cached[1];return result!=null||skip_missing?result:const_missing(cref,
name)};function $const_set(cref,name,value){var new_const=true;if(cref==null||cref==="::")cref=_Object;if(value.$$is_a_module){if(value.$$name==null||value.$$name===nil)value.$$name=name;if(value.$$base_module==null)value.$$base_module=cref}cref.$$const=cref.$$const||Object.create(null);if(name in cref.$$const||"$$autoload"in cref&&name in cref.$$autoload)new_const=false;cref.$$const[name]=value;cref.$$=cref.$$const;Opal.const_cache_version++;if(cref===_Object)Opal[name]=value;$prop(cref,name,value);
if(new_const&&cref.$const_added&&!cref.$const_added.$$pristine)cref.$const_added(name);return value}Opal.const_set=$const_set;Opal.constants=function(cref,inherit){if(inherit==null)inherit=true;var module,modules=[cref],i,ii,constants={},constant;if(inherit)modules=modules.concat($ancestors(cref));if(inherit&&cref.$$is_module)modules=modules.concat([Opal.Object]).concat($ancestors(Opal.Object));for(i=0,ii=modules.length;i<ii;i++){module=modules[i];if(cref!==_Object&&module==_Object)break;for(constant in module.$$const)constants[constant]=
true;if(module.$$autoload)for(constant in module.$$autoload)constants[constant]=true}return Object.keys(constants)};Opal.const_remove=function(cref,name){Opal.const_cache_version++;if(cref.$$const[name]!=null){var old=cref.$$const[name];delete cref.$$const[name];return old}if(cref.$$autoload&&cref.$$autoload[name]){delete cref.$$autoload[name];return nil}$raise(Opal.NameError,"constant "+cref+"::"+cref.$name()+" not defined")};Opal.const_get_relative_factory=function(nesting){return function(name,
skip_missing){return Opal.$$(nesting,name,skip_missing)}};Opal.$$=Opal.const_get_relative;Opal.$$$=Opal.const_get_qualified;Opal.$r=Opal.const_get_relative_factory;function $allocate_class(name,superclass,singleton){var klass;if(superclass!=null&&superclass.$$bridge)klass=function(){var args=$slice(arguments),self=new ($bind.apply(superclass.$$constructor,[null].concat(args)));$set_proto(self,klass.$$prototype);return self};else klass=function(){};if(name&&name!==nil)$prop(klass,"displayName","::"+
name);$prop(klass,"$$name",name);$prop(klass,"$$constructor",klass);$prop(klass,"$$prototype",klass.prototype);$prop(klass,"$$const",{});$prop(klass,"$$is_class",true);$prop(klass,"$$is_a_module",true);$prop(klass,"$$super",superclass);$prop(klass,"$$cvars",{});$prop(klass,"$$own_included_modules",[]);$prop(klass,"$$own_prepended_modules",[]);$prop(klass,"$$ancestors",[]);$prop(klass,"$$ancestors_cache_version",null);$prop(klass,"$$subclasses",[]);$prop(klass.$$prototype,"$$class",klass);if(Opal.Class)$set_proto(klass,
Opal.Class.prototype);if(superclass!=null){$set_proto(klass.$$prototype,superclass.$$prototype);if(singleton!==true)if(typeof WeakRef!=="undefined"){var i,subclass,rebuilt_subclasses=[];for(i=0;i<superclass.$$subclasses.length;i++){subclass=superclass.$$subclasses[i];if(subclass.deref()!==undefined)rebuilt_subclasses.push(subclass)}rebuilt_subclasses.push(new WeakRef(klass));superclass.$$subclasses=rebuilt_subclasses}else superclass.$$subclasses.push(klass);if(superclass.$$meta)Opal.build_class_singleton_class(klass)}return klass}
Opal.allocate_class=$allocate_class;function find_existing_class(scope,name){var klass=const_get_name(scope,name);if(klass){if(!klass.$$is_class)$raise(Opal.TypeError,name+" is not a class");return klass}}function ensureSuperclassMatch(klass,superclass){if(klass.$$super!==superclass)$raise(Opal.TypeError,"superclass mismatch for class "+klass.$$name)}Opal.klass=function(scope,superclass,name){var bridged;if(scope==null||scope=="::")scope=_Object;else if(!scope.$$is_class&&!scope.$$is_module)scope=
scope.$$class;if(superclass!=null&&(!superclass.hasOwnProperty||superclass.hasOwnProperty&&!superclass.hasOwnProperty("$$is_class")))if(superclass.constructor&&superclass.constructor.name=="Function"){bridged=superclass;superclass=_Object}else $raise(Opal.TypeError,"superclass must be a Class ("+(superclass.constructor&&(superclass.constructor.name||superclass.constructor.$$name)||typeof superclass)+" given)");var klass=find_existing_class(scope,name);if(klass!=null){if(superclass)ensureSuperclassMatch(klass,
superclass)}else{if(superclass==null)superclass=_Object;klass=$allocate_class(name,superclass);$const_set(scope,name,klass);if(superclass.$inherited)superclass.$inherited(klass);if(bridged)Opal.bridge(bridged,klass)}if(Opal.trace_class)invoke_tracers_for_class(klass);return klass};function $allocate_module(name){var constructor=function(){};var module=constructor;if(name)$prop(constructor,"displayName",name+".constructor");$prop(module,"$$name",name);$prop(module,"$$prototype",constructor.prototype);
$prop(module,"$$const",{});$prop(module,"$$is_module",true);$prop(module,"$$is_a_module",true);$prop(module,"$$cvars",{});$prop(module,"$$iclasses",[]);$prop(module,"$$own_included_modules",[]);$prop(module,"$$own_prepended_modules",[]);$prop(module,"$$ancestors",[module]);$prop(module,"$$ancestors_cache_version",null);$set_proto(module,Opal.Module.prototype);return module}Opal.allocate_module=$allocate_module;function find_existing_module(scope,name){var module=const_get_name(scope,name);if(module==
null&&scope===_Object)module=const_lookup_ancestors(_Object,name);if(module)if(!module.$$is_module&&module!==_Object)$raise(Opal.TypeError,name+" is not a module");return module}Opal.module=function(scope,name){var module;if(scope==null||scope=="::")scope=_Object;else if(!scope.$$is_class&&!scope.$$is_module)scope=scope.$$class;module=find_existing_module(scope,name);if(module==null){module=$allocate_module(name);$const_set(scope,name,module)}if(Opal.trace_class)invoke_tracers_for_class(module);return module};
Opal.get_singleton_class=function(object){if(object.$$is_number)$raise(Opal.TypeError,"can't define singleton");if(object.$$meta)return object.$$meta;if(object.hasOwnProperty("$$is_class"))return Opal.build_class_singleton_class(object);else if(object.hasOwnProperty("$$is_module"))return Opal.build_module_singleton_class(object);else return Opal.build_object_singleton_class(object)};function set_meta(obj,meta){if(obj.hasOwnProperty("$$meta"))obj.$$meta=meta;else $prop(obj,"$$meta",meta);if(obj.$$frozen)obj.$$meta.$freeze();
else $set_proto(obj,meta.$$prototype)}Opal.build_class_singleton_class=function(klass){if(klass.$$meta)return klass.$$meta;var superclass=klass===BasicObject?Class:Opal.get_singleton_class(klass.$$super);var meta=$allocate_class(null,superclass,true);$prop(meta,"$$is_singleton",true);$prop(meta,"$$singleton_of",klass);set_meta(klass,meta);$prop(klass,"$$class",Opal.Class);return meta};Opal.build_module_singleton_class=function(mod){if(mod.$$meta)return mod.$$meta;var meta=$allocate_class(null,Opal.Module,
true);$prop(meta,"$$is_singleton",true);$prop(meta,"$$singleton_of",mod);set_meta(mod,meta);$prop(mod,"$$class",Opal.Module);return meta};Opal.build_object_singleton_class=function(object){var superclass=object.$$class,klass=$allocate_class(nil,superclass,true);$prop(klass,"$$is_singleton",true);$prop(klass,"$$singleton_of",object);delete klass.$$prototype.$$class;set_meta(object,klass);return klass};Opal.is_method=function(prop){return prop[0]==="$"&&prop[1]!=="$"};Opal.instance_methods=function(mod){var exclude=
[],results=[],ancestors=$ancestors(mod);for(var i=0,l=ancestors.length;i<l;i++){var ancestor=ancestors[i],proto=ancestor.$$prototype;if(proto.hasOwnProperty("$$dummy"))proto=proto.$$define_methods_on;var props=Object.getOwnPropertyNames(proto);for(var j=0,ll=props.length;j<ll;j++){var prop=props[j];if(Opal.is_method(prop)){var method_name=prop.slice(1),method=proto[prop];if(method.$$stub&&exclude.indexOf(method_name)===-1)exclude.push(method_name);if(!method.$$stub&&results.indexOf(method_name)===
-1&&exclude.indexOf(method_name)===-1)results.push(method_name)}}}return results};Opal.own_instance_methods=function(mod){var results=[],proto=mod.$$prototype;if(proto.hasOwnProperty("$$dummy"))proto=proto.$$define_methods_on;var props=Object.getOwnPropertyNames(proto);for(var i=0,length=props.length;i<length;i++){var prop=props[i];if(Opal.is_method(prop)){var method=proto[prop];if(!method.$$stub){var method_name=prop.slice(1);results.push(method_name)}}}return results};Opal.methods=function(obj){return Opal.instance_methods(obj.$$meta||
obj.$$class)};Opal.own_methods=function(obj){return obj.$$meta?Opal.own_instance_methods(obj.$$meta):[]};Opal.receiver_methods=function(obj){var mod=Opal.get_singleton_class(obj);var singleton_methods=Opal.own_instance_methods(mod);var instance_methods=Opal.own_instance_methods(mod.$$super);return singleton_methods.concat(instance_methods)};Opal.class_variables=function(module){var ancestors=$ancestors(module),i,length=ancestors.length,result={};for(i=length-1;i>=0;i--){var ancestor=ancestors[i];
for(var cvar in ancestor.$$cvars)result[cvar]=ancestor.$$cvars[cvar]}return result};Opal.class_variable_set=function(module,name,value){var ancestors=$ancestors(module),i,length=ancestors.length;for(i=length-2;i>=0;i--){var ancestor=ancestors[i];if($has_own(ancestor.$$cvars,name)){ancestor.$$cvars[name]=value;return value}}module.$$cvars[name]=value;return value};Opal.class_variable_get=function(module,name,tolerant){if($has_own(module.$$cvars,name))return module.$$cvars[name];var ancestors=$ancestors(module),
i,length=ancestors.length;for(i=0;i<length;i++){var ancestor=ancestors[i];if($has_own(ancestor.$$cvars,name))return ancestor.$$cvars[name]}if(!tolerant)$raise(Opal.NameError,"uninitialized class variable "+name+" in "+module.$name());return nil};function isRoot(proto){return proto.hasOwnProperty("$$iclass")&&proto.hasOwnProperty("$$root")}function own_included_modules(module){var result=[],mod,proto=Object.getPrototypeOf(module.$$prototype);while(proto){if(proto.hasOwnProperty("$$class"))break;mod=
protoToModule(proto);if(mod)result.push(mod);proto=Object.getPrototypeOf(proto)}return result}function own_prepended_modules(module){var result=[],mod,proto=Object.getPrototypeOf(module.$$prototype);if(module.$$prototype.hasOwnProperty("$$dummy"))while(proto){if(proto===module.$$prototype.$$define_methods_on)break;mod=protoToModule(proto);if(mod)result.push(mod);proto=Object.getPrototypeOf(proto)}return result}Opal.append_features=function(module,includer){var module_ancestors=$ancestors(module);
var iclasses=[];if(module_ancestors.indexOf(includer)!==-1)$raise(Opal.ArgumentError,"cyclic include detected");for(var i=0,length=module_ancestors.length;i<length;i++){var ancestor=module_ancestors[i],iclass=create_iclass(ancestor);$prop(iclass,"$$included",true);iclasses.push(iclass)}var includer_ancestors=$ancestors(includer),chain=chain_iclasses(iclasses),start_chain_after,end_chain_on;if(includer_ancestors.indexOf(module)===-1){start_chain_after=includer.$$prototype;end_chain_on=Object.getPrototypeOf(includer.$$prototype)}else{var parent=
includer.$$prototype,module_iclass=Object.getPrototypeOf(parent);while(module_iclass!=null){if(module_iclass.$$module===module&&isRoot(module_iclass))break;parent=module_iclass;module_iclass=Object.getPrototypeOf(module_iclass)}if(module_iclass){var next_ancestor=Object.getPrototypeOf(module_iclass);while(next_ancestor.hasOwnProperty("$$iclass")&&!isRoot(next_ancestor))next_ancestor=Object.getPrototypeOf(next_ancestor);start_chain_after=parent;end_chain_on=next_ancestor}else{start_chain_after=includer.$$prototype;
end_chain_on=Object.getPrototypeOf(includer.$$prototype)}}$set_proto(start_chain_after,chain.first);$set_proto(chain.last,end_chain_on);includer.$$own_included_modules=own_included_modules(includer);Opal.const_cache_version++};Opal.prepend_features=function(module,prepender){var module_ancestors=$ancestors(module);var iclasses=[];if(module_ancestors.indexOf(prepender)!==-1)$raise(Opal.ArgumentError,"cyclic prepend detected");for(var i=0,length=module_ancestors.length;i<length;i++){var ancestor=module_ancestors[i],
iclass=create_iclass(ancestor);$prop(iclass,"$$prepended",true);iclasses.push(iclass)}var chain=chain_iclasses(iclasses),dummy_prepender=prepender.$$prototype,previous_parent=Object.getPrototypeOf(dummy_prepender),prepender_iclass,start_chain_after,end_chain_on;if(dummy_prepender.hasOwnProperty("$$dummy"))prepender_iclass=dummy_prepender.$$define_methods_on;else{prepender_iclass=create_dummy_iclass(prepender);flush_methods_in(prepender);$prop(dummy_prepender,"$$dummy",true);$prop(dummy_prepender,
"$$define_methods_on",prepender_iclass);$set_proto(dummy_prepender,prepender_iclass);$set_proto(prepender_iclass,previous_parent)}var prepender_ancestors=$ancestors(prepender);if(prepender_ancestors.indexOf(module)===-1){start_chain_after=dummy_prepender;end_chain_on=Object.getPrototypeOf(dummy_prepender);while(end_chain_on!=null){if(end_chain_on.hasOwnProperty("$$root")||end_chain_on===prepender_iclass||!end_chain_on.hasOwnProperty("$$iclass"))break;end_chain_on=Object.getPrototypeOf(end_chain_on)}}else $raise(Opal.RuntimeError,
"Prepending a module multiple times is not supported");$set_proto(start_chain_after,chain.first);$set_proto(chain.last,end_chain_on);prepender.$$own_prepended_modules=own_prepended_modules(prepender);Opal.const_cache_version++};function flush_methods_in(module){var proto=module.$$prototype,props=Object.getOwnPropertyNames(proto);for(var i=0;i<props.length;i++){var prop=props[i];if(Opal.is_method(prop))delete proto[prop]}}function create_iclass(module){var iclass=create_dummy_iclass(module);if(module.$$is_module)module.$$iclasses.push(iclass);
return iclass}function create_dummy_iclass(module){var iclass={},proto=module.$$prototype;if(proto.hasOwnProperty("$$dummy"))proto=proto.$$define_methods_on;var props=Object.getOwnPropertyNames(proto),length=props.length,i;for(i=0;i<length;i++){var prop=props[i];$prop(iclass,prop,proto[prop])}$prop(iclass,"$$iclass",true);$prop(iclass,"$$module",module);return iclass}function chain_iclasses(iclasses){var length=iclasses.length,first=iclasses[0];$prop(first,"$$root",true);if(length===1)return{first:first,
last:first};var previous=first;for(var i=1;i<length;i++){var current=iclasses[i];$set_proto(previous,current);previous=current}return{first:iclasses[0],last:iclasses[length-1]}}Opal.bridge=function(native_klass,klass){if(native_klass.hasOwnProperty("$$bridge"))$raise(Opal.ArgumentError,"already bridged");$prop(native_klass,"$$bridge",klass);$set_proto(native_klass.prototype,(klass.$$super||Opal.Object).$$prototype);$prop(klass,"$$prototype",native_klass.prototype);$prop(klass.$$prototype,"$$class",
klass);$prop(klass,"$$constructor",native_klass);$prop(klass,"$$bridge",true)};function protoToModule(proto){if(proto.hasOwnProperty("$$dummy"))return;else if(proto.hasOwnProperty("$$iclass"))return proto.$$module;else if(proto.hasOwnProperty("$$class"))return proto.$$class}function own_ancestors(module){return module.$$own_prepended_modules.concat([module]).concat(module.$$own_included_modules)}function $ancestors(module){if(!module)return[];if(module.$$ancestors_cache_version===Opal.const_cache_version)return module.$$ancestors;
var result=[],i,mods,length;for(i=0,mods=own_ancestors(module),length=mods.length;i<length;i++)result.push(mods[i]);if(module.$$super)for(i=0,mods=$ancestors(module.$$super),length=mods.length;i<length;i++)result.push(mods[i]);module.$$ancestors_cache_version=Opal.const_cache_version;module.$$ancestors=result;return result}Opal.ancestors=$ancestors;Opal.included_modules=function(module){var result=[],mod=null,proto=Object.getPrototypeOf(module.$$prototype);for(;proto&&Object.getPrototypeOf(proto);proto=
Object.getPrototypeOf(proto)){mod=protoToModule(proto);if(mod&&mod.$$is_module&&proto.$$iclass&&proto.$$included)result.push(mod)}return result};Opal.add_stubs=function(stubs){var proto=Opal.BasicObject.$$prototype;var stub,existing_method;stubs=stubs.split(",");for(var i=0,length=stubs.length;i<length;i++){stub=$jsid(stubs[i]),existing_method=proto[stub];if(existing_method==null||existing_method.$$stub)Opal.add_stub_for(proto,stub)}};Opal.add_stub_for=function(prototype,stub){$prop(prototype,stub,
Opal.stub_for(stub))};Opal.stub_for=function(method_name){function method_missing_stub(){this.$method_missing.$$p=method_missing_stub.$$p;method_missing_stub.$$p=null;var args_ary=new Array(arguments.length);for(var i=0,l=args_ary.length;i<l;i++)args_ary[i]=arguments[i];return this.$method_missing.apply(this,[method_name.slice(1)].concat(args_ary))}method_missing_stub.$$stub=true;return method_missing_stub};Opal.ac=function(actual,expected,object,meth){var inspect="";if(object.$$is_a_module)inspect+=
object.$$name+".";else inspect+=object.$$class.$$name+"#";inspect+=meth;$raise(Opal.ArgumentError,"["+inspect+"] wrong number of arguments (given "+actual+", expected "+expected+")")};Opal.block_ac=function(actual,expected,context){var inspect="`block in "+context+"'";$raise(Opal.ArgumentError,inspect+": wrong number of arguments (given "+actual+", expected "+expected+")")};function get_ancestors(obj){if(obj.hasOwnProperty("$$meta")&&obj.$$meta!==null)return $ancestors(obj.$$meta);else return $ancestors(obj.$$class)}
Opal.find_super=function(obj,mid,current_func,defcheck,allow_stubs){var jsid=$jsid(mid),ancestors,super_method;ancestors=get_ancestors(obj);var current_index=ancestors.indexOf(current_func.$$owner);for(var i=current_index+1;i<ancestors.length;i++){var ancestor=ancestors[i],proto=ancestor.$$prototype;if(proto.hasOwnProperty("$$dummy"))proto=proto.$$define_methods_on;if(proto.hasOwnProperty(jsid)){super_method=proto[jsid];break}}if(!defcheck&&super_method&&super_method.$$stub&&obj.$method_missing.$$pristine)$raise(Opal.NoMethodError,
"super: no superclass method `"+mid+"' for "+obj,mid);return super_method.$$stub&&!allow_stubs?null:super_method};Opal.find_block_super=function(obj,jsid,current_func,defcheck,implicit){var call_jsid=jsid;if(!current_func)$raise(Opal.RuntimeError,"super called outside of method");if(implicit&&current_func.$$define_meth)$raise(Opal.RuntimeError,"implicit argument passing of super from method defined by define_method() is not supported. "+"Specify all arguments explicitly");if(current_func.$$def)call_jsid=
current_func.$$jsid;return Opal.find_super(obj,call_jsid,current_func,defcheck)};Opal.find_super_dispatcher=Opal.find_super;Opal.find_iter_super_dispatcher=Opal.find_block_super;Opal.yield1=function(block,arg){if(typeof block!=="function")$raise(Opal.LocalJumpError,"no block given");var has_mlhs=block.$$has_top_level_mlhs_arg,has_trailing_comma=block.$$has_trailing_comma_in_args;if(block.length>1||(has_mlhs||has_trailing_comma)&&block.length===1)arg=Opal.to_ary(arg);if((block.length>1||has_trailing_comma&&
block.length===1)&&arg.$$is_array)return block.apply(null,arg);else return block(arg)};Opal.yieldX=function(block,args){if(typeof block!=="function")$raise(Opal.LocalJumpError,"no block given");if(block.length>1&&args.length===1)if(args[0].$$is_array)return block.apply(null,args[0]);if(!args.$$is_array){var args_ary=new Array(args.length);for(var i=0,l=args_ary.length;i<l;i++)args_ary[i]=args[i];return block.apply(null,args_ary)}return block.apply(null,args)};Opal.rescue=function(exception,candidates){for(var i=
0;i<candidates.length;i++){var candidate=candidates[i];if(candidate.$$is_array){var result=Opal.rescue(exception,candidate);if(result)return result}else if(candidate===Opal.JS.Error||candidate["$==="](exception))return candidate}return null};Opal.is_a=function(object,klass){if(klass!=null&&object.$$meta===klass||object.$$class===klass)return true;if(object.$$is_number&&klass.$$is_number_class)return klass.$$is_integer_class?object%1===0:true;var ancestors=$ancestors(object.$$is_class?Opal.get_singleton_class(object):
object.$$meta||object.$$class);return ancestors.indexOf(klass)!==-1};Opal.to_hash=function(value){if(value.$$is_hash)return value;else if(value["$respond_to?"]("to_hash",true)){var hash=value.$to_hash();if(hash.$$is_hash)return hash;else $raise(Opal.TypeError,"Can't convert "+value.$$class+" to Hash ("+value.$$class+"#to_hash gives "+hash.$$class+")")}else $raise(Opal.TypeError,"no implicit conversion of "+value.$$class+" into Hash")};Opal.to_ary=function(value){if(value.$$is_array)return value;else if(value["$respond_to?"]("to_ary",
true)){var ary=value.$to_ary();if(ary===nil)return[value];else if(ary.$$is_array)return ary;else $raise(Opal.TypeError,"Can't convert "+value.$$class+" to Array ("+value.$$class+"#to_ary gives "+ary.$$class+")")}else return[value]};Opal.to_a=function(value){if(value.$$is_array)return value.slice();else if(value["$respond_to?"]("to_a",true)){var ary=value.$to_a();if(ary===nil)return[value];else if(ary.$$is_array)return ary;else $raise(Opal.TypeError,"Can't convert "+value.$$class+" to Array ("+value.$$class+
"#to_a gives "+ary.$$class+")")}else return[value]};Opal.extract_kwargs=function(parameters){var kwargs=parameters[parameters.length-1];if(kwargs!=null&&Opal.respond_to(kwargs,"$to_hash",true)){$splice(parameters,parameters.length-1);return kwargs}};Opal.kwrestargs=function(given_args,used_args){var keys=[],map={},key,given_map=given_args.$$smap;for(key in given_map)if(!used_args[key]){keys.push(key);map[key]=given_map[key]}return Opal.hash2(keys,map)};function apply_blockopts(block,blockopts){if(typeof blockopts===
"number")block.$$arity=blockopts;else if(typeof blockopts==="object")Object.assign(block,blockopts)}var jsid_cache={};function $jsid(name){return jsid_cache[name]||(jsid_cache[name]="$"+name)}Opal.jsid=$jsid;Opal.send=function(recv,method,args,block,blockopts){var body;if(typeof method==="function"){body=method;method=null}else if(typeof method==="string")body=recv[$jsid(method)];else $raise(Opal.NameError,"Passed method should be a string or a function");return Opal.send2(recv,body,method,args,block,
blockopts)};Opal.send2=function(recv,body,method,args,block,blockopts){if(body==null&&method!=null&&recv.$method_missing){body=recv.$method_missing;args=[method].concat(args)}apply_blockopts(block,blockopts);if(typeof block==="function")body.$$p=block;return body.apply(recv,args)};Opal.refined_send=function(refinement_groups,recv,method,args,block,blockopts){var i,j,k,ancestors,ancestor,refinements,refinement,refine_modules,refine_module,body;ancestors=get_ancestors(recv);for(i=0;i<ancestors.length;i++){ancestor=
Opal.id(ancestors[i]);for(j=0;j<refinement_groups.length;j++){refinements=refinement_groups[j];for(k=refinements.length-1;k>=0;k--){refinement=refinements[k];if(typeof refinement.$$refine_modules==="undefined")continue;refine_modules=refinement.$$refine_modules;if(typeof refine_modules[ancestor]==="undefined")continue;refine_module=refine_modules[ancestor];if(typeof refine_module.$$prototype[$jsid(method)]!=="undefined"){body=refine_module.$$prototype[$jsid(method)];return Opal.send2(recv,body,method,
args,block,blockopts)}}}}return Opal.send(recv,method,args,block,blockopts)};Opal.lambda=function(block,blockopts){block.$$is_lambda=true;apply_blockopts(block,blockopts);return block};Opal.def=function(obj,jsid,body,blockopts){apply_blockopts(body,blockopts);if(obj===Opal.top)return Opal.defn(Opal.Object,jsid,body);else if(!obj.$$eval&&obj.$$is_a_module)return Opal.defn(obj,jsid,body);else return Opal.defs(obj,jsid,body)};Opal.defn=function(module,jsid,body){$deny_frozen_access(module);body.displayName=
jsid;body.$$owner=module;var name=jsid.substr(1);var proto=module.$$prototype;if(proto.hasOwnProperty("$$dummy"))proto=proto.$$define_methods_on;$prop(proto,jsid,body);if(module.$$is_module){if(module.$$module_function)Opal.defs(module,jsid,body);for(var i=0,iclasses=module.$$iclasses,length=iclasses.length;i<length;i++){var iclass=iclasses[i];$prop(iclass,jsid,body)}}var singleton_of=module.$$singleton_of;if(module.$method_added&&!module.$method_added.$$stub&&!singleton_of)module.$method_added(name);
else if(singleton_of&&singleton_of.$singleton_method_added&&!singleton_of.$singleton_method_added.$$stub)singleton_of.$singleton_method_added(name);return name};Opal.defs=function(obj,jsid,body,blockopts){apply_blockopts(body,blockopts);if(obj.$$is_string||obj.$$is_number)$raise(Opal.TypeError,"can't define singleton");return Opal.defn(Opal.get_singleton_class(obj),jsid,body)};Opal.rdef=function(obj,jsid){if(!$has_own(obj.$$prototype,jsid))$raise(Opal.NameError,"method '"+jsid.substr(1)+"' not defined in "+
obj.$name());delete obj.$$prototype[jsid];if(obj.$$is_singleton){if(obj.$$prototype.$singleton_method_removed&&!obj.$$prototype.$singleton_method_removed.$$stub)obj.$$prototype.$singleton_method_removed(jsid.substr(1))}else if(obj.$method_removed&&!obj.$method_removed.$$stub)obj.$method_removed(jsid.substr(1))};Opal.udef=function(obj,jsid){if(!obj.$$prototype[jsid]||obj.$$prototype[jsid].$$stub)$raise(Opal.NameError,"method '"+jsid.substr(1)+"' not defined in "+obj.$name());Opal.add_stub_for(obj.$$prototype,
jsid);if(obj.$$is_singleton){if(obj.$$prototype.$singleton_method_undefined&&!obj.$$prototype.$singleton_method_undefined.$$stub)obj.$$prototype.$singleton_method_undefined(jsid.substr(1))}else if(obj.$method_undefined&&!obj.$method_undefined.$$stub)obj.$method_undefined(jsid.substr(1))};function is_method_body(body){return typeof body==="function"&&!body.$$stub}Opal.alias=function(obj,name,old){var id=$jsid(name),old_id=$jsid(old),body,alias;if(typeof obj.$$prototype==="undefined")obj=Opal.Object;
body=obj.$$prototype[old_id];if(obj.$$eval)return Opal.alias(Opal.get_singleton_class(obj),name,old);if(!is_method_body(body)){var ancestor=obj.$$super;while(typeof body!=="function"&&ancestor){body=ancestor[old_id];ancestor=ancestor.$$super}if(!is_method_body(body)&&obj.$$is_module)body=Opal.Object.$$prototype[old_id];if(!is_method_body(body))$raise(Opal.NameError,"undefined method `"+old+"' for class `"+obj.$name()+"'")}if(body.$$alias_of)body=body.$$alias_of;alias=function(){var block=alias.$$p,
args,i,ii;args=new Array(arguments.length);for(i=0,ii=arguments.length;i<ii;i++)args[i]=arguments[i];alias.$$p=null;return Opal.send(this,body,args,block)};try{Object.defineProperty(alias,"length",{value:body.length})}catch(e){}alias.displayName=name;alias.$$arity=body.$$arity==null?body.length:body.$$arity;alias.$$parameters=body.$$parameters;alias.$$source_location=body.$$source_location;alias.$$alias_of=body;alias.$$alias_name=name;Opal.defn(obj,id,alias);return obj};Opal.alias_gvar=function(new_name,
old_name){Object.defineProperty($gvars,new_name,{configurable:true,enumerable:true,get:function(){return $gvars[old_name]},set:function(new_value){$gvars[old_name]=new_value}});return nil};Opal.alias_native=function(obj,name,native_name){var id=$jsid(name),body=obj.$$prototype[native_name];if(typeof body!=="function"||body.$$stub)$raise(Opal.NameError,"undefined native method `"+native_name+"' for class `"+obj.$name()+"'");Opal.defn(obj,id,body);return obj};Opal.hash_init=function(hash){hash.$$smap=
Object.create(null);hash.$$map=Object.create(null);hash.$$keys=[]};Opal.hash_clone=function(from_hash,to_hash){to_hash.$$none=from_hash.$$none;to_hash.$$proc=from_hash.$$proc;for(var i=0,keys=from_hash.$$keys,smap=from_hash.$$smap,len=keys.length,key,value;i<len;i++){key=keys[i];if(key.$$is_string)value=smap[key];else{value=key.value;key=key.key}Opal.hash_put(to_hash,key,value)}};Opal.hash_put=function(hash,key,value){if(key.$$is_string){if(!$has_own(hash.$$smap,key))hash.$$keys.push(key);hash.$$smap[key]=
value;return}var key_hash,bucket,last_bucket;key_hash=hash.$$by_identity?Opal.id(key):key.$hash();if(!$has_own(hash.$$map,key_hash)){bucket={key:key,key_hash:key_hash,value:value};hash.$$keys.push(bucket);hash.$$map[key_hash]=bucket;return}bucket=hash.$$map[key_hash];while(bucket){if(key===bucket.key||key["$eql?"](bucket.key)){last_bucket=undefined;bucket.value=value;break}last_bucket=bucket;bucket=bucket.next}if(last_bucket){bucket={key:key,key_hash:key_hash,value:value};hash.$$keys.push(bucket);
last_bucket.next=bucket}};Opal.hash_get=function(hash,key){if(key.$$is_string){if($has_own(hash.$$smap,key))return hash.$$smap[key];return}var key_hash,bucket;key_hash=hash.$$by_identity?Opal.id(key):key.$hash();if($has_own(hash.$$map,key_hash)){bucket=hash.$$map[key_hash];while(bucket){if(key===bucket.key||key["$eql?"](bucket.key))return bucket.value;bucket=bucket.next}}};Opal.hash_delete=function(hash,key){var i,keys=hash.$$keys,length=keys.length,value,key_tmp;if(key.$$is_string){if(typeof key!==
"string")key=key.valueOf();if(!$has_own(hash.$$smap,key))return;for(i=0;i<length;i++){key_tmp=keys[i];if(key_tmp.$$is_string&&typeof key_tmp!=="string")key_tmp=key_tmp.valueOf();if(key_tmp===key){keys.splice(i,1);break}}value=hash.$$smap[key];delete hash.$$smap[key];return value}var key_hash=key.$hash();if(!$has_own(hash.$$map,key_hash))return;var bucket=hash.$$map[key_hash],last_bucket;while(bucket){if(key===bucket.key||key["$eql?"](bucket.key)){value=bucket.value;for(i=0;i<length;i++)if(keys[i]===
bucket){keys.splice(i,1);break}if(last_bucket&&bucket.next)last_bucket.next=bucket.next;else if(last_bucket)delete last_bucket.next;else if(bucket.next)hash.$$map[key_hash]=bucket.next;else delete hash.$$map[key_hash];return value}last_bucket=bucket;bucket=bucket.next}};Opal.hash_rehash=function(hash){for(var i=0,length=hash.$$keys.length,key_hash,bucket,last_bucket;i<length;i++){if(hash.$$keys[i].$$is_string)continue;key_hash=hash.$$keys[i].key.$hash();if(key_hash===hash.$$keys[i].key_hash)continue;
bucket=hash.$$map[hash.$$keys[i].key_hash];last_bucket=undefined;while(bucket){if(bucket===hash.$$keys[i]){if(last_bucket&&bucket.next)last_bucket.next=bucket.next;else if(last_bucket)delete last_bucket.next;else if(bucket.next)hash.$$map[hash.$$keys[i].key_hash]=bucket.next;else delete hash.$$map[hash.$$keys[i].key_hash];break}last_bucket=bucket;bucket=bucket.next}hash.$$keys[i].key_hash=key_hash;if(!$has_own(hash.$$map,key_hash)){hash.$$map[key_hash]=hash.$$keys[i];continue}bucket=hash.$$map[key_hash];
last_bucket=undefined;while(bucket){if(bucket===hash.$$keys[i]){last_bucket=undefined;break}last_bucket=bucket;bucket=bucket.next}if(last_bucket)last_bucket.next=hash.$$keys[i]}};Opal.hash=function(){var arguments_length=arguments.length,args,hash,i,length,key,value;if(arguments_length===1&&arguments[0].$$is_hash)return arguments[0];hash=new Opal.Hash;Opal.hash_init(hash);if(arguments_length===1){args=arguments[0];if(arguments[0].$$is_array){length=args.length;for(i=0;i<length;i++){if(args[i].length!==
2)$raise(Opal.ArgumentError,"value not of length 2: "+args[i].$inspect());key=args[i][0];value=args[i][1];Opal.hash_put(hash,key,value)}return hash}else{args=arguments[0];for(key in args)if($has_own(args,key)){value=args[key];Opal.hash_put(hash,key,value)}return hash}}if(arguments_length%2!==0)$raise(Opal.ArgumentError,"odd number of arguments for Hash");for(i=0;i<arguments_length;i+=2){key=arguments[i];value=arguments[i+1];Opal.hash_put(hash,key,value)}return hash};Opal.hash2=function(keys,smap){var hash=
new Opal.Hash;hash.$$smap=smap;hash.$$map=Object.create(null);hash.$$keys=keys;return hash};Opal.range=function(first,last,exc){var range=new Opal.Range;range.begin=first;range.end=last;range.excl=exc;return range};var reserved_ivar_names=["constructor","displayName","__count__","__noSuchMethod__","__parent__","__proto__","hasOwnProperty","valueOf"];Opal.ivar=function(name){if(reserved_ivar_names.indexOf(name)!==-1)name+="$";return name};function $deny_frozen_access(obj){if(obj.$$frozen)$raise(Opal.FrozenError,
"can't modify frozen "+obj.$class()+": "+obj,Opal.hash2(["receiver"],{"receiver":obj}))}Opal.deny_frozen_access=$deny_frozen_access;Opal.freeze=function(obj){$prop(obj,"$$frozen",true);if(!obj.hasOwnProperty("$$id"))$prop(obj,"$$id",$uid());if(obj.hasOwnProperty("$$meta"))obj.$$meta.$freeze();else $prop(obj,"$$meta",null);if(!obj.hasOwnProperty("$$comparable"))$prop(obj,"$$comparable",null);Object.seal(obj);return obj};Opal.freeze_props=function(obj){var prop,prop_type,desc;for(prop in obj){prop_type=
typeof prop;if((prop_type==="string"||prop_type==="object")&&prop[0]==="$")continue;desc=Object.getOwnPropertyDescriptor(obj,prop);if(desc&&desc.enumerable&&desc.writable)(function(){var cv=obj[prop];Object.defineProperty(obj,prop,{get:function(){return cv},set:function(_val){$deny_frozen_access(obj)},enumerable:true})})()}};Opal.escape_regexp=function(str){return str.replace(/([-[\]\/{}()*+?.^$\\| ])/g,"\\$1").replace(/[\n]/g,"\\n").replace(/[\r]/g,"\\r").replace(/[\f]/g,"\\f").replace(/[\t]/g,"\\t")};
Opal.global_regexp=function(pattern){if(pattern.global)return pattern;if(pattern.$$g==null)pattern.$$g=new RegExp(pattern.source,(pattern.multiline?"gm":"g")+(pattern.ignoreCase?"i":""));else pattern.$$g.lastIndex=null;return pattern.$$g};Opal.global_multiline_regexp=function(pattern){var result,flags;if(pattern.global&&pattern.multiline)return pattern;flags="gm"+(pattern.ignoreCase?"i":"");if(pattern.multiline){if(pattern.$$g==null)pattern.$$g=new RegExp(pattern.source,flags);result=pattern.$$g}else{if(pattern.$$gm==
null)pattern.$$gm=new RegExp(pattern.source,flags);result=pattern.$$gm}result.lastIndex=null;return result};Opal.regexp=function(parts,flags){var part;var ignoreCase=typeof flags!=="undefined"&&flags&&flags.indexOf("i")>=0;for(var i=0,ii=parts.length;i<ii;i++){part=parts[i];if(part instanceof RegExp){if(part.ignoreCase!==ignoreCase)Opal.Kernel.$warn("ignore case doesn't match for "+part.source.$inspect(),Opal.hash({uplevel:1}));part=part.source}if(part==="")part="(?:"+part+")";parts[i]=part}if(flags)return new RegExp(parts.join(""),
flags);else return new RegExp(parts.join(""))};Opal.modules={};Opal.loaded_features=["corelib/runtime"];Opal.current_dir=".";Opal.require_table={"corelib/runtime":true};Opal.normalize=function(path){var parts,part,new_parts=[],SEPARATOR="/";if(Opal.current_dir!==".")path=Opal.current_dir.replace(/\/*$/,"/")+path;path=path.replace(/^\.\//,"");path=path.replace(/\.(rb|opal|js)$/,"");parts=path.split(SEPARATOR);for(var i=0,ii=parts.length;i<ii;i++){part=parts[i];if(part==="")continue;part===".."?new_parts.pop():
new_parts.push(part)}return new_parts.join(SEPARATOR)};Opal.loaded=function(paths){var i,l,path;for(i=0,l=paths.length;i<l;i++){path=Opal.normalize(paths[i]);if(Opal.require_table[path])continue;Opal.loaded_features.push(path);Opal.require_table[path]=true}};Opal.load_normalized=function(path){Opal.loaded([path]);var module=Opal.modules[path];if(module){var retval=module(Opal);if(typeof Promise!=="undefined"&&retval instanceof Promise)return retval.then($return_val(true))}else{var severity=Opal.config.missing_require_severity;
var message="cannot load such file -- "+path;if(severity==="error")$raise(Opal.LoadError,message);else if(severity==="warning")console.warn("WARNING: LoadError: "+message)}return true};Opal.load=function(path){path=Opal.normalize(path);return Opal.load_normalized(path)};Opal.require=function(path){path=Opal.normalize(path);if(Opal.require_table[path])return false;return Opal.load_normalized(path)};Opal.encodings=Object.create(null);Opal.set_encoding=function(str,name,type){if(typeof type==="undefined")type=
"encoding";if(typeof str==="string"||str.$$frozen===true)$raise(Opal.FrozenError,"can't modify frozen String");var encoding=Opal.find_encoding(name);if(encoding===str[type])return str;str[type]=encoding;return str};Opal.find_encoding=function(name){var register=Opal.encodings;var encoding=register[name]||register[name.toUpperCase()];if(!encoding)$raise(Opal.ArgumentError,"unknown encoding name - "+name);return encoding};Opal.enc=function(str,name){var dup=new String(str);dup=Opal.set_encoding(dup,
name);dup.internal_encoding=dup.encoding;return dup};Opal.binary=function(str){var dup=new String(str);return Opal.set_encoding(dup,"binary","internal_encoding")};Opal.last_promise=null;Opal.promise_unhandled_exception=false;Opal.queue=function(proc){if(Opal.last_promise){Opal.last_promise=Opal.last_promise.then(function(){if(!Opal.promise_unhandled_exception)return proc(Opal)})["catch"](function(error){if(Opal.respond_to(error,"$full_message"))error=error.$full_message();console.error(error);Opal.promise_unhandled_exception=
true;Opal.exit(1)});return Opal.last_promise}else{var ret=proc(Opal);if(typeof Promise==="function"&&typeof ret==="object"&&ret instanceof Promise)Opal.last_promise=ret;return ret}};function are_both_numbers(l,r){return typeof l==="number"&&typeof r==="number"}Opal.rb_plus=function(l,r){return are_both_numbers(l,r)?l+r:l["$+"](r)};Opal.rb_minus=function(l,r){return are_both_numbers(l,r)?l-r:l["$-"](r)};Opal.rb_times=function(l,r){return are_both_numbers(l,r)?l*r:l["$*"](r)};Opal.rb_divide=function(l,
r){return are_both_numbers(l,r)?l/r:l["$/"](r)};Opal.rb_lt=function(l,r){return are_both_numbers(l,r)?l<r:l["$<"](r)};Opal.rb_gt=function(l,r){return are_both_numbers(l,r)?l>r:l["$>"](r)};Opal.rb_le=function(l,r){return are_both_numbers(l,r)?l<=r:l["$<="](r)};Opal.rb_ge=function(l,r){return are_both_numbers(l,r)?l>=r:l["$>="](r)};function are_both_numbers_or_strings(lhs,rhs){return typeof lhs==="number"&&typeof rhs==="number"||typeof lhs==="string"&&typeof rhs==="string"}function $eqeq(lhs,rhs){return are_both_numbers_or_strings(lhs,
rhs)?lhs===rhs:$truthy(lhs["$=="](rhs))}Opal.eqeq=$eqeq;Opal.eqeqeq=function(lhs,rhs){return are_both_numbers_or_strings(lhs,rhs)?lhs===rhs:$truthy(lhs["$==="](rhs))};Opal.neqeq=function(lhs,rhs){return are_both_numbers_or_strings(lhs,rhs)?lhs!==rhs:$truthy(lhs["$!="](rhs))};Opal.not=function(arg){if(undefined===arg||null===arg||false===arg||nil===arg)return true;if(true===arg||arg["$!"].$$pristine)return false;return $truthy(arg["$!"]())};function $return_val(arg){return function(){return arg}}Opal.return_val=
$return_val;Opal.return_self=function(){return this};Opal.return_ivar=function(ivar){return function(){if(this[ivar]==null)return nil;return this[ivar]}};Opal.assign_ivar=function(ivar){return function(val){$deny_frozen_access(this);return this[ivar]=val}};Opal.assign_ivar_val=function(ivar,static_val){return function(){$deny_frozen_access(this);return this[ivar]=static_val}};Opal.ensure_kwargs=function(kwargs){if(kwargs==null)return Opal.hash2([],{});else if(kwargs.$$is_hash)return kwargs;else $raise(Opal.ArgumentError,
"expected kwargs")};Opal.get_kwarg=function(kwargs,key){if(!$has_own(kwargs.$$smap,key))$raise(Opal.ArgumentError,"missing keyword: "+key);return kwargs.$$smap[key]};Opal.large_array_unpack=function(str){var array=str.split(","),length=array.length,i;for(i=0;i<length;i++)switch(array[i][0]){case undefined:array[i]=nil;break;case "-":case "0":case "1":case "2":case "3":case "4":case "5":case "6":case "7":case "8":case "9":array[i]=+array[i]}return array};Opal.BasicObject=BasicObject=$allocate_class("BasicObject",
null);Opal.Object=_Object=$allocate_class("Object",Opal.BasicObject);Opal.Module=Module=$allocate_class("Module",Opal.Object);Opal.Class=Class=$allocate_class("Class",Opal.Module);Opal.Opal=_Opal=$allocate_module("Opal");Opal.Kernel=Kernel=$allocate_module("Kernel");$set_proto(Opal.BasicObject,Opal.Class.$$prototype);$set_proto(Opal.Object,Opal.Class.$$prototype);$set_proto(Opal.Module,Opal.Class.$$prototype);$set_proto(Opal.Class,Opal.Class.$$prototype);BasicObject.$$const.BasicObject=BasicObject;
$const_set(_Object,"BasicObject",BasicObject);$const_set(_Object,"Object",_Object);$const_set(_Object,"Module",Module);$const_set(_Object,"Class",Class);$const_set(_Object,"Opal",_Opal);$const_set(_Object,"Kernel",Kernel);BasicObject.$$class=Class;_Object.$$class=Class;Module.$$class=Class;Class.$$class=Class;_Opal.$$class=Module;Kernel.$$class=Module;$prop(_Object.$$prototype,"toString",function(){var to_s=this.$to_s();if(to_s.$$is_string&&typeof to_s==="object")return to_s.valueOf();else return to_s});
$prop(_Object.$$prototype,"$require",Opal.require);Opal.top=new _Object;Opal.top.$to_s=Opal.top.$inspect=$return_val("main");Opal.top.$define_method=top_define_method;function top_define_method(){var args=$slice(arguments);var block=top_define_method.$$p;top_define_method.$$p=null;return Opal.send(_Object,"define_method",args,block)}Opal.NilClass=$allocate_class("NilClass",Opal.Object);$const_set(_Object,"NilClass",Opal.NilClass);nil=Opal.nil=new Opal.NilClass;nil.$$id=nil_id;nil.call=nil.apply=function(){$raise(Opal.LocalJumpError,
"no block given")};nil.$$frozen=true;nil.$$comparable=false;Object.seal(nil);Opal.thrower=function(type){var thrower=new Error("unexpected "+type);thrower.$thrower_type=type;thrower.$throw=function(value){if(value==null)value=nil;thrower.$v=value;throw thrower;};return thrower};Opal.t_eval_return=Opal.thrower("return");TypeError.$$super=Error;Opal.file_sources={}}).call(this);Opal.loaded(["corelib/runtime.js"]);
Opal.modules["corelib/helpers"]=function(Opal){var $type_error=Opal.type_error,$coerce_to=Opal.coerce_to,$module=Opal.module,$defs=Opal.defs,$slice=Opal.slice,$eqeqeq=Opal.eqeqeq,$Kernel=Opal.Kernel,$truthy=Opal.truthy,$Opal=Opal.Opal,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("===,raise,respond_to?,nil?,__send__,<=>,class,coerce_to!,new,to_s,__id__");return function($base){var self=$module($base,"Opal");$defs(self,"$bridge",function $$bridge(constructor,klass){return Opal.bridge(constructor,klass)});
$defs(self,"$coerce_to!",function $Opal_coerce_to$excl$1(object,type,method,$a){var $post_args,args,coerced=nil;$post_args=$slice(arguments,3);args=$post_args;coerced=$coerce_to(object,type,method,args);if(!$eqeqeq(type,coerced))$Kernel.$raise($type_error(object,type,method,coerced));return coerced},-4);$defs(self,"$coerce_to?",function $Opal_coerce_to$ques$2(object,type,method,$a){var $post_args,args,coerced=nil;$post_args=$slice(arguments,3);args=$post_args;if(!$truthy(object["$respond_to?"](method)))return nil;
coerced=$coerce_to(object,type,method,args);if($truthy(coerced["$nil?"]()))return nil;if(!$eqeqeq(type,coerced))$Kernel.$raise($type_error(object,type,method,coerced));return coerced},-4);$defs(self,"$try_convert",function $$try_convert(object,type,method){if($eqeqeq(type,object))return object;if($truthy(object["$respond_to?"](method)))return object.$__send__(method);else return nil});$defs(self,"$compare",function $$compare(a,b){var compare=nil;compare=a["$<=>"](b);if($truthy(compare===nil))$Kernel.$raise($$$("ArgumentError"),
"comparison of "+a.$class()+" with "+b.$class()+" failed");return compare});$defs(self,"$destructure",function $$destructure(args){if(args.length==1)return args[0];else if(args.$$is_array)return args;else{var args_ary=new Array(args.length);for(var i=0,l=args_ary.length;i<l;i++)args_ary[i]=args[i];return args_ary}});$defs(self,"$respond_to?",function $Opal_respond_to$ques$3(obj,method,include_all){if(include_all==null)include_all=false;if(obj==null||!obj.$$class)return false;return obj["$respond_to?"](method,
include_all)},-3);$defs(self,"$instance_variable_name!",function $Opal_instance_variable_name$excl$4(name){name=$Opal["$coerce_to!"](name,$$$("String"),"to_str");if(!$truthy(/^@[a-zA-Z_][a-zA-Z0-9_]*?$/.test(name)))$Kernel.$raise($$$("NameError").$new("'"+name+"' is not allowed as an instance variable name",name));return name});$defs(self,"$class_variable_name!",function $Opal_class_variable_name$excl$5(name){name=$Opal["$coerce_to!"](name,$$$("String"),"to_str");if($truthy(name.length<3||name.slice(0,
2)!=="@@"))$Kernel.$raise($$$("NameError").$new("`"+name+"' is not allowed as a class variable name",name));return name});$defs(self,"$const_name?",function $Opal_const_name$ques$6(const_name){if(typeof const_name!=="string")const_name=$Opal["$coerce_to!"](const_name,$$$("String"),"to_str");return const_name[0]===const_name[0].toUpperCase()});$defs(self,"$const_name!",function $Opal_const_name$excl$7(const_name){var $a,self=this;if($truthy(($a=$$$("::","String","skip_raise"))?"constant":nil))const_name=
$Opal["$coerce_to!"](const_name,$$$("String"),"to_str");if(!const_name||const_name[0]!=const_name[0].toUpperCase())self.$raise($$$("NameError"),"wrong constant name "+const_name);return const_name});$defs(self,"$pristine",function $$pristine(owner_class,$a){var $post_args,method_names;$post_args=$slice(arguments,1);method_names=$post_args;var method_name,method;for(var i=method_names.length-1;i>=0;i--){method_name=method_names[i];method=owner_class.$$prototype[Opal.jsid(method_name)];if(method&&!method.$$stub)method.$$pristine=
true}return nil},-2);var inspect_stack=[];return $defs(self,"$inspect",function $$inspect(value){var e=nil;var pushed=false;return function(){try{try{if(value===null)return"null";else if(value===undefined)return"undefined";else if(typeof value.$$class==="undefined")return Object.prototype.toString.apply(value);else if(typeof value.$inspect!=="function"||value.$inspect.$$stub)return"#<"+value.$$class+":0x"+value.$__id__().$to_s(16)+">";else if(inspect_stack.indexOf(value.$__id__())!==-1)return"#<"+
value.$$class+":0x"+value.$__id__().$to_s(16)+">";else{inspect_stack.push(value.$__id__());pushed=true;return value.$inspect()}return nil}catch($err){if(Opal.rescue($err,[$$$("Exception")])){e=$err;try{return"#<"+value.$$class+":0x"+value.$__id__().$to_s(16)+">"}finally{Opal.pop_exception()}}else throw $err;}}finally{if(pushed)inspect_stack.pop()}}()},-1)}("::")};
Opal.modules["corelib/module"]=function(Opal){var $truthy=Opal.truthy,$coerce_to=Opal.coerce_to,$const_set=Opal.const_set,$Object=Opal.Object,$return_ivar=Opal.return_ivar,$assign_ivar=Opal.assign_ivar,$ivar=Opal.ivar,$deny_frozen_access=Opal.deny_frozen_access,$freeze=Opal.freeze,$prop=Opal.prop,$jsid=Opal.jsid,$klass=Opal.klass,$defs=Opal.defs,$send=Opal.send,$def=Opal.def,$eqeqeq=Opal.eqeqeq,$Module=Opal.Module,$Kernel=Opal.Kernel,$rb_lt=Opal.rb_lt,$rb_gt=Opal.rb_gt,$slice=Opal.slice,$to_a=Opal.to_a,
$hash2=Opal.hash2,$Opal=Opal.Opal,$return_val=Opal.return_val,$eqeq=Opal.eqeq,$lambda=Opal.lambda,$range=Opal.range,$send2=Opal.send2,$find_super=Opal.find_super,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("module_eval,to_proc,===,raise,equal?,<,>,nil?,attr_reader,attr_writer,warn,attr_accessor,const_name?,class_variable_name!,pristine,const_name!,=~,new,inject,split,const_get,==,start_with?,!~,bind,call,class,frozen?,name,append_features,included,cover?,size,merge,compile,proc,any?,prepend_features,prepended,to_s,__id__,constants,include?,copy_class_variables,copy_constants,class_exec,module_exec,inspect");
(function($base,$super,$parent_nesting){var self=$klass($base,$super,"Module");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$defs(self,"$allocate",function $$allocate(){var self=this;var module=Opal.allocate_module(nil,function(){});if(self!==Opal.Module)Object.setPrototypeOf(module,self.$$prototype);return module});$def(self,"$initialize",function $$initialize(){var block=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;if(block!==nil)return $send(self,"module_eval",[],block.$to_proc());
else return nil});$def(self,"$===",function $Module_$eq_eq_eq$1(object){var self=this;if($truthy(object==null))return false;return Opal.is_a(object,self)});$def(self,"$<",function $Module_$lt$2(other){var self=this;if(!$eqeqeq($Module,other))$Kernel.$raise($$$("TypeError"),"compared with non class/module");var working=self,ancestors,i,length;if(working===other)return false;for(i=0,ancestors=Opal.ancestors(self),length=ancestors.length;i<length;i++)if(ancestors[i]===other)return true;for(i=0,ancestors=
Opal.ancestors(other),length=ancestors.length;i<length;i++)if(ancestors[i]===self)return false;return nil});$def(self,"$<=",function $Module_$lt_eq$3(other){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self["$equal?"](other)))return $ret_or_1;else return $rb_lt(self,other)});$def(self,"$>",function $Module_$gt$4(other){var self=this;if(!$eqeqeq($Module,other))$Kernel.$raise($$$("TypeError"),"compared with non class/module");return $rb_lt(other,self)});$def(self,"$>=",function $Module_$gt_eq$5(other){var self=
this,$ret_or_1=nil;if($truthy($ret_or_1=self["$equal?"](other)))return $ret_or_1;else return $rb_gt(self,other)});$def(self,"$<=>",function $Module_$lt_eq_gt$6(other){var self=this,lt=nil;if(self===other)return 0;if(!$eqeqeq($Module,other))return nil;lt=$rb_lt(self,other);if($truthy(lt["$nil?"]()))return nil;if($truthy(lt))return-1;else return 1});$def(self,"$alias_method",function $$alias_method(newname,oldname){var self=this;$deny_frozen_access(self);newname=$coerce_to(newname,$$$("String"),"to_str");
oldname=$coerce_to(oldname,$$$("String"),"to_str");Opal.alias(self,newname,oldname);return self});$def(self,"$alias_native",function $$alias_native(mid,jsid){var self=this;if(jsid==null)jsid=mid;$deny_frozen_access(self);Opal.alias_native(self,mid,jsid);return self},-2);$def(self,"$ancestors",function $$ancestors(){var self=this;return Opal.ancestors(self)});$def(self,"$append_features",function $$append_features(includer){var self=this;$deny_frozen_access(includer);Opal.append_features(self,includer);
return self});$def(self,"$attr_accessor",function $$attr_accessor($a){var $post_args,names,self=this;$post_args=$slice(arguments);names=$post_args;$send(self,"attr_reader",$to_a(names));return $send(self,"attr_writer",$to_a(names))},-1);$def(self,"$attr",function $$attr($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;if(args.length==2&&(args[1]===true||args[1]===false)){self.$warn("optional boolean argument is obsoleted",$hash2(["uplevel"],{"uplevel":1}));args[1]?self.$attr_accessor(args[0]):
self.$attr_reader(args[0]);return nil}return $send(self,"attr_reader",$to_a(args))},-1);$def(self,"$attr_reader",function $$attr_reader($a){var $post_args,names,self=this;$post_args=$slice(arguments);names=$post_args;$deny_frozen_access(self);var proto=self.$$prototype;for(var i=names.length-1;i>=0;i--){var name=names[i],id=$jsid(name),ivar=$ivar(name);var body=$return_ivar(ivar);Opal.prop(proto,ivar,nil);body.$$parameters=[];body.$$arity=0;Opal.defn(self,id,body)}return nil},-1);$def(self,"$attr_writer",
function $$attr_writer($a){var $post_args,names,self=this;$post_args=$slice(arguments);names=$post_args;$deny_frozen_access(self);var proto=self.$$prototype;for(var i=names.length-1;i>=0;i--){var name=names[i],id=$jsid(name+"="),ivar=$ivar(name);var body=$assign_ivar(ivar);body.$$parameters=[["req"]];body.$$arity=1;Opal.prop(proto,ivar,nil);Opal.defn(self,id,body)}return nil},-1);$def(self,"$autoload",function $$autoload(const$,path){var self=this;$deny_frozen_access(self);if(!$$("Opal")["$const_name?"](const$))$Kernel.$raise($$$("NameError"),
"autoload must be constant name: "+const$);if(path=="")$Kernel.$raise($$$("ArgumentError"),"empty file name");if(!self.$$const.hasOwnProperty(const$)){if(!self.$$autoload)self.$$autoload={};Opal.const_cache_version++;self.$$autoload[const$]={path:path,loaded:false,required:false,success:false,exception:false};if(self.$const_added&&!self.$const_added.$$pristine)self.$const_added(const$)}return nil});$def(self,"$autoload?",function $Module_autoload$ques$7(const$){var self=this;if(self.$$autoload&&self.$$autoload[const$]&&
!self.$$autoload[const$].required&&!self.$$autoload[const$].success)return self.$$autoload[const$].path;var ancestors=self.$ancestors();for(var i=0,length=ancestors.length;i<length;i++)if(ancestors[i].$$autoload&&ancestors[i].$$autoload[const$]&&!ancestors[i].$$autoload[const$].required&&!ancestors[i].$$autoload[const$].success)return ancestors[i].$$autoload[const$].path;return nil});$def(self,"$class_variables",function $$class_variables(){var self=this;return Object.keys(Opal.class_variables(self))});
$def(self,"$class_variable_get",function $$class_variable_get(name){var self=this;name=$Opal["$class_variable_name!"](name);return Opal.class_variable_get(self,name,false)});$def(self,"$class_variable_set",function $$class_variable_set(name,value){var self=this;$deny_frozen_access(self);name=$Opal["$class_variable_name!"](name);return Opal.class_variable_set(self,name,value)});$def(self,"$class_variable_defined?",function $Module_class_variable_defined$ques$8(name){var self=this;name=$Opal["$class_variable_name!"](name);
return Opal.class_variables(self).hasOwnProperty(name)});$def(self,"$const_added",$return_val(nil));$Opal.$pristine(self,"const_added");$def(self,"$remove_class_variable",function $$remove_class_variable(name){var self=this;$deny_frozen_access(self);name=$Opal["$class_variable_name!"](name);if(Opal.hasOwnProperty.call(self.$$cvars,name)){var value=self.$$cvars[name];delete self.$$cvars[name];return value}else $Kernel.$raise($$$("NameError"),"cannot remove "+name+" for "+self)});$def(self,"$constants",
function $$constants(inherit){var self=this;if(inherit==null)inherit=true;return Opal.constants(self,inherit)},-1);$defs(self,"$constants",function $$constants(inherit){var self=this;if(inherit==null){var nesting=(self.$$nesting||[]).concat($Object),constant,constants={},i,ii;for(i=0,ii=nesting.length;i<ii;i++)for(constant in nesting[i].$$const)constants[constant]=true;return Object.keys(constants)}else return Opal.constants(self,inherit)},-1);$defs(self,"$nesting",function $$nesting(){var self=this;
return self.$$nesting||[]});$def(self,"$const_defined?",function $Module_const_defined$ques$9(name,inherit){var self=this;if(inherit==null)inherit=true;name=$$("Opal")["$const_name!"](name);if(!$truthy(name["$=~"]($$$($Opal,"CONST_NAME_REGEXP"))))$Kernel.$raise($$$("NameError").$new("wrong constant name "+name,name));var module,modules=[self],module_constants,i,ii;if(inherit){modules=modules.concat(Opal.ancestors(self));if(self.$$is_module)modules=modules.concat([$Object]).concat(Opal.ancestors($Object))}for(i=
0,ii=modules.length;i<ii;i++){module=modules[i];if(module.$$const[name]!=null)return true;if(module.$$autoload&&module.$$autoload[name]&&!module.$$autoload[name].required&&!module.$$autoload[name].success)return true}return false},-2);$def(self,"$const_get",function $$const_get(name,inherit){var self=this;if(inherit==null)inherit=true;name=$$("Opal")["$const_name!"](name);if(name.indexOf("::")===0&&name!=="::")name=name.slice(2);if($truthy(name.indexOf("::")!=-1&&name!="::"))return $send(name.$split("::"),
"inject",[self],function $$10(o,c){if(o==null)o=nil;if(c==null)c=nil;return o.$const_get(c)});if(!$truthy(name["$=~"]($$$($Opal,"CONST_NAME_REGEXP"))))$Kernel.$raise($$$("NameError").$new("wrong constant name "+name,name));if(inherit)return Opal.$$([self],name);else return Opal.const_get_local(self,name)},-2);$def(self,"$const_missing",function $$const_missing(name){var self=this,full_const_name=nil;full_const_name=$eqeq(self,$Object)?name:""+self+"::"+name;return $Kernel.$raise($$$("NameError").$new("uninitialized constant "+
full_const_name,name))});$def(self,"$const_set",function $$const_set(name,value){var self=this;$deny_frozen_access(self);name=$Opal["$const_name!"](name);if($truthy(name["$!~"]($$$($Opal,"CONST_NAME_REGEXP")))||$truthy(name["$start_with?"]("::")))$Kernel.$raise($$$("NameError").$new("wrong constant name "+name,name));$const_set(self,name,value);return value});$def(self,"$public_constant",$return_val(nil));$def(self,"$define_method",function $$define_method(name,method){var block=$$define_method.$$p||
nil,self=this,$ret_or_1=nil,$ret_or_2=nil;$$define_method.$$p=null;$deny_frozen_access(self);if(method===undefined&&block===nil)$Kernel.$raise($$$("ArgumentError"),"tried to create a Proc object without a block");block=$truthy($ret_or_1=block)?$ret_or_1:$eqeqeq($$$("Proc"),$ret_or_2=method)?method:$eqeqeq($$$("Method"),$ret_or_2)?method.$to_proc().$$unbound:$eqeqeq($$$("UnboundMethod"),$ret_or_2)?$lambda(function $$11($a){var $post_args,args,self=$$11.$$s==null?this:$$11.$$s,bound=nil;$post_args=
$slice(arguments);args=$post_args;bound=method.$bind(self);return $send(bound,"call",$to_a(args))},{$$arity:-1,$$s:self}):$Kernel.$raise($$$("TypeError"),"wrong argument type "+block.$class()+" (expected Proc/Method)");if(typeof Proxy!=="undefined"){var meta=Object.create(null);block.$$proxy_target=block;block=new Proxy(block,{apply:function(target,self,args){var old_name=target.$$jsid;target.$$jsid=name;try{return target.apply(self,args)}catch(e){if(e===target.$$brk||e===target.$$ret)return e.$v;
throw e;}finally{target.$$jsid=old_name}}})}block.$$jsid=name;block.$$s=null;block.$$def=block;block.$$define_meth=true;return Opal.defn(self,$jsid(name),block)},-2);$def(self,"$freeze",function $$freeze(){var self=this;if($truthy(self["$frozen?"]()))return self;if(!self.hasOwnProperty("$$base_module"))$prop(self,"$$base_module",null);return $freeze(self)});$def(self,"$remove_method",function $$remove_method($a){var $post_args,names,self=this;$post_args=$slice(arguments);names=$post_args;for(var i=
0;i<names.length;i++){var name=names[i];if(!(typeof name==="string"||name.$$is_string))self.$raise($$$("TypeError"),""+self.$name()+" is not a symbol nor a string");$deny_frozen_access(self);Opal.rdef(self,"$"+name)}return self},-1);$def(self,"$singleton_class?",function $Module_singleton_class$ques$12(){var self=this;return!!self.$$is_singleton});$def(self,"$include",function $$include($a){var $post_args,mods,self=this;$post_args=$slice(arguments);mods=$post_args;for(var i=mods.length-1;i>=0;i--){var mod=
mods[i];if(!mod.$$is_module)$Kernel.$raise($$$("TypeError"),"wrong argument type "+mod.$class()+" (expected Module)");mod.$append_features(self);mod.$included(self)}return self},-1);$def(self,"$included_modules",function $$included_modules(){var self=this;return Opal.included_modules(self)});$def(self,"$include?",function $Module_include$ques$13(mod){var self=this;if(!mod.$$is_module)$Kernel.$raise($$$("TypeError"),"wrong argument type "+mod.$class()+" (expected Module)");var i,ii,mod2,ancestors=
Opal.ancestors(self);for(i=0,ii=ancestors.length;i<ii;i++){mod2=ancestors[i];if(mod2===mod&&mod2!==self)return true}return false});$def(self,"$instance_method",function $$instance_method(name){var self=this;var meth=self.$$prototype[$jsid(name)];if(!meth||meth.$$stub)$Kernel.$raise($$$("NameError").$new("undefined method `"+name+"' for class `"+self.$name()+"'",name));return $$$("UnboundMethod").$new(self,meth.$$owner||self,meth,name)});$def(self,"$instance_methods",function $$instance_methods(include_super){var self=
this;if(include_super==null)include_super=true;if($truthy(include_super))return Opal.instance_methods(self);else return Opal.own_instance_methods(self)},-1);$def(self,"$included",$return_val(nil));$def(self,"$extended",$return_val(nil));$def(self,"$extend_object",function $$extend_object(object){$deny_frozen_access(object);return nil});$def(self,"$method_added",function $$method_added($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return nil},-1);$def(self,"$method_removed",
function $$method_removed($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return nil},-1);$def(self,"$method_undefined",function $$method_undefined($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return nil},-1);$def(self,"$module_eval",function $$module_eval($a){var block=$$module_eval.$$p||nil,$post_args,args,$b,self=this,string=nil,file=nil,_lineno=nil,default_eval_options=nil,$ret_or_1=nil,compiling_options=nil,compiled=nil;$$module_eval.$$p=
null;$post_args=$slice(arguments);args=$post_args;if($truthy(block["$nil?"]())&&$truthy(!!Opal.compile)){if(!$truthy($range(1,3,false)["$cover?"](args.$size())))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments (0 for 1..3)");$b=[].concat($to_a(args)),string=$b[0]==null?nil:$b[0],file=$b[1]==null?nil:$b[1],_lineno=$b[2]==null?nil:$b[2],$b;default_eval_options=$hash2(["file","eval"],{"file":$truthy($ret_or_1=file)?$ret_or_1:"(eval)","eval":true});compiling_options=Opal.hash({arity_check:false}).$merge(default_eval_options);
compiled=$Opal.$compile(string,compiling_options);block=$send($Kernel,"proc",[],function $$14(){var self=$$14.$$s==null?this:$$14.$$s;return(new Function("Opal,self","return "+compiled))(Opal,self)},{$$s:self})}else if($truthy(args["$any?"]()))$Kernel.$raise($$$("ArgumentError"),""+("wrong number of arguments ("+args.$size()+" for 0)")+"\n\n  NOTE:If you want to enable passing a String argument please add \"require 'opal-parser'\" to your script\n");var old=block.$$s,result;block.$$s=null;result=
block.apply(self,[self]);block.$$s=old;return result},-1);$def(self,"$module_exec",function $$module_exec($a){var block=$$module_exec.$$p||nil,$post_args,args,self=this;$$module_exec.$$p=null;$post_args=$slice(arguments);args=$post_args;if(block===nil)$Kernel.$raise($$$("LocalJumpError"),"no block given");var block_self=block.$$s,result;block.$$s=null;result=block.apply(self,args);block.$$s=block_self;return result},-1);$def(self,"$method_defined?",function $Module_method_defined$ques$15(method){var self=
this;var body=self.$$prototype[$jsid(method)];return!!body&&!body.$$stub});$def(self,"$module_function",function $$module_function($a){var $post_args,methods,self=this;$post_args=$slice(arguments);methods=$post_args;$deny_frozen_access(self);if(methods.length===0){self.$$module_function=true;return nil}else{for(var i=0,length=methods.length;i<length;i++){var meth=methods[i],id=$jsid(meth),func=self.$$prototype[id];Opal.defs(self,id,func)}return methods.length===1?methods[0]:methods}return self},-1);
$def(self,"$name",function $$name(){var self=this;if(self.$$full_name)return self.$$full_name;var result=[],base=self;while(base){if(base.$$name===nil||base.$$name==null)return nil;result.unshift(base.$$name);base=base.$$base_module;if(base===$Object)break}if(result.length===0)return nil;return self.$$full_name=result.join("::")});$def(self,"$prepend",function $$prepend($a){var $post_args,mods,self=this;$post_args=$slice(arguments);mods=$post_args;if(mods.length===0)$Kernel.$raise($$$("ArgumentError"),
"wrong number of arguments (given 0, expected 1+)");for(var i=mods.length-1;i>=0;i--){var mod=mods[i];if(!mod.$$is_module)$Kernel.$raise($$$("TypeError"),"wrong argument type "+mod.$class()+" (expected Module)");mod.$prepend_features(self);mod.$prepended(self)}return self},-1);$def(self,"$prepend_features",function $$prepend_features(prepender){var self=this;$deny_frozen_access(prepender);if(!self.$$is_module)$Kernel.$raise($$$("TypeError"),"wrong argument type "+self.$class()+" (expected Module)");
Opal.prepend_features(self,prepender);return self});$def(self,"$prepended",$return_val(nil));$def(self,"$remove_const",function $$remove_const(name){var self=this;$deny_frozen_access(self);return Opal.const_remove(self,name)});$def(self,"$to_s",function $$to_s(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=Opal.Module.$name.call(self)))return $ret_or_1;else return"#<"+(self.$$is_module?"Module":"Class")+":0x"+self.$__id__().$to_s(16)+">"});$def(self,"$undef_method",function $$undef_method($a){var $post_args,
names,self=this;$post_args=$slice(arguments);names=$post_args;for(var i=0;i<names.length;i++){var name=names[i];if(!(typeof name==="string"||name.$$is_string))self.$raise($$$("TypeError"),""+self.$name()+" is not a symbol nor a string");$deny_frozen_access(self);Opal.udef(self,"$"+names[i])}return self},-1);$def(self,"$instance_variables",function $$instance_variables(){var self=this,consts=nil;consts=(Opal.Module.$$nesting=$nesting,self.$constants());var result=[];for(var name in self)if(self.hasOwnProperty(name)&&
name.charAt(0)!=="$"&&name!=="constructor"&&!consts["$include?"](name))result.push("@"+name);return result});$def(self,"$dup",function $$dup(){var $yield=$$dup.$$p||nil,self=this,copy=nil;$$dup.$$p=null;copy=$send2(self,$find_super(self,"dup",$$dup,false,true),"dup",[],$yield);copy.$copy_class_variables(self);copy.$copy_constants(self);return copy});$def(self,"$copy_class_variables",function $$copy_class_variables(other){var self=this;for(var name in other.$$cvars)self.$$cvars[name]=other.$$cvars[name]});
$def(self,"$copy_constants",function $$copy_constants(other){var self=this;var name,other_constants=other.$$const;for(name in other_constants)$const_set(self,name,other_constants[name])});$def(self,"$refine",function $$refine(klass){var block=$$refine.$$p||nil,$a,self=this,refinement_module=nil,m=nil,klass_id=nil;$$refine.$$p=null;$a=[self,nil,nil],refinement_module=$a[0],m=$a[1],klass_id=$a[2],$a;klass_id=Opal.id(klass);if(typeof self.$$refine_modules==="undefined")self.$$refine_modules=Object.create(null);
if(typeof self.$$refine_modules[klass_id]==="undefined")m=self.$$refine_modules[klass_id]=$$$("Refinement").$new();else m=self.$$refine_modules[klass_id];m.refinement_module=refinement_module;m.refined_class=klass;$send(m,"class_exec",[],block.$to_proc());return m});$def(self,"$refinements",function $$refinements(){var self=this;var refine_modules=self.$$refine_modules,hash=$hash2([],{});if(typeof refine_modules==="undefined")return hash;for(var id in refine_modules)hash["$[]="](refine_modules[id].refined_class,
refine_modules[id]);return hash});$def(self,"$using",function $$using(mod){return $Kernel.$raise("Module#using is not permitted in methods")});$alias(self,"class_eval","module_eval");$alias(self,"class_exec","module_exec");return $alias(self,"inspect","to_s")})("::",null,$nesting);return function($base,$super){var self=$klass($base,$super,"Refinement");var $proto=self.$$prototype;$proto.refinement_module=$proto.refined_class=nil;self.$attr_reader("refined_class");return $def(self,"$inspect",function $$inspect(){var $yield=
$$inspect.$$p||nil,self=this;$$inspect.$$p=null;if($truthy(self.refinement_module))return"#<refinement:"+self.refined_class.$inspect()+"@"+self.refinement_module.$inspect()+">";else return $send2(self,$find_super(self,"inspect",$$inspect,false,true),"inspect",[],$yield)})}("::",$Module)};
Opal.modules["corelib/class"]=function(Opal){var $klass=Opal.klass,$send=Opal.send,$defs=Opal.defs,$def=Opal.def,$rb_plus=Opal.rb_plus,$return_val=Opal.return_val,$slice=Opal.slice,$send2=Opal.send2,$find_super=Opal.find_super,$Kernel=Opal.Kernel,$alias=Opal.alias,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,class_eval,to_proc,+,subclasses,flatten,map,initialize_copy,allocate,name,to_s,raise");self.$require("corelib/module");return function($base,$super,$parent_nesting){var self=
$klass($base,$super,"Class");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$defs(self,"$new",function $Class_new$1(superclass){var block=$Class_new$1.$$p||nil;$Class_new$1.$$p=null;if(superclass==null)superclass=$$("Object");if(!superclass.$$is_class)throw Opal.TypeError.$new("superclass must be a Class");var klass=Opal.allocate_class(nil,superclass);superclass.$inherited(klass);block!==nil?$send(klass,"class_eval",[],block.$to_proc()):nil;return klass},-1);$def(self,"$allocate",
function $$allocate(){var self=this;var obj=new self.$$constructor;obj.$$id=Opal.uid();return obj});$def(self,"$descendants",function $$descendants(){var self=this;return $rb_plus(self.$subclasses(),$send(self.$subclasses(),"map",[],"descendants".$to_proc()).$flatten())});$def(self,"$inherited",$return_val(nil));$def(self,"$initialize_dup",function $$initialize_dup(original){var self=this;self.$initialize_copy(original);self.$$name=null;self.$$full_name=null});$def(self,"$new",function $Class_new$2($a){var block=
$Class_new$2.$$p||nil,$post_args,args,self=this;$Class_new$2.$$p=null;$post_args=$slice(arguments);args=$post_args;var object=self.$allocate();Opal.send(object,object.$initialize,args,block);return object},-1);$def(self,"$subclasses",function $$subclasses(){var self=this;if(typeof WeakRef!=="undefined"){var i,subclass,out=[];for(i=0;i<self.$$subclasses.length;i++){subclass=self.$$subclasses[i].deref();if(subclass!==undefined)out.push(subclass)}return out}else return self.$$subclasses});$def(self,
"$superclass",function $$superclass(){var self=this;return self.$$super||nil});$def(self,"$to_s",function $$to_s(){var $yield=$$to_s.$$p||nil,self=this;$$to_s.$$p=null;var singleton_of=self.$$singleton_of;if(singleton_of&&singleton_of.$$is_a_module)return"#<Class:"+singleton_of.$name()+">";else if(singleton_of)return"#<Class:#<"+singleton_of.$$class.$name()+":0x"+Opal.id(singleton_of).$to_s(16)+">>";return $send2(self,$find_super(self,"to_s",$$to_s,false,true),"to_s",[],null)});$def(self,"$attached_object",
function $$attached_object(){var self=this;if(self.$$singleton_of!=null)return self.$$singleton_of;else $Kernel.$raise($$$("TypeError"),"`"+self+"' is not a singleton class")});return $alias(self,"inspect","to_s")}("::",null,$nesting)};
Opal.modules["corelib/basic_object"]=function(Opal){var $klass=Opal.klass,$slice=Opal.slice,$def=Opal.def,$alias=Opal.alias,$return_val=Opal.return_val,$Opal=Opal.Opal,$truthy=Opal.truthy,$range=Opal.range,$Kernel=Opal.Kernel,$to_a=Opal.to_a,$hash2=Opal.hash2,$send=Opal.send,$eqeq=Opal.eqeq,$rb_ge=Opal.rb_ge,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("==,raise,inspect,pristine,!,nil?,cover?,size,merge,compile,proc,[],first,>=,length,instance_variable_get,any?,new,caller");return function($base,$super){var self=
$klass($base,$super,"BasicObject");$def(self,"$initialize",function $$initialize($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return nil},-1);$def(self,"$==",function $BasicObject_$eq_eq$1(other){var self=this;return self===other});$def(self,"$eql?",function $BasicObject_eql$ques$2(other){var self=this;return self["$=="](other)});$alias(self,"equal?","==");$def(self,"$__id__",function $$__id__(){var self=this;if(self.$$id!=null)return self.$$id;Opal.prop(self,"$$id",
Opal.uid());return self.$$id});$def(self,"$__send__",function $$__send__(symbol,$a){var block=$$__send__.$$p||nil,$post_args,args,self=this;$$__send__.$$p=null;$post_args=$slice(arguments,1);args=$post_args;if(!symbol.$$is_string)self.$raise($$$("TypeError"),""+self.$inspect()+" is not a symbol nor a string");var func=self[Opal.jsid(symbol)];if(func){if(block!==nil)func.$$p=block;return func.apply(self,args)}if(block!==nil)self.$method_missing.$$p=block;return self.$method_missing.apply(self,[symbol].concat(args))},
-2);$def(self,"$!",$return_val(false));$Opal.$pristine("!");$def(self,"$!=",function $BasicObject_$not_eq$3(other){var self=this;return self["$=="](other)["$!"]()});$def(self,"$instance_eval",function $$instance_eval($a){var block=$$instance_eval.$$p||nil,$post_args,args,$b,self=this,string=nil,file=nil,_lineno=nil,default_eval_options=nil,$ret_or_1=nil,compiling_options=nil,compiled=nil;$$instance_eval.$$p=null;$post_args=$slice(arguments);args=$post_args;if($truthy(block["$nil?"]())&&$truthy(!!Opal.compile)){if(!$truthy($range(1,
3,false)["$cover?"](args.$size())))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments (0 for 1..3)");$b=[].concat($to_a(args)),string=$b[0]==null?nil:$b[0],file=$b[1]==null?nil:$b[1],_lineno=$b[2]==null?nil:$b[2],$b;default_eval_options=$hash2(["file","eval"],{"file":$truthy($ret_or_1=file)?$ret_or_1:"(eval)","eval":true});compiling_options=Opal.hash({arity_check:false}).$merge(default_eval_options);compiled=$Opal.$compile(string,compiling_options);block=$send($Kernel,"proc",[],function $$4(){var self=
$$4.$$s==null?this:$$4.$$s;return(new Function("Opal,self","return "+compiled))(Opal,self)},{$$s:self})}else if($truthy(block["$nil?"]())&&$truthy($rb_ge(args.$length(),1))&&$eqeq(args.$first()["$[]"](0),"@"))return self.$instance_variable_get(args.$first());else if($truthy(args["$any?"]()))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+args.$size()+" for 0)");var old=block.$$s,result;block.$$s=null;if(self.$$is_a_module){self.$$eval=true;try{result=block.call(self,self)}finally{self.$$eval=
false}}else result=block.call(self,self);block.$$s=old;return result},-1);$def(self,"$instance_exec",function $$instance_exec($a){var block=$$instance_exec.$$p||nil,$post_args,args,self=this;$$instance_exec.$$p=null;$post_args=$slice(arguments);args=$post_args;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),"no block given");var block_self=block.$$s,result;block.$$s=null;if(self.$$is_a_module){self.$$eval=true;try{result=block.apply(self,args)}finally{self.$$eval=false}}else result=block.apply(self,
args);block.$$s=block_self;return result},-1);$def(self,"$singleton_method_added",function $$singleton_method_added($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return nil},-1);$def(self,"$singleton_method_removed",function $$singleton_method_removed($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return nil},-1);$def(self,"$singleton_method_undefined",function $$singleton_method_undefined($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);
$fwd_rest=$post_args;return nil},-1);$def(self,"$method_missing",function $$method_missing(symbol,$a){var block=$$method_missing.$$p||nil,$post_args,args,self=this,inspect_result=nil;$$method_missing.$$p=null;$post_args=$slice(arguments,1);args=$post_args;inspect_result=$Opal.$inspect(self);return $Kernel.$raise($$$("NoMethodError").$new("undefined method `"+symbol+"' for "+inspect_result,symbol,args),nil,$Kernel.$caller(1))},-2);$Opal.$pristine(self,"method_missing");return $def(self,"$respond_to_missing?",
function $BasicObject_respond_to_missing$ques$5(method_name,include_all){if(include_all==null)include_all=false;return false},-2)}("::",null)};
Opal.modules["corelib/kernel"]=function(Opal){var $truthy=Opal.truthy,$coerce_to=Opal.coerce_to,$respond_to=Opal.respond_to,$Opal=Opal.Opal,$deny_frozen_access=Opal.deny_frozen_access,$freeze=Opal.freeze,$freeze_props=Opal.freeze_props,$jsid=Opal.jsid,$module=Opal.module,$return_val=Opal.return_val,$def=Opal.def,$Kernel=Opal.Kernel,$gvars=Opal.gvars,$slice=Opal.slice,$send=Opal.send,$to_a=Opal.to_a,$ensure_kwargs=Opal.ensure_kwargs,$eqeq=Opal.eqeq,$hash2=Opal.hash2,$rb_plus=Opal.rb_plus,$eqeqeq=Opal.eqeqeq,
$return_self=Opal.return_self,$rb_le=Opal.rb_le,$extract_kwargs=Opal.extract_kwargs,$rb_lt=Opal.rb_lt,$Object=Opal.Object,$alias=Opal.alias,$klass=Opal.klass,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("!,=~,==,object_id,raise,new,class,coerce_to?,<<,map,caller,nil?,allocate,copy_instance_variables,copy_singleton_methods,initialize_clone,frozen?,freeze,initialize_copy,define_method,singleton_class,to_proc,initialize_dup,for,empty?,pop,call,append_features,extend_object,extended,gets,__id__,include?,each,instance_variables,instance_variable_get,inspect,+,to_s,instance_variable_name!,respond_to?,to_int,coerce_to!,Integer,===,enum_for,result,any?,print,format,puts,<=,length,[],readline,<,first,split,to_str,exception,backtrace,rand,respond_to_missing?,pristine,try_convert!,expand_path,join,start_with?,new_seed,srand,tag,value,open,is_a?,__send__,yield_self,include");
(function($base,$parent_nesting){var self=$module($base,"Kernel");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$=~",$return_val(false));$def(self,"$!~",function $Kernel_$excl_tilde$1(obj){var self=this;return self["$=~"](obj)["$!"]()});$def(self,"$===",function $Kernel_$eq_eq_eq$2(other){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.$object_id()["$=="](other.$object_id())))return $ret_or_1;else return self["$=="](other)});$def(self,"$<=>",function $Kernel_$lt_eq_gt$3(other){var self=
this;self.$$comparable=true;var x=self["$=="](other);if(x&&x!==nil)return 0;return nil});$def(self,"$method",function $$method(name){var self=this;var meth=self[$jsid(name)];if(!meth||meth.$$stub)$Kernel.$raise($$$("NameError").$new("undefined method `"+name+"' for class `"+self.$class()+"'",name));return $$$("Method").$new(self,meth.$$owner||self.$class(),meth,name)});$def(self,"$methods",function $$methods(all){var self=this;if(all==null)all=true;if($truthy(all))return Opal.methods(self);else return Opal.own_methods(self)},
-1);$def(self,"$public_methods",function $$public_methods(all){var self=this;if(all==null)all=true;if($truthy(all))return Opal.methods(self);else return Opal.receiver_methods(self)},-1);$def(self,"$Array",function $$Array(object){var coerced;if(object===nil)return[];if(object.$$is_array)return object;coerced=$Opal["$coerce_to?"](object,$$$("Array"),"to_ary");if(coerced!==nil)return coerced;coerced=$Opal["$coerce_to?"](object,$$$("Array"),"to_a");if(coerced!==nil)return coerced;return[object]});$def(self,
"$at_exit",function $$at_exit(){var block=$$at_exit.$$p||nil,$ret_or_1=nil;if($gvars.__at_exit__==null)$gvars.__at_exit__=nil;$$at_exit.$$p=null;$gvars.__at_exit__=$truthy($ret_or_1=$gvars.__at_exit__)?$ret_or_1:[];$gvars.__at_exit__["$<<"](block);return block});$def(self,"$caller",function $$caller(start,length){if(start==null)start=1;if(length==null)length=nil;var stack,result;stack=(new Error).$backtrace();result=[];for(var i=start+1,ii=stack.length;i<ii;i++)if(!stack[i].match(/runtime\.js/))result.push(stack[i]);
if(length!=nil)result=result.slice(0,length);return result},-1);$def(self,"$caller_locations",function $$caller_locations($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;return $send($send(self,"caller",$to_a(args)),"map",[],function $$4(loc){if(loc==null)loc=nil;return $$$($$$($$$("Thread"),"Backtrace"),"Location").$new(loc)})},-1);$def(self,"$class",function $Kernel_class$5(){var self=this;return self.$$class});$def(self,"$copy_instance_variables",function $$copy_instance_variables(other){var self=
this;var keys=Object.keys(other),i,ii,name;for(i=0,ii=keys.length;i<ii;i++){name=keys[i];if(name.charAt(0)!=="$"&&other.hasOwnProperty(name))self[name]=other[name]}});$def(self,"$copy_singleton_methods",function $$copy_singleton_methods(other){var self=this;var i,name,names,length;if(other.hasOwnProperty("$$meta")&&other.$$meta!==null){var other_singleton_class=Opal.get_singleton_class(other);var self_singleton_class=Opal.get_singleton_class(self);names=Object.getOwnPropertyNames(other_singleton_class.$$prototype);
for(i=0,length=names.length;i<length;i++){name=names[i];if(Opal.is_method(name))self_singleton_class.$$prototype[name]=other_singleton_class.$$prototype[name]}self_singleton_class.$$const=Object.assign({},other_singleton_class.$$const);Object.setPrototypeOf(self_singleton_class.$$prototype,Object.getPrototypeOf(other_singleton_class.$$prototype))}for(i=0,names=Object.getOwnPropertyNames(other),length=names.length;i<length;i++){name=names[i];if(name.charAt(0)==="$"&&name.charAt(1)!=="$"&&other.hasOwnProperty(name))self[name]=
other[name]}});$def(self,"$clone",function $$clone($kwargs){var freeze,self=this,copy=nil;$kwargs=$ensure_kwargs($kwargs);freeze=$kwargs.$$smap["freeze"];if(freeze==null)freeze=nil;if(!($truthy(freeze["$nil?"]())||$eqeq(freeze,true)||$eqeq(freeze,false)))self.$raise($$("ArgumentError"),"unexpected value for freeze: "+freeze.$class());copy=self.$class().$allocate();copy.$copy_instance_variables(self);copy.$copy_singleton_methods(self);copy.$initialize_clone(self,$hash2(["freeze"],{"freeze":freeze}));
if($eqeq(freeze,true)||$truthy(freeze["$nil?"]())&&$truthy(self["$frozen?"]()))copy.$freeze();return copy},-1);$def(self,"$initialize_clone",function $$initialize_clone(other,$kwargs){var freeze,self=this;$kwargs=$ensure_kwargs($kwargs);freeze=$kwargs.$$smap["freeze"];if(freeze==null)freeze=nil;self.$initialize_copy(other);return self},-2);$def(self,"$define_singleton_method",function $$define_singleton_method(name,method){var block=$$define_singleton_method.$$p||nil,self=this;$$define_singleton_method.$$p=
null;return $send(self.$singleton_class(),"define_method",[name,method],block.$to_proc())},-2);$def(self,"$dup",function $$dup(){var self=this,copy=nil;copy=self.$class().$allocate();copy.$copy_instance_variables(self);copy.$initialize_dup(self);return copy});$def(self,"$initialize_dup",function $$initialize_dup(other){var self=this;return self.$initialize_copy(other)});$def(self,"$enum_for",function $$enum_for($a,$b){var block=$$enum_for.$$p||nil,$post_args,method,args,self=this;$$enum_for.$$p=null;
$post_args=$slice(arguments);if($post_args.length>0)method=$post_args.shift();if(method==null)method="each";args=$post_args;return $send($$$("Enumerator"),"for",[self,method].concat($to_a(args)),block.$to_proc())},-1);$def(self,"$equal?",function $Kernel_equal$ques$6(other){var self=this;return self===other});$def(self,"$exit",function $$exit(status){var $ret_or_1=nil,block=nil;if($gvars.__at_exit__==null)$gvars.__at_exit__=nil;if(status==null)status=true;$gvars.__at_exit__=$truthy($ret_or_1=$gvars.__at_exit__)?
$ret_or_1:[];while(!$truthy($gvars.__at_exit__["$empty?"]())){block=$gvars.__at_exit__.$pop();block.$call()}if(status.$$is_boolean)status=status?0:1;else status=$coerce_to(status,$$$("Integer"),"to_int");Opal.exit(status);return nil},-1);$def(self,"$extend",function $$extend($a){var $post_args,mods,self=this;$post_args=$slice(arguments);mods=$post_args;if(mods.length==0)self.$raise($$$("ArgumentError"),"wrong number of arguments (given 0, expected 1+)");$deny_frozen_access(self);var singleton=self.$singleton_class();
for(var i=mods.length-1;i>=0;i--){var mod=mods[i];if(!mod.$$is_module)$Kernel.$raise($$$("TypeError"),"wrong argument type "+mod.$class()+" (expected Module)");mod.$append_features(singleton);mod.$extend_object(self);mod.$extended(self)}return self},-1);$def(self,"$freeze",function $$freeze(){var self=this;if($truthy(self["$frozen?"]()))return self;if(typeof self==="object"){$freeze_props(self);return $freeze(self)}return self});$def(self,"$frozen?",function $Kernel_frozen$ques$7(){var self=this;
switch(typeof self){case "string":case "symbol":case "number":case "boolean":return true;case "object":return self.$$frozen||false;default:return false}});$def(self,"$gets",function $$gets($a){var $post_args,args;if($gvars.stdin==null)$gvars.stdin=nil;$post_args=$slice(arguments);args=$post_args;return $send($gvars.stdin,"gets",$to_a(args))},-1);$def(self,"$hash",function $$hash(){var self=this;return self.$__id__()});$def(self,"$initialize_copy",$return_val(nil));var inspect_stack=[];$def(self,"$inspect",
function $$inspect(){var self=this,ivs=nil,id=nil,pushed=nil,e=nil;return function(){try{try{ivs="";id=self.$__id__();if($truthy(inspect_stack["$include?"](id)))ivs=" ...";else{inspect_stack["$<<"](id);pushed=true;$send(self.$instance_variables(),"each",[],function $$8(i){var self=$$8.$$s==null?this:$$8.$$s,ivar=nil,inspect=nil;if(i==null)i=nil;ivar=self.$instance_variable_get(i);inspect=$$("Opal").$inspect(ivar);return ivs=$rb_plus(ivs," "+i+"="+inspect)},{$$s:self})}return"#<"+self.$class()+":0x"+
id.$to_s(16)+ivs+">"}catch($err){if(Opal.rescue($err,[$$("StandardError")])){e=$err;try{return"#<"+self.$class()+":0x"+id.$to_s(16)+">"}finally{Opal.pop_exception()}}else throw $err;}}finally{$truthy(pushed)?inspect_stack.$pop():nil}}()});$def(self,"$instance_of?",function $Kernel_instance_of$ques$9(klass){var self=this;if(!klass.$$is_class&&!klass.$$is_module)$Kernel.$raise($$$("TypeError"),"class or module required");return self.$$class===klass});$def(self,"$instance_variable_defined?",function $Kernel_instance_variable_defined$ques$10(name){var self=
this;name=$Opal["$instance_variable_name!"](name);return Opal.hasOwnProperty.call(self,name.substr(1))});$def(self,"$instance_variable_get",function $$instance_variable_get(name){var self=this;name=$Opal["$instance_variable_name!"](name);var ivar=self[Opal.ivar(name.substr(1))];return ivar==null?nil:ivar});$def(self,"$instance_variable_set",function $$instance_variable_set(name,value){var self=this;$deny_frozen_access(self);name=$Opal["$instance_variable_name!"](name);return self[Opal.ivar(name.substr(1))]=
value});$def(self,"$remove_instance_variable",function $$remove_instance_variable(name){var self=this;name=$Opal["$instance_variable_name!"](name);var key=Opal.ivar(name.substr(1)),val;if(self.hasOwnProperty(key)){val=self[key];delete self[key];return val}return $Kernel.$raise($$$("NameError"),"instance variable "+name+" not defined")});$def(self,"$instance_variables",function $$instance_variables(){var self=this;var result=[],ivar;for(var name in self)if(self.hasOwnProperty(name)&&name.charAt(0)!==
"$"){if(name.substr(-1)==="$")ivar=name.slice(0,name.length-1);else ivar=name;result.push("@"+ivar)}return result});$def(self,"$Integer",function $$Integer(value,base){var i,str,base_digits;if(!value.$$is_string){if(base!==undefined)$Kernel.$raise($$$("ArgumentError"),"base specified for non string value");if(value===nil)$Kernel.$raise($$$("TypeError"),"can't convert nil into Integer");if(value.$$is_number){if(value===Infinity||value===-Infinity||isNaN(value))$Kernel.$raise($$$("FloatDomainError"),
value);return Math.floor(value)}if(value["$respond_to?"]("to_int")){i=value.$to_int();if(i!==nil)return i}return $Opal["$coerce_to!"](value,$$$("Integer"),"to_i")}if(value==="0")return 0;if(base===undefined)base=0;else{base=$coerce_to(base,$$$("Integer"),"to_int");if(base===1||base<0||base>36)$Kernel.$raise($$$("ArgumentError"),"invalid radix "+base)}str=value.toLowerCase();str=str.replace(/(\d)_(?=\d)/g,"$1");str=str.replace(/^(\s*[+-]?)(0[bodx]?)/,function(_,head,flag){switch(flag){case "0b":if(base===
0||base===2){base=2;return head}case "0":case "0o":if(base===0||base===8){base=8;return head}case "0d":if(base===0||base===10){base=10;return head}case "0x":if(base===0||base===16){base=16;return head}}$Kernel.$raise($$$("ArgumentError"),'invalid value for Integer(): "'+value+'"')});base=base===0?10:base;base_digits="0-"+(base<=10?base-1:"9a-"+String.fromCharCode(97+(base-11)));if(!(new RegExp("^\\s*[+-]?["+base_digits+"]+\\s*$")).test(str))$Kernel.$raise($$$("ArgumentError"),'invalid value for Integer(): "'+
value+'"');i=parseInt(str,base);if(isNaN(i))$Kernel.$raise($$$("ArgumentError"),'invalid value for Integer(): "'+value+'"');return i},-2);$def(self,"$Float",function $$Float(value){var str;if(value===nil)$Kernel.$raise($$$("TypeError"),"can't convert nil into Float");if(value.$$is_string){str=value.toString();str=str.replace(/(\d)_(?=\d)/g,"$1");if(/^\s*[-+]?0[xX][0-9a-fA-F]+\s*$/.test(str))return $Kernel.$Integer(str);if(!/^\s*[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?\s*$/.test(str))$Kernel.$raise($$$("ArgumentError"),
'invalid value for Float(): "'+value+'"');return parseFloat(str)}return $Opal["$coerce_to!"](value,$$$("Float"),"to_f")});$def(self,"$Hash",function $$Hash(arg){if($truthy(arg["$nil?"]())||$eqeq(arg,[]))return $hash2([],{});if($eqeqeq($$$("Hash"),arg))return arg;return $Opal["$coerce_to!"](arg,$$$("Hash"),"to_hash")});$def(self,"$is_a?",function $Kernel_is_a$ques$11(klass){var self=this;if(!klass.$$is_class&&!klass.$$is_module)$Kernel.$raise($$$("TypeError"),"class or module required");return Opal.is_a(self,
klass)});$def(self,"$itself",$return_self);$def(self,"$lambda",function $$lambda(){var block=$$lambda.$$p||nil;$$lambda.$$p=null;return Opal.lambda(block)});$def(self,"$load",function $$load(file){file=$Opal["$coerce_to!"](file,$$$("String"),"to_str");return Opal.load(file)});$def(self,"$loop",function $$loop(){var $yield=$$loop.$$p||nil,self=this,e=nil;$$loop.$$p=null;if(!($yield!==nil))return $send(self,"enum_for",["loop"],function $$12(){return $$$($$$("Float"),"INFINITY")});while($truthy(true))try{Opal.yieldX($yield,
[])}catch($err){if(Opal.rescue($err,[$$$("StopIteration")])){e=$err;try{return e.$result()}finally{Opal.pop_exception()}}else throw $err;}return self});$def(self,"$nil?",$return_val(false));$def(self,"$printf",function $$printf($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;if($truthy(args["$any?"]()))self.$print($send(self,"format",$to_a(args)));return nil},-1);$def(self,"$proc",function $$proc(){var block=$$proc.$$p||nil;$$proc.$$p=null;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),
"tried to create Proc object without a block");block.$$is_lambda=false;return block});$def(self,"$puts",function $$puts($a){var $post_args,strs;if($gvars.stdout==null)$gvars.stdout=nil;$post_args=$slice(arguments);strs=$post_args;return $send($gvars.stdout,"puts",$to_a(strs))},-1);$def(self,"$p",function $$p($a){var $post_args,args;$post_args=$slice(arguments);args=$post_args;$send(args,"each",[],function $$13(obj){if($gvars.stdout==null)$gvars.stdout=nil;if(obj==null)obj=nil;return $gvars.stdout.$puts(obj.$inspect())});
if($truthy($rb_le(args.$length(),1)))return args["$[]"](0);else return args},-1);$def(self,"$print",function $$print($a){var $post_args,strs;if($gvars.stdout==null)$gvars.stdout=nil;$post_args=$slice(arguments);strs=$post_args;return $send($gvars.stdout,"print",$to_a(strs))},-1);$def(self,"$readline",function $$readline($a){var $post_args,args;if($gvars.stdin==null)$gvars.stdin=nil;$post_args=$slice(arguments);args=$post_args;return $send($gvars.stdin,"readline",$to_a(args))},-1);$def(self,"$warn",
function $$warn($a,$b){var $post_args,$kwargs,strs,uplevel,$c,$d,self=this,location=nil;if($gvars.VERBOSE==null)$gvars.VERBOSE=nil;if($gvars.stderr==null)$gvars.stderr=nil;$post_args=$slice(arguments);$kwargs=$extract_kwargs($post_args);$kwargs=$ensure_kwargs($kwargs);strs=$post_args;uplevel=$kwargs.$$smap["uplevel"];if(uplevel==null)uplevel=nil;if($truthy(uplevel)){uplevel=$Opal["$coerce_to!"](uplevel,$$$("Integer"),"to_str");if($truthy($rb_lt(uplevel,0)))$Kernel.$raise($$$("ArgumentError"),"negative level ("+
uplevel+")");location=($c=($d=self.$caller($rb_plus(uplevel,1),1).$first(),$d===nil||$d==null?nil:$d.$split(":in `")),$c===nil||$c==null?nil:$c.$first());if($truthy(location))location=""+location+": ";strs=$send(strs,"map",[],function $$14(s){if(s==null)s=nil;return""+location+"warning: "+s})}if($truthy($gvars.VERBOSE["$nil?"]())||$truthy(strs["$empty?"]()))return nil;else return $send($gvars.stderr,"puts",$to_a(strs))},-1);$def(self,"$raise",function $$raise(exception,string,backtrace){if($gvars["!"]==
null)$gvars["!"]=nil;if($gvars["@"]==null)$gvars["@"]=nil;if(string==null)string=nil;if(backtrace==null)backtrace=nil;if(exception==null&&$gvars["!"]!==nil)throw $gvars["!"];if(exception==null)exception=$$$("RuntimeError").$new("");else if($respond_to(exception,"$to_str"))exception=$$$("RuntimeError").$new(exception.$to_str());else if(exception.$$is_class&&$respond_to(exception,"$exception"))exception=exception.$exception(string);else if(exception.$$is_exception);else exception=$$$("TypeError").$new("exception class/object expected");
if(backtrace!==nil)exception.$set_backtrace(backtrace);if($gvars["!"]!==nil)Opal.exceptions.push($gvars["!"]);$gvars["!"]=exception;$gvars["@"]=exception.$backtrace();throw exception;},-1);$def(self,"$rand",function $$rand(max){if(max===undefined)return $$$($$$("Random"),"DEFAULT").$rand();if(max.$$is_number){if(max<0)max=Math.abs(max);if(max%1!==0)max=max.$to_i();if(max===0)max=undefined}return $$$($$$("Random"),"DEFAULT").$rand(max)},-1);$def(self,"$respond_to?",function $Kernel_respond_to$ques$15(name,
include_all){var self=this;if(include_all==null)include_all=false;var body=self[$jsid(name)];if(typeof body==="function"&&!body.$$stub)return true;if(self["$respond_to_missing?"].$$pristine===true)return false;else return self["$respond_to_missing?"](name,include_all)},-2);$def(self,"$respond_to_missing?",function $Kernel_respond_to_missing$ques$16(method_name,include_all){if(include_all==null)include_all=false;return false},-2);$Opal.$pristine(self,"respond_to?","respond_to_missing?");$def(self,
"$require",function $$require(file){if(typeof file!=="string"&&Opal.String&&Opal.Array)file=$Opal["$coerce_to!"](file,$$$("String"),"to_str");return Opal.require(file)});$def(self,"$require_relative",function $$require_relative(file){$Opal["$try_convert!"](file,$$$("String"),"to_str");file=$$$("File").$expand_path($$$("File").$join(Opal.current_file,"..",file));return Opal.require(file)});$def(self,"$require_tree",function $$require_tree(path,$kwargs){var autoload;$kwargs=$ensure_kwargs($kwargs);
autoload=$kwargs.$$smap["autoload"];if(autoload==null)autoload=false;var result=[];path=$$$("File").$expand_path(path);path=Opal.normalize(path);if(path===".")path="";for(var name in Opal.modules)if(name["$start_with?"](path))if(!autoload)result.push([name,Opal.require(name)]);else result.push([name,true]);return result},-2);$def(self,"$singleton_class",function $$singleton_class(){var self=this;return Opal.get_singleton_class(self)});$def(self,"$sleep",function $$sleep(seconds){if(seconds==null)seconds=
nil;if(seconds===nil)$Kernel.$raise($$$("TypeError"),"can't convert NilClass into time interval");if(!seconds.$$is_number)$Kernel.$raise($$$("TypeError"),"can't convert "+seconds.$class()+" into time interval");if(seconds<0)$Kernel.$raise($$$("ArgumentError"),"time interval must be positive");var get_time=Opal.global.performance?function(){return performance.now()}:function(){return new Date};var t=get_time();while(get_time()-t<=seconds*1E3);return Math.round(seconds)},-1);$def(self,"$srand",function $$srand(seed){if(seed==
null)seed=$$("Random").$new_seed();return $$$("Random").$srand(seed)},-1);$def(self,"$String",function $$String(str){var $ret_or_1=nil;if($truthy($ret_or_1=$Opal["$coerce_to?"](str,$$$("String"),"to_str")))return $ret_or_1;else return $Opal["$coerce_to!"](str,$$$("String"),"to_s")});$def(self,"$tap",function $$tap(){var block=$$tap.$$p||nil,self=this;$$tap.$$p=null;Opal.yield1(block,self);return self});$def(self,"$to_proc",$return_self);$def(self,"$to_s",function $$to_s(){var self=this;return"#<"+
self.$class()+":0x"+self.$__id__().$to_s(16)+">"});$def(self,"$catch",function $Kernel_catch$17(tag){var $yield=$Kernel_catch$17.$$p||nil,$ret_or_1=nil,e=nil;$Kernel_catch$17.$$p=null;if(tag==null)tag=nil;try{tag=$truthy($ret_or_1=tag)?$ret_or_1:$Object.$new();return Opal.yield1($yield,tag)}catch($err){if(Opal.rescue($err,[$$$("UncaughtThrowError")])){e=$err;try{if($eqeq(e.$tag(),tag))return e.$value();return $Kernel.$raise()}finally{Opal.pop_exception()}}else throw $err;}},-1);$def(self,"$throw",
function $Kernel_throw$18(tag,obj){if(obj==null)obj=nil;return $Kernel.$raise($$$("UncaughtThrowError").$new(tag,obj))},-2);$def(self,"$open",function $$open($a){var block=$$open.$$p||nil,$post_args,args;$$open.$$p=null;$post_args=$slice(arguments);args=$post_args;return $send($$$("File"),"open",$to_a(args),block.$to_proc())},-1);$def(self,"$yield_self",function $$yield_self(){var $yield=$$yield_self.$$p||nil,self=this;$$yield_self.$$p=null;if(!($yield!==nil))return $send(self,"enum_for",["yield_self"],
$return_val(1));return Opal.yield1($yield,self)});$alias(self,"fail","raise");$alias(self,"kind_of?","is_a?");$alias(self,"object_id","__id__");$alias(self,"public_send","__send__");$alias(self,"send","__send__");$alias(self,"then","yield_self");return $alias(self,"to_enum","enum_for")})("::",$nesting);return function($base,$super){var self=$klass($base,$super,"Object");delete $Object.$$prototype.$require;return self.$include($Kernel)}("::",null)};
Opal.modules["corelib/main"]=function(Opal){var $return_val=Opal.return_val,$def=Opal.def,$Object=Opal.Object,$slice=Opal.slice,$Kernel=Opal.Kernel,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("include,raise");return function(self,$parent_nesting){$def(self,"$to_s",$return_val("main"));$def(self,"$include",function $$include(mod){return $Object.$include(mod)});$def(self,"$autoload",function $$autoload($a){var $post_args,args;$post_args=$slice(arguments);args=$post_args;return Opal.Object.$autoload.apply(Opal.Object,
args)},-1);return $def(self,"$using",function $$using(mod){return $Kernel.$raise("main.using is permitted only at toplevel")})}(Opal.get_singleton_class(self),$nesting)};
Opal.modules["corelib/error/errno"]=function(Opal){var $module=Opal.module,$truthy=Opal.truthy,$rb_plus=Opal.rb_plus,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$klass=Opal.klass,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("+,errno,class,attr_reader");(function($base,$parent_nesting){var self=$module($base,"Errno");var $nesting=[self].concat($parent_nesting),errors=nil,klass=nil;errors=[["EINVAL","Invalid argument",22],["EEXIST","File exists",17],["EISDIR","Is a directory",
21],["EMFILE","Too many open files",24],["ESPIPE","Illegal seek",29],["EACCES","Permission denied",13],["EPERM","Operation not permitted",1],["ENOENT","No such file or directory",2],["ENAMETOOLONG","File name too long",36]];klass=nil;var i;for(i=0;i<errors.length;i++)(function(){var class_name=errors[i][0];var default_message=errors[i][1];var errno=errors[i][2];klass=Opal.klass(self,Opal.SystemCallError,class_name);klass.errno=errno;(function(self,$parent_nesting){return $def(self,"$new",function $new$1(name){var $yield=
$new$1.$$p||nil,self=this,message=nil;$new$1.$$p=null;if(name==null)name=nil;message=default_message;if($truthy(name))message=$rb_plus(message," - "+name);return $send2(self,$find_super(self,"new",$new$1,false,true),"new",[message],null)},-1)})(Opal.get_singleton_class(klass),$nesting)})()})("::",$nesting);return function($base,$super,$parent_nesting){var self=$klass($base,$super,"SystemCallError");var $nesting=[self].concat($parent_nesting);$def(self,"$errno",function $$errno(){var self=this;return self.$class().$errno()});
return function(self,$parent_nesting){return self.$attr_reader("errno")}(Opal.get_singleton_class(self),$nesting)}("::",$$$("StandardError"),$nesting)};
Opal.modules["corelib/error"]=function(Opal){var $klass=Opal.klass,$slice=Opal.slice,$gvars=Opal.gvars,$defs=Opal.defs,$send=Opal.send,$to_a=Opal.to_a,$def=Opal.def,$truthy=Opal.truthy,$hash2=Opal.hash2,$Kernel=Opal.Kernel,$not=Opal.not,$rb_plus=Opal.rb_plus,$eqeq=Opal.eqeq,$Object=Opal.Object,$ensure_kwargs=Opal.ensure_kwargs,$send2=Opal.send2,$find_super=Opal.find_super,$module=Opal.module,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("new,map,backtrace,clone,to_s,merge,tty?,[],include?,raise,dup,empty?,!,caller,shift,+,class,join,cause,full_message,==,reverse,split,autoload,attr_reader,inspect");
(function($base,$super,$parent_nesting){var self=$klass($base,$super,"Exception");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.message=nil;Opal.prop(self.$$prototype,"$$is_exception",true);var stack_trace_limit;Error.stackTraceLimit=100;$defs(self,"$new",function $Exception_new$1($a){var $post_args,args,self=this;if($gvars["!"]==null)$gvars["!"]=nil;$post_args=$slice(arguments);args=$post_args;var message=args.length>0?args[0]:nil;var error=new self.$$constructor(message);
error.name=self.$$name;error.message=message;error.cause=$gvars["!"];Opal.send(error,error.$initialize,args);if(Opal.config.enable_stack_trace&&Error.captureStackTrace)Error.captureStackTrace(error,stack_trace_limit);return error},-1);stack_trace_limit=self.$new;$defs(self,"$exception",function $$exception($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;return $send(self,"new",$to_a(args))},-1);$def(self,"$initialize",function $$initialize($a){var $post_args,args,self=
this;$post_args=$slice(arguments);args=$post_args;return self.message=args.length>0?args[0]:nil},-1);function correct_backtrace(backtrace){var new_bt=[],m;for(var i=0;i<backtrace.length;i++){var loc=backtrace[i];if(!loc||!loc.$$is_string);else if(m=loc.match(/^    at (.*?) \((.*?)\)$/))new_bt.push(m[2]+":in `"+m[1]+"'");else if(m=loc.match(/^    at (.*?)$/))new_bt.push(m[1]+":in `undefined'");else if(m=loc.match(/^  from (.*?)$/))new_bt.push(m[1]);else if(m=loc.match(/^(.*?)@(.*?)$/))new_bt.push(m[2]+
":in `"+m[1]+"'")}return new_bt}$def(self,"$backtrace",function $$backtrace(){var self=this;if(self.backtrace)return self.backtrace;var backtrace=self.stack;if(typeof backtrace!=="undefined"&&backtrace.$$is_string)return self.backtrace=correct_backtrace(backtrace.split("\n"));else if(backtrace)return self.backtrace=correct_backtrace(backtrace);return[]});$def(self,"$backtrace_locations",function $$backtrace_locations(){var $a,self=this;if(self.backtrace_locations)return self.backtrace_locations;self.backtrace_locations=
($a=self.$backtrace(),$a===nil||$a==null?nil:$send($a,"map",[],function $$2(loc){if(loc==null)loc=nil;return $$$($$$($$$("Thread"),"Backtrace"),"Location").$new(loc)}));return self.backtrace_locations});$def(self,"$cause",function $$cause(){var self=this;return self.cause||nil});$def(self,"$exception",function $$exception(str){var self=this;if(str==null)str=nil;if(str===nil||self===str)return self;var cloned=self.$clone();cloned.message=str;if(self.backtrace)cloned.backtrace=self.backtrace.$dup();
cloned.stack=self.stack;cloned.cause=self.cause;return cloned},-1);$def(self,"$message",function $$message(){var self=this;return self.$to_s()});$def(self,"$full_message",function $$full_message(kwargs){var $a,$b,self=this,$ret_or_1=nil,highlight=nil,order=nil,bold_underline=nil,bold=nil,reset=nil,bt=nil,first=nil,msg=nil;if($gvars.stderr==null)$gvars.stderr=nil;if(kwargs==null)kwargs=nil;if(!$truthy(($a=$$("Hash","skip_raise"))?"constant":nil))return""+self.message+"\n"+self.stack;kwargs=$hash2(["highlight",
"order"],{"highlight":$gvars.stderr["$tty?"](),"order":"top"}).$merge($truthy($ret_or_1=kwargs)?$ret_or_1:$hash2([],{}));$b=[kwargs["$[]"]("highlight"),kwargs["$[]"]("order")],highlight=$b[0],order=$b[1],$b;if(!$truthy([true,false]["$include?"](highlight)))$Kernel.$raise($$$("ArgumentError"),"expected true or false as highlight: "+highlight);if(!$truthy(["top","bottom"]["$include?"](order)))$Kernel.$raise($$$("ArgumentError"),"expected :top or :bottom as order: "+order);if($truthy(highlight)){bold_underline=
"\u001b[1;4m";bold="\u001b[1m";reset="\u001b[m"}else bold_underline=bold=reset="";bt=self.$backtrace().$dup();if($not(bt)||$truthy(bt["$empty?"]()))bt=self.$caller();first=bt.$shift();msg=""+first+": ";msg=$rb_plus(msg,""+bold+self.$to_s()+" ("+bold_underline+self.$class()+reset+bold+")"+reset+"\n");msg=$rb_plus(msg,$send(bt,"map",[],function $$3(loc){if(loc==null)loc=nil;return"\tfrom "+loc+"\n"}).$join());if($truthy(self.$cause()))msg=$rb_plus(msg,self.$cause().$full_message($hash2(["highlight"],
{"highlight":highlight})));if($eqeq(order,"bottom")){msg=msg.$split("\n").$reverse().$join("\n");msg=$rb_plus(""+bold+"Traceback"+reset+" (most recent call last):\n",msg)}return msg},-1);$def(self,"$inspect",function $$inspect(){var self=this,as_str=nil;as_str=self.$to_s();if($truthy(as_str["$empty?"]()))return self.$class().$to_s();else return"#<"+self.$class().$to_s()+": "+self.$to_s()+">"});$def(self,"$set_backtrace",function $$set_backtrace(backtrace){var self=this;var valid=true,i,ii;if(backtrace===
nil){self.backtrace=nil;self.stack=""}else if(backtrace.$$is_string){self.backtrace=[backtrace];self.stack="  from "+backtrace}else{if(backtrace.$$is_array)for(i=0,ii=backtrace.length;i<ii;i++){if(!backtrace[i].$$is_string){valid=false;break}}else valid=false;if(valid===false)$Kernel.$raise($$$("TypeError"),"backtrace must be Array of String");self.backtrace=backtrace;self.stack=$send(backtrace,"map",[],function $$4(i){if(i==null)i=nil;return $rb_plus("  from ",i)}).join("\n")}return backtrace});
return $def(self,"$to_s",function $$to_s(){var self=this,$ret_or_1=nil,$ret_or_2=nil;if($truthy($ret_or_1=$truthy($ret_or_2=self.message)?self.message.$to_s():$ret_or_2))return $ret_or_1;else return self.$class().$to_s()})})("::",Error,$nesting);$klass("::",$$$("Exception"),"ScriptError");$klass("::",$$$("ScriptError"),"SyntaxError");$klass("::",$$$("ScriptError"),"LoadError");$klass("::",$$$("ScriptError"),"NotImplementedError");$klass("::",$$$("Exception"),"SystemExit");$klass("::",$$$("Exception"),
"NoMemoryError");$klass("::",$$$("Exception"),"SignalException");$klass("::",$$$("SignalException"),"Interrupt");$klass("::",$$$("Exception"),"SecurityError");$klass("::",$$$("Exception"),"SystemStackError");$klass("::",$$$("Exception"),"StandardError");$klass("::",$$$("StandardError"),"EncodingError");$klass("::",$$$("StandardError"),"ZeroDivisionError");$klass("::",$$$("StandardError"),"NameError");$klass("::",$$$("NameError"),"NoMethodError");$klass("::",$$$("StandardError"),"RuntimeError");$klass("::",
$$$("RuntimeError"),"FrozenError");$klass("::",$$$("StandardError"),"LocalJumpError");$klass("::",$$$("StandardError"),"TypeError");$klass("::",$$$("StandardError"),"ArgumentError");$klass("::",$$$("ArgumentError"),"UncaughtThrowError");$klass("::",$$$("StandardError"),"IndexError");$klass("::",$$$("IndexError"),"StopIteration");$klass("::",$$$("StopIteration"),"ClosedQueueError");$klass("::",$$$("IndexError"),"KeyError");$klass("::",$$$("StandardError"),"RangeError");$klass("::",$$$("RangeError"),
"FloatDomainError");$klass("::",$$$("StandardError"),"IOError");$klass("::",$$$("IOError"),"EOFError");$klass("::",$$$("StandardError"),"SystemCallError");$klass("::",$$$("StandardError"),"RegexpError");$klass("::",$$$("StandardError"),"ThreadError");$klass("::",$$$("StandardError"),"FiberError");$Object.$autoload("Errno","corelib/error/errno");(function($base,$super){var self=$klass($base,$super,"FrozenError");self.$attr_reader("receiver");return $def(self,"$initialize",function $$initialize(message,
$kwargs){var receiver,$yield=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;$kwargs=$ensure_kwargs($kwargs);receiver=$kwargs.$$smap["receiver"];if(receiver==null)receiver=nil;$send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",[message],null);return self.receiver=receiver},-2)})("::",$$$("RuntimeError"));(function($base,$super){var self=$klass($base,$super,"UncaughtThrowError");var $proto=self.$$prototype;$proto.tag=nil;self.$attr_reader("tag","value");return $def(self,
"$initialize",function $$initialize(tag,value){var $yield=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;if(value==null)value=nil;self.tag=tag;self.value=value;return $send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",["uncaught throw "+self.tag.$inspect()],null)},-2)})("::",$$$("ArgumentError"));(function($base,$super){var self=$klass($base,$super,"NameError");self.$attr_reader("name");return $def(self,"$initialize",function $$initialize(message,name){var $yield=
$$initialize.$$p||nil,self=this;$$initialize.$$p=null;if(name==null)name=nil;$send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",[message],null);return self.name=name},-2)})("::",null);(function($base,$super){var self=$klass($base,$super,"NoMethodError");self.$attr_reader("args");return $def(self,"$initialize",function $$initialize(message,name,args){var $yield=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;if(name==null)name=nil;if(args==null)args=[];$send2(self,
$find_super(self,"initialize",$$initialize,false,true),"initialize",[message,name],null);return self.args=args},-2)})("::",null);(function($base,$super){var self=$klass($base,$super,"StopIteration");return self.$attr_reader("result")})("::",null);(function($base,$super){var self=$klass($base,$super,"KeyError");var $proto=self.$$prototype;$proto.receiver=$proto.key=nil;$def(self,"$initialize",function $$initialize(message,$kwargs){var receiver,key,$yield=$$initialize.$$p||nil,self=this;$$initialize.$$p=
null;$kwargs=$ensure_kwargs($kwargs);receiver=$kwargs.$$smap["receiver"];if(receiver==null)receiver=nil;key=$kwargs.$$smap["key"];if(key==null)key=nil;$send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",[message],null);self.receiver=receiver;return self.key=key},-2);$def(self,"$receiver",function $$receiver(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.receiver))return $ret_or_1;else return $Kernel.$raise($$$("ArgumentError"),"no receiver is available")});return $def(self,
"$key",function $$key(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.key))return $ret_or_1;else return $Kernel.$raise($$$("ArgumentError"),"no key is available")})})("::",null);return function($base,$parent_nesting){var self=$module($base,"JS");var $nesting=[self].concat($parent_nesting);return $klass($nesting[0],null,"Error"),nil}("::",$nesting)};
Opal.modules["corelib/constants"]=function(Opal){var $const_set=Opal.const_set,nil=Opal.nil,$$$=Opal.$$$;$const_set("::","RUBY_PLATFORM","opal");$const_set("::","RUBY_ENGINE","opal");$const_set("::","RUBY_VERSION","3.2.0");$const_set("::","RUBY_ENGINE_VERSION","1.7.3");$const_set("::","RUBY_RELEASE_DATE","2023-03-23");$const_set("::","RUBY_PATCHLEVEL",0);$const_set("::","RUBY_REVISION","0");$const_set("::","RUBY_COPYRIGHT","opal - Copyright (C) 2011-2023 Adam Beynon and the Opal contributors");return $const_set("::",
"RUBY_DESCRIPTION","opal "+$$$("RUBY_ENGINE_VERSION")+" ("+$$$("RUBY_RELEASE_DATE")+" revision "+$$$("RUBY_REVISION")+")")};
Opal.modules["opal/base"]=function(Opal){var $Object=Opal.Object,nil=Opal.nil;Opal.add_stubs("require");$Object.$require("corelib/runtime");$Object.$require("corelib/helpers");$Object.$require("corelib/module");$Object.$require("corelib/class");$Object.$require("corelib/basic_object");$Object.$require("corelib/kernel");$Object.$require("corelib/main");$Object.$require("corelib/error");return $Object.$require("corelib/constants")};
Opal.modules["corelib/nil"]=function(Opal){var $klass=Opal.klass,$Kernel=Opal.Kernel,$def=Opal.def,$return_val=Opal.return_val,$ensure_kwargs=Opal.ensure_kwargs,$NilClass=Opal.NilClass,$slice=Opal.slice,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("raise,name,new,>,length,Rational,to_i");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"NilClass");var $nesting=[self].concat($parent_nesting);self.$$prototype.$$meta=
self;(function(self,$parent_nesting){$def(self,"$allocate",function $$allocate(){var self=this;return $Kernel.$raise($$$("TypeError"),"allocator undefined for "+self.$name())});Opal.udef(self,"$"+"new");return nil})(Opal.get_singleton_class(self),$nesting);$def(self,"$!",$return_val(true));$def(self,"$&",$return_val(false));$def(self,"$|",function $NilClass_$$1(other){return other!==false&&other!==nil});$def(self,"$^",function $NilClass_$$2(other){return other!==false&&other!==nil});$def(self,"$==",
function $NilClass_$eq_eq$3(other){return other===nil});$def(self,"$dup",$return_val(nil));$def(self,"$clone",function $$clone($kwargs){var freeze;$kwargs=$ensure_kwargs($kwargs);freeze=$kwargs.$$smap["freeze"];if(freeze==null)freeze=true;return nil},-1);$def(self,"$inspect",$return_val("nil"));$def(self,"$nil?",$return_val(true));$def(self,"$singleton_class",function $$singleton_class(){return $NilClass});$def(self,"$to_a",function $$to_a(){return[]});$def(self,"$to_h",function $$to_h(){return Opal.hash()});
$def(self,"$to_i",$return_val(0));$def(self,"$to_s",$return_val(""));$def(self,"$to_c",function $$to_c(){return $$$("Complex").$new(0,0)});$def(self,"$rationalize",function $$rationalize($a){var $post_args,args;$post_args=$slice(arguments);args=$post_args;if($truthy($rb_gt(args.$length(),1)))$Kernel.$raise($$$("ArgumentError"));return $Kernel.$Rational(0,1)},-1);$def(self,"$to_r",function $$to_r(){return $Kernel.$Rational(0,1)});$def(self,"$instance_variables",function $$instance_variables(){return[]});
return $alias(self,"to_f","to_i")}("::",null,$nesting)};
Opal.modules["corelib/boolean"]=function(Opal){var $klass=Opal.klass,$Kernel=Opal.Kernel,$def=Opal.def,$return_self=Opal.return_self,$ensure_kwargs=Opal.ensure_kwargs,$slice=Opal.slice,$truthy=Opal.truthy,$send2=Opal.send2,$find_super=Opal.find_super,$to_a=Opal.to_a,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("raise,name,==,to_s,__id__");(function($base,$super,$parent_nesting){var self=$klass($base,$super,"Boolean");var $nesting=[self].concat($parent_nesting);Opal.prop(self.$$prototype,
"$$is_boolean",true);var properties=["$$class","$$meta"];for(var i=0;i<properties.length;i++)Object.defineProperty(self.$$prototype,properties[i],{configurable:true,enumerable:false,get:function(){return this==true?Opal.TrueClass:this==false?Opal.FalseClass:Opal.Boolean}});Object.defineProperty(self.$$prototype,"$$id",{configurable:true,enumerable:false,get:function(){return this==true?2:this==false?0:nil}});(function(self,$parent_nesting){$def(self,"$allocate",function $$allocate(){var self=this;
return $Kernel.$raise($$$("TypeError"),"allocator undefined for "+self.$name())});Opal.udef(self,"$"+"new");return nil})(Opal.get_singleton_class(self),$nesting);$def(self,"$__id__",function $$__id__(){var self=this;return self.valueOf()?2:0});$def(self,"$!",function $Boolean_$excl$1(){var self=this;return self!=true});$def(self,"$&",function $Boolean_$$2(other){var self=this;return self==true?other!==false&&other!==nil:false});$def(self,"$|",function $Boolean_$$3(other){var self=this;return self==
true?true:other!==false&&other!==nil});$def(self,"$^",function $Boolean_$$4(other){var self=this;return self==true?other===false||other===nil:other!==false&&other!==nil});$def(self,"$==",function $Boolean_$eq_eq$5(other){var self=this;return self==true===other.valueOf()});$def(self,"$singleton_class",function $$singleton_class(){var self=this;return self.$$meta});$def(self,"$to_s",function $$to_s(){var self=this;return self==true?"true":"false"});$def(self,"$dup",$return_self);$def(self,"$clone",
function $$clone($kwargs){var freeze,self=this;$kwargs=$ensure_kwargs($kwargs);freeze=$kwargs.$$smap["freeze"];if(freeze==null)freeze=true;return self},-1);$def(self,"$method_missing",function $$method_missing(method,$a){var block=$$method_missing.$$p||nil,$post_args,args,self=this;$$method_missing.$$p=null;$post_args=$slice(arguments,1);args=$post_args;var body=self.$$class.$$prototype[Opal.jsid(method)];if(!$truthy(typeof body!=="undefined"&&!body.$$stub))$send2(self,$find_super(self,"method_missing",
$$method_missing,false,true),"method_missing",[method].concat($to_a(args)),block);return Opal.send(self,body,args,block)},-2);$def(self,"$respond_to_missing?",function $Boolean_respond_to_missing$ques$6(method,_include_all){var self=this;if(_include_all==null)_include_all=false;var body=self.$$class.$$prototype[Opal.jsid(method)];return typeof body!=="undefined"&&!body.$$stub},-2);$alias(self,"eql?","==");$alias(self,"equal?","==");$alias(self,"inspect","to_s");return $alias(self,"object_id","__id__")})("::",
Boolean,$nesting);$klass("::",$$$("Boolean"),"TrueClass");return $klass("::",$$$("Boolean"),"FalseClass"),nil};
Opal.modules["corelib/comparable"]=function(Opal){var $truthy=Opal.truthy,$module=Opal.module,$rb_gt=Opal.rb_gt,$rb_lt=Opal.rb_lt,$eqeqeq=Opal.eqeqeq,$Kernel=Opal.Kernel,$def=Opal.def,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs(">,<,===,raise,class,<=>,equal?");return function($base){var self=$module($base,"Comparable");var $ret_or_1=nil;function normalize(what){if(Opal.is_a(what,Opal.Integer))return what;if($rb_gt(what,0))return 1;if($rb_lt(what,0))return-1;return 0}function fail_comparison(lhs,rhs){var class_name;
$eqeqeq(nil,$ret_or_1=rhs)||($eqeqeq(true,$ret_or_1)||($eqeqeq(false,$ret_or_1)||($eqeqeq($$$("Integer"),$ret_or_1)||$eqeqeq($$$("Float"),$ret_or_1))))?class_name=rhs.$inspect():class_name=rhs.$$class;$Kernel.$raise($$$("ArgumentError"),"comparison of "+lhs.$class()+" with "+class_name+" failed")}function cmp_or_fail(lhs,rhs){var cmp=lhs["$<=>"](rhs);if(!$truthy(cmp))fail_comparison(lhs,rhs);return normalize(cmp)}$def(self,"$==",function $Comparable_$eq_eq$1(other){var self=this,cmp=nil;if($truthy(self["$equal?"](other)))return true;
if(self["$<=>"]==Opal.Kernel["$<=>"])return false;if(self.$$comparable){self.$$comparable=false;return false}if(!$truthy(cmp=self["$<=>"](other)))return false;return normalize(cmp)==0});$def(self,"$>",function $Comparable_$gt$2(other){var self=this;return cmp_or_fail(self,other)>0});$def(self,"$>=",function $Comparable_$gt_eq$3(other){var self=this;return cmp_or_fail(self,other)>=0});$def(self,"$<",function $Comparable_$lt$4(other){var self=this;return cmp_or_fail(self,other)<0});$def(self,"$<=",
function $Comparable_$lt_eq$5(other){var self=this;return cmp_or_fail(self,other)<=0});$def(self,"$between?",function $Comparable_between$ques$6(min,max){var self=this;if($rb_lt(self,min))return false;if($rb_gt(self,max))return false;return true});return $def(self,"$clamp",function $$clamp(min,max){var self=this;if(max==null)max=nil;var c,excl;if(max===nil){if(!Opal.is_a(min,Opal.Range))$Kernel.$raise($$$("TypeError"),"wrong argument type "+min.$class()+" (expected Range)");excl=min.excl;max=min.end;
min=min.begin;if(max!==nil&&excl)$Kernel.$raise($$$("ArgumentError"),"cannot clamp with an exclusive range")}if(min!==nil&&max!==nil&&cmp_or_fail(min,max)>0)$Kernel.$raise($$$("ArgumentError"),"min argument must be smaller than max argument");if(min!==nil){c=cmp_or_fail(self,min);if(c==0)return self;if(c<0)return min}if(max!==nil){c=cmp_or_fail(self,max);if(c>0)return max}return self},-2)}("::")};
Opal.modules["corelib/regexp"]=function(Opal){var $coerce_to=Opal.coerce_to,$prop=Opal.prop,$freeze=Opal.freeze,$klass=Opal.klass,$const_set=Opal.const_set,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$truthy=Opal.truthy,$gvars=Opal.gvars,$slice=Opal.slice,$Kernel=Opal.Kernel,$Opal=Opal.Opal,$alias=Opal.alias,$send=Opal.send,$hash2=Opal.hash2,$rb_plus=Opal.rb_plus,$ensure_kwargs=Opal.ensure_kwargs,$rb_ge=Opal.rb_ge,$to_a=Opal.to_a,$eqeqeq=Opal.eqeqeq,$rb_minus=Opal.rb_minus,$return_ivar=
Opal.return_ivar,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("nil?,[],raise,escape,options,to_str,new,join,coerce_to!,!,match,coerce_to?,begin,frozen?,uniq,map,scan,source,to_proc,transform_values,group_by,each_with_index,+,last,=~,==,attr_reader,>=,length,is_a?,include?,names,regexp,named_captures,===,captures,-,inspect,empty?,each,to_a");$klass("::",$$$("StandardError"),"RegexpError");(function($base,$super,$parent_nesting){var self=$klass($base,$super,"Regexp");var $nesting=[self].concat($parent_nesting),
$$=Opal.$r($nesting);$const_set(self,"IGNORECASE",1);$const_set(self,"EXTENDED",2);$const_set(self,"MULTILINE",4);Opal.prop(self.$$prototype,"$$is_regexp",true);(function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$allocate",function $$allocate(){var $yield=$$allocate.$$p||nil,self=this,allocated=nil;$$allocate.$$p=null;allocated=$send2(self,$find_super(self,"allocate",$$allocate,false,true),"allocate",[],$yield);allocated.uninitialized=true;
return allocated});$def(self,"$escape",function $$escape(string){return Opal.escape_regexp(string)});$def(self,"$last_match",function $$last_match(n){if($gvars["~"]==null)$gvars["~"]=nil;if(n==null)n=nil;if($truthy(n["$nil?"]()))return $gvars["~"];else if($truthy($gvars["~"]))return $gvars["~"]["$[]"](n);else return nil},-1);$def(self,"$union",function $$union($a){var $post_args,parts,self=this;$post_args=$slice(arguments);parts=$post_args;var is_first_part_array,quoted_validated,part,options,each_part_options;
if(parts.length==0)return/(?!)/;if(parts.length==1&&parts[0].$$is_regexp)return parts[0];is_first_part_array=parts[0].$$is_array;if(parts.length>1&&is_first_part_array)$Kernel.$raise($$$("TypeError"),"no implicit conversion of Array into String");if(is_first_part_array)parts=parts[0];options=undefined;quoted_validated=[];for(var i=0;i<parts.length;i++){part=parts[i];if(part.$$is_string)quoted_validated.push(self.$escape(part));else if(part.$$is_regexp){each_part_options=part.$options();if(options!=
undefined&&options!=each_part_options)$Kernel.$raise($$$("TypeError"),"All expressions must use the same options");options=each_part_options;quoted_validated.push("("+part.source+")")}else quoted_validated.push(self.$escape(part.$to_str()))}return self.$new(quoted_validated.$join("|"),options)},-1);$def(self,"$new",function $new$1(regexp,options){if(regexp.$$is_regexp)return new RegExp(regexp);regexp=$Opal["$coerce_to!"](regexp,$$$("String"),"to_str");if(regexp.charAt(regexp.length-1)==="\\"&&regexp.charAt(regexp.length-
2)!=="\\")$Kernel.$raise($$$("RegexpError"),"too short escape sequence: /"+regexp+"/");regexp=regexp.replace("\\A","^").replace("\\z","$");if(options===undefined||options["$!"]())return new RegExp(regexp);if(options.$$is_number){var temp="";if($$("IGNORECASE")&options)temp+="i";if($$("MULTILINE")&options)temp+="m";options=temp}else options="i";return new RegExp(regexp,options)},-2);$alias(self,"compile","new");return $alias(self,"quote","escape")})(Opal.get_singleton_class(self),$nesting);$def(self,
"$==",function $Regexp_$eq_eq$2(other){var self=this;return other instanceof RegExp&&self.toString()===other.toString()});$def(self,"$===",function $Regexp_$eq_eq_eq$3(string){var self=this;return self.$match($Opal["$coerce_to?"](string,$$$("String"),"to_str"))!==nil});$def(self,"$=~",function $Regexp_$eq_tilde$4(string){var self=this,$ret_or_1=nil;if($gvars["~"]==null)$gvars["~"]=nil;if($truthy($ret_or_1=self.$match(string)))return $gvars["~"].$begin(0);else return $ret_or_1});$def(self,"$freeze",
function $$freeze(){var self=this;if($truthy(self["$frozen?"]()))return self;if(!self.hasOwnProperty("$$g"))$prop(self,"$$g",null);if(!self.hasOwnProperty("$$gm"))$prop(self,"$$gm",null);return $freeze(self)});$def(self,"$inspect",function $$inspect(){var self=this;var regexp_format=/^\/(.*)\/([^\/]*)$/;var value=self.toString();var matches=regexp_format.exec(value);if(matches){var regexp_pattern=matches[1];var regexp_flags=matches[2];var chars=regexp_pattern.split("");var chars_length=chars.length;
var char_escaped=false;var regexp_pattern_escaped="";for(var i=0;i<chars_length;i++){var current_char=chars[i];if(!char_escaped&&current_char=="/")regexp_pattern_escaped=regexp_pattern_escaped.concat("\\");regexp_pattern_escaped=regexp_pattern_escaped.concat(current_char);if(current_char=="\\")if(char_escaped)char_escaped=false;else char_escaped=true;else char_escaped=false}return"/"+regexp_pattern_escaped+"/"+regexp_flags}else return value});$def(self,"$match",function $$match(string,pos){var block=
$$match.$$p||nil,self=this;if($gvars["~"]==null)$gvars["~"]=nil;$$match.$$p=null;if(self.uninitialized)$Kernel.$raise($$$("TypeError"),"uninitialized Regexp");if(pos===undefined){if(string===nil)return $gvars["~"]=nil;var m=self.exec($coerce_to(string,$$$("String"),"to_str"));if(m){$gvars["~"]=$$$("MatchData").$new(self,m);return block===nil?$gvars["~"]:Opal.yield1(block,$gvars["~"])}else return $gvars["~"]=nil}pos=$coerce_to(pos,$$$("Integer"),"to_int");if(string===nil)return $gvars["~"]=nil;string=
$coerce_to(string,$$$("String"),"to_str");if(pos<0){pos+=string.length;if(pos<0)return $gvars["~"]=nil}var md,re=Opal.global_regexp(self);while(true){md=re.exec(string);if(md===null)return $gvars["~"]=nil;if(md.index>=pos){$gvars["~"]=$$$("MatchData").$new(re,md);return block===nil?$gvars["~"]:Opal.yield1(block,$gvars["~"])}re.lastIndex=md.index+1}},-2);$def(self,"$match?",function $Regexp_match$ques$5(string,pos){var self=this;if(self.uninitialized)$Kernel.$raise($$$("TypeError"),"uninitialized Regexp");
if(pos===undefined)return string===nil?false:self.test($coerce_to(string,$$$("String"),"to_str"));pos=$coerce_to(pos,$$$("Integer"),"to_int");if(string===nil)return false;string=$coerce_to(string,$$$("String"),"to_str");if(pos<0){pos+=string.length;if(pos<0)return false}var md,re=Opal.global_regexp(self);md=re.exec(string);if(md===null||md.index<pos)return false;else return true},-2);$def(self,"$names",function $$names(){var self=this;return $send(self.$source().$scan(/\(?<(\w+)>/,$hash2(["no_matchdata"],
{"no_matchdata":true})),"map",[],"first".$to_proc()).$uniq()});$def(self,"$named_captures",function $$named_captures(){var self=this;return $send($send($send(self.$source().$scan(/\(?<(\w+)>/,$hash2(["no_matchdata"],{"no_matchdata":true})),"map",[],"first".$to_proc()).$each_with_index(),"group_by",[],"first".$to_proc()),"transform_values",[],function $$6(i){if(i==null)i=nil;return $send(i,"map",[],function $$7(j){if(j==null)j=nil;return $rb_plus(j.$last(),1)})})});$def(self,"$~",function $Regexp_$$8(){var self=
this;if($gvars._==null)$gvars._=nil;return self["$=~"]($gvars._)});$def(self,"$source",function $$source(){var self=this;return self.source});$def(self,"$options",function $$options(){var self=this;if(self.uninitialized)$Kernel.$raise($$$("TypeError"),"uninitialized Regexp");var result=0;if(self.multiline)result|=$$("MULTILINE");if(self.ignoreCase)result|=$$("IGNORECASE");return result});$def(self,"$casefold?",function $Regexp_casefold$ques$9(){var self=this;return self.ignoreCase});$alias(self,"eql?",
"==");return $alias(self,"to_s","source")})("::",RegExp,$nesting);return function($base,$super,$parent_nesting){var self=$klass($base,$super,"MatchData");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.matches=nil;self.$attr_reader("post_match","pre_match","regexp","string");$def(self,"$initialize",function $$initialize(regexp,match_groups,$kwargs){var no_matchdata,self=this;$kwargs=$ensure_kwargs($kwargs);no_matchdata=$kwargs.$$smap["no_matchdata"];
if(no_matchdata==null)no_matchdata=false;if(!$truthy(no_matchdata))$gvars["~"]=self;self.regexp=regexp;self.begin=match_groups.index;self.string=match_groups.input;self.pre_match=match_groups.input.slice(0,match_groups.index);self.post_match=match_groups.input.slice(match_groups.index+match_groups[0].length);self.matches=[];for(var i=0,length=match_groups.length;i<length;i++){var group=match_groups[i];if(group==null)self.matches.push(nil);else self.matches.push(group)}},-3);$def(self,"$match",function $$match(idx){var self=
this,match=nil;if($truthy(match=self["$[]"](idx)))return match;else if($truthy(idx["$is_a?"]($$("Integer")))&&$truthy($rb_ge(idx,self.$length())))return $Kernel.$raise($$$("IndexError"),"index "+idx+" out of matches");else return nil});$def(self,"$match_length",function $$match_length(idx){var $a,self=this;return $a=self.$match(idx),$a===nil||$a==null?nil:$a.$length()});$def(self,"$[]",function $MatchData_$$$10($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;if(args[0].$$is_string){if(self.$regexp().$names()["$include?"](args["$[]"](0))["$!"]())$Kernel.$raise($$$("IndexError"),
"undefined group name reference: "+args["$[]"](0));return self.$named_captures()["$[]"](args["$[]"](0))}else return $send(self.matches,"[]",$to_a(args))},-1);$def(self,"$offset",function $$offset(n){var self=this;if(n!==0)$Kernel.$raise($$$("ArgumentError"),"MatchData#offset only supports 0th element");return[self.begin,self.begin+self.matches[n].length]});$def(self,"$==",function $MatchData_$eq_eq$11(other){var self=this,$ret_or_1=nil,$ret_or_2=nil,$ret_or_3=nil,$ret_or_4=nil;if(!$eqeqeq($$$("MatchData"),
other))return false;if($truthy($ret_or_1=$truthy($ret_or_2=$truthy($ret_or_3=$truthy($ret_or_4=self.string==other.string)?self.regexp.toString()==other.regexp.toString():$ret_or_4)?self.pre_match==other.pre_match:$ret_or_3)?self.post_match==other.post_match:$ret_or_2))return self.begin==other.begin;else return $ret_or_1});$def(self,"$begin",function $$begin(n){var self=this;if(n!==0)$Kernel.$raise($$$("ArgumentError"),"MatchData#begin only supports 0th element");return self.begin});$def(self,"$end",
function $$end(n){var self=this;if(n!==0)$Kernel.$raise($$$("ArgumentError"),"MatchData#end only supports 0th element");return self.begin+self.matches[n].length});$def(self,"$captures",function $$captures(){var self=this;return self.matches.slice(1)});$def(self,"$named_captures",function $$named_captures(){var self=this,matches=nil;matches=self.$captures();return $send(self.$regexp().$named_captures(),"transform_values",[],function $$12(i){if(i==null)i=nil;return matches["$[]"]($rb_minus(i.$last(),
1))})});$def(self,"$names",function $$names(){var self=this;return self.$regexp().$names()});$def(self,"$inspect",function $$inspect(){var self=this;var str="#<MatchData "+self.matches[0].$inspect();if(self.$regexp().$names()["$empty?"]())for(var i=1,length=self.matches.length;i<length;i++)str+=" "+i+":"+self.matches[i].$inspect();else $send(self.$named_captures(),"each",[],function $$13(k,v){if(k==null)k=nil;if(v==null)v=nil;return str+=" "+k+":"+v.$inspect()});return str+">"});$def(self,"$length",
function $$length(){var self=this;return self.matches.length});$def(self,"$to_a",$return_ivar("matches"));$def(self,"$to_s",function $$to_s(){var self=this;return self.matches[0]});$def(self,"$values_at",function $$values_at($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;var i,a,index,values=[];for(i=0;i<args.length;i++){if(args[i].$$is_range){a=args[i].$to_a();a.unshift(i,1);Array.prototype.splice.apply(args,a)}index=$Opal["$coerce_to!"](args[i],$$$("Integer"),"to_int");
if(index<0){index+=self.matches.length;if(index<0){values.push(nil);continue}}values.push(self.matches[index])}return values},-1);$alias(self,"eql?","==");return $alias(self,"size","length")}($nesting[0],null,$nesting)};
Opal.modules["corelib/string"]=function(Opal){var $coerce_to=Opal.coerce_to,$respond_to=Opal.respond_to,$global_multiline_regexp=Opal.global_multiline_regexp,$prop=Opal.prop,$klass=Opal.klass,$def=Opal.def,$Opal=Opal.Opal,$defs=Opal.defs,$slice=Opal.slice,$send=Opal.send,$to_a=Opal.to_a,$extract_kwargs=Opal.extract_kwargs,$ensure_kwargs=Opal.ensure_kwargs,$eqeqeq=Opal.eqeqeq,$Kernel=Opal.Kernel,$truthy=Opal.truthy,$gvars=Opal.gvars,$rb_divide=Opal.rb_divide,$rb_plus=Opal.rb_plus,$eqeq=Opal.eqeq,$hash2=
Opal.hash2,$alias=Opal.alias,$const_set=Opal.const_set,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,include,coerce_to?,initialize,===,format,raise,respond_to?,to_s,to_str,<=>,==,=~,new,force_encoding,casecmp,empty?,ljust,ceil,/,+,rjust,floor,coerce_to!,nil?,class,copy_singleton_methods,initialize_clone,initialize_dup,enum_for,chomp,[],to_i,length,each_line,to_proc,to_a,match,match?,captures,proc,succ,escape,include?,upcase,unicode_normalize,dup,__id__,next,intern,pristine");
self.$require("corelib/comparable");self.$require("corelib/regexp");(function($base,$super,$parent_nesting){var self=$klass($base,$super,"String");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$$("Comparable"));Opal.prop(self.$$prototype,"$$is_string",true);$def(self,"$__id__",function $$__id__(){var self=this;return self.toString()});$defs(self,"$try_convert",function $$try_convert(what){return $Opal["$coerce_to?"](what,$$$("String"),"to_str")});$defs(self,"$new",
function $String_new$1($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;var str=args[0]||"";var opts=args[args.length-1];str=$coerce_to(str,$$$("String"),"to_str");if(opts&&opts.$$is_hash)if(opts.$$smap.encoding)str=str.$force_encoding(opts.$$smap.encoding);str=new self.$$constructor(str);if(!str.$initialize.$$pristine)$send(str,"initialize",$to_a(args));return str},-1);$def(self,"$initialize",function $$initialize($a,$b){var $post_args,$kwargs,str,encoding,capacity;
$post_args=$slice(arguments);$kwargs=$extract_kwargs($post_args);$kwargs=$ensure_kwargs($kwargs);if($post_args.length>0)str=$post_args.shift();encoding=$kwargs.$$smap["encoding"];if(encoding==null)encoding=nil;capacity=$kwargs.$$smap["capacity"];if(capacity==null)capacity=nil;return nil},-1);$def(self,"$%",function $String_$percent$2(data){var self=this;if($eqeqeq($$$("Array"),data))return $send(self,"format",[self].concat($to_a(data)));else return self.$format(self,data)});$def(self,"$*",function $String_$$3(count){var self=
this;count=$coerce_to(count,$$$("Integer"),"to_int");if(count<0)$Kernel.$raise($$$("ArgumentError"),"negative argument");if(count===0)return"";var result="",string=self.toString();if(string.length*count>=1<<28)$Kernel.$raise($$$("RangeError"),"multiply count must not overflow maximum string size");for(;;){if((count&1)===1)result+=string;count>>>=1;if(count===0)break;string+=string}return result});$def(self,"$+",function $String_$plus$4(other){var self=this;other=$coerce_to(other,$$$("String"),"to_str");
if(other==""&&self.$$class===Opal.String)return self;if(self==""&&other.$$class===Opal.String)return other;var out=self+other;if(self.encoding===out.encoding&&other.encoding===out.encoding)return out;if(self.encoding.name==="UTF-8"||other.encoding.name==="UTF-8")return out;return Opal.enc(out,self.encoding)});$def(self,"$<=>",function $String_$lt_eq_gt$5(other){var self=this;if($truthy(other["$respond_to?"]("to_str"))){other=other.$to_str().$to_s();return self>other?1:self<other?-1:0}else{var cmp=
other["$<=>"](self);if(cmp===nil)return nil;else return cmp>0?-1:cmp<0?1:0}});$def(self,"$==",function $String_$eq_eq$6(other){var self=this;if(other.$$is_string)return self.toString()===other.toString();if($respond_to(other,"$to_str"))return other["$=="](self);return false});$def(self,"$=~",function $String_$eq_tilde$7(other){var self=this;if(other.$$is_string)$Kernel.$raise($$$("TypeError"),"type mismatch: String given");return other["$=~"](self)});$def(self,"$[]",function $String_$$$8(index,length){var self=
this;var size=self.length,exclude,range;if(index.$$is_range){exclude=index.excl;range=index;length=index.end===nil?-1:$coerce_to(index.end,$$$("Integer"),"to_int");index=index.begin===nil?0:$coerce_to(index.begin,$$$("Integer"),"to_int");if(Math.abs(index)>size)return nil;if(index<0)index+=size;if(length<0)length+=size;if(!exclude||range.end===nil)length+=1;length=length-index;if(length<0)length=0;return self.substr(index,length)}if(index.$$is_string){if(length!=null)$Kernel.$raise($$$("TypeError"));
return self.indexOf(index)!==-1?index:nil}if(index.$$is_regexp){var match=self.match(index);if(match===null){$gvars["~"]=nil;return nil}$gvars["~"]=$$$("MatchData").$new(index,match);if(length==null)return match[0];length=$coerce_to(length,$$$("Integer"),"to_int");if(length<0&&-length<match.length)return match[length+=match.length];if(length>=0&&length<match.length)return match[length];return nil}index=$coerce_to(index,$$$("Integer"),"to_int");if(index<0)index+=size;if(length==null){if(index>=size||
index<0)return nil;return self.substr(index,1)}length=$coerce_to(length,$$$("Integer"),"to_int");if(length<0)return nil;if(index>size||index<0)return nil;return self.substr(index,length)},-2);$def(self,"$b",function $$b(){var self=this;return(new String(self)).$force_encoding("binary")});$def(self,"$capitalize",function $$capitalize(){var self=this;return self.charAt(0).toUpperCase()+self.substr(1).toLowerCase()});$def(self,"$casecmp",function $$casecmp(other){var self=this;if(!$truthy(other["$respond_to?"]("to_str")))return nil;
other=$coerce_to(other,$$$("String"),"to_str").$to_s();var ascii_only=/^[\x00-\x7F]*$/;if(ascii_only.test(self)&&ascii_only.test(other)){self=self.toLowerCase();other=other.toLowerCase()}return self["$<=>"](other)});$def(self,"$casecmp?",function $String_casecmp$ques$9(other){var self=this;var cmp=self.$casecmp(other);if(cmp===nil)return nil;else return cmp===0});$def(self,"$center",function $$center(width,padstr){var self=this;if(padstr==null)padstr=" ";width=$coerce_to(width,$$$("Integer"),"to_int");
padstr=$coerce_to(padstr,$$$("String"),"to_str").$to_s();if($truthy(padstr["$empty?"]()))$Kernel.$raise($$$("ArgumentError"),"zero width padding");if($truthy(width<=self.length))return self;var ljustified=self.$ljust($rb_divide($rb_plus(width,self.length),2).$ceil(),padstr),rjustified=self.$rjust($rb_divide($rb_plus(width,self.length),2).$floor(),padstr);return rjustified+ljustified.slice(self.length)},-2);$def(self,"$chomp",function $$chomp(separator){var self=this;if($gvars["/"]==null)$gvars["/"]=
nil;if(separator==null)separator=$gvars["/"];if($truthy(separator===nil||self.length===0))return self;separator=$Opal["$coerce_to!"](separator,$$$("String"),"to_str").$to_s();var result;if(separator==="\n")result=self.replace(/\r?\n?$/,"");else if(separator==="")result=self.replace(/(\r?\n)+$/,"");else if(self.length>=separator.length){var tail=self.substr(self.length-separator.length,separator.length);if(tail===separator)result=self.substr(0,self.length-separator.length)}if(result!=null)return result;
return self},-1);$def(self,"$chop",function $$chop(){var self=this;var length=self.length,result;if(length<=1)result="";else if(self.charAt(length-1)==="\n"&&self.charAt(length-2)==="\r")result=self.substr(0,length-2);else result=self.substr(0,length-1);return result});$def(self,"$chr",function $$chr(){var self=this;return self.charAt(0)});$def(self,"$clone",function $$clone($kwargs){var freeze,self=this,copy=nil;$kwargs=$ensure_kwargs($kwargs);freeze=$kwargs.$$smap["freeze"];if(freeze==null)freeze=
nil;if(!($truthy(freeze["$nil?"]())||$eqeq(freeze,true)||$eqeq(freeze,false)))self.$raise($$("ArgumentError"),"unexpected value for freeze: "+freeze.$class());copy=new String(self);copy.$copy_singleton_methods(self);copy.$initialize_clone(self,$hash2(["freeze"],{"freeze":freeze}));if($eqeq(freeze,true)){if(!copy.$$frozen)copy.$$frozen=true}else if($truthy(freeze["$nil?"]()))if(self.$$frozen)copy.$$frozen=true;return copy},-1);$def(self,"$dup",function $$dup(){var self=this,copy=nil;copy=new String(self);
copy.$initialize_dup(self);return copy});$def(self,"$count",function $$count($a){var $post_args,sets,self=this;$post_args=$slice(arguments);sets=$post_args;if(sets.length===0)$Kernel.$raise($$$("ArgumentError"),"ArgumentError: wrong number of arguments (0 for 1+)");var char_class=char_class_from_char_sets(sets);if(char_class===null)return 0;return self.length-self.replace(new RegExp(char_class,"g"),"").length},-1);$def(self,"$delete",function $String_delete$10($a){var $post_args,sets,self=this;$post_args=
$slice(arguments);sets=$post_args;if(sets.length===0)$Kernel.$raise($$$("ArgumentError"),"ArgumentError: wrong number of arguments (0 for 1+)");var char_class=char_class_from_char_sets(sets);if(char_class===null)return self;return self.replace(new RegExp(char_class,"g"),"")},-1);$def(self,"$delete_prefix",function $$delete_prefix(prefix){var self=this;if(!prefix.$$is_string)prefix=$coerce_to(prefix,$$$("String"),"to_str");if(self.slice(0,prefix.length)===prefix)return self.slice(prefix.length);else return self});
$def(self,"$delete_suffix",function $$delete_suffix(suffix){var self=this;if(!suffix.$$is_string)suffix=$coerce_to(suffix,$$$("String"),"to_str");if(self.slice(self.length-suffix.length)===suffix)return self.slice(0,self.length-suffix.length);else return self});$def(self,"$downcase",function $$downcase(){var self=this;return self.toLowerCase()});$def(self,"$each_line",function $$each_line($a,$b){var block=$$each_line.$$p||nil,$post_args,$kwargs,separator,chomp,self=this;if($gvars["/"]==null)$gvars["/"]=
nil;$$each_line.$$p=null;$post_args=$slice(arguments);$kwargs=$extract_kwargs($post_args);$kwargs=$ensure_kwargs($kwargs);if($post_args.length>0)separator=$post_args.shift();if(separator==null)separator=$gvars["/"];chomp=$kwargs.$$smap["chomp"];if(chomp==null)chomp=false;if(!(block!==nil))return self.$enum_for("each_line",separator,$hash2(["chomp"],{"chomp":chomp}));if(separator===nil){Opal.yield1(block,self);return self}separator=$coerce_to(separator,$$$("String"),"to_str");var a,i,n,length,chomped,
trailing,splitted,value;if(separator.length===0){for(a=self.split(/((?:\r?\n){2})(?:(?:\r?\n)*)/),i=0,n=a.length;i<n;i+=2)if(a[i]||a[i+1]){value=(a[i]||"")+(a[i+1]||"");if(chomp)value=value.$chomp("\n");Opal.yield1(block,value)}return self}chomped=self.$chomp(separator);trailing=self.length!=chomped.length;splitted=chomped.split(separator);for(i=0,length=splitted.length;i<length;i++){value=splitted[i];if(i<length-1||trailing)value+=separator;if(chomp)value=value.$chomp(separator);Opal.yield1(block,
value)}return self},-1);$def(self,"$empty?",function $String_empty$ques$11(){var self=this;return self.length===0});$def(self,"$end_with?",function $String_end_with$ques$12($a){var $post_args,suffixes,self=this;$post_args=$slice(arguments);suffixes=$post_args;for(var i=0,length=suffixes.length;i<length;i++){var suffix=$coerce_to(suffixes[i],$$$("String"),"to_str").$to_s();if(self.length>=suffix.length&&self.substr(self.length-suffix.length,suffix.length)==suffix)return true}return false},-1);$def(self,
"$gsub",function $$gsub(pattern,replacement){var block=$$gsub.$$p||nil,self=this;$$gsub.$$p=null;if(replacement===undefined&&block===nil)return self.$enum_for("gsub",pattern);var result="",match_data=nil,index=0,match,_replacement;if(pattern.$$is_regexp)pattern=$global_multiline_regexp(pattern);else{pattern=$coerce_to(pattern,$$$("String"),"to_str");pattern=new RegExp(pattern.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gm")}var lastIndex;while(true){match=pattern.exec(self);if(match===null){$gvars["~"]=
nil;result+=self.slice(index);break}match_data=$$$("MatchData").$new(pattern,match);if(replacement===undefined){lastIndex=pattern.lastIndex;_replacement=block(match[0]);pattern.lastIndex=lastIndex}else if(replacement.$$is_hash)_replacement=replacement["$[]"](match[0]).$to_s();else{if(!replacement.$$is_string)replacement=$coerce_to(replacement,$$$("String"),"to_str");_replacement=replacement.replace(/([\\]+)([0-9+&`'])/g,function(original,slashes,command){if(slashes.length%2===0)return original;switch(command){case "+":for(var i=
match.length-1;i>0;i--)if(match[i]!==undefined)return slashes.slice(1)+match[i];return"";case "&":return slashes.slice(1)+match[0];case "`":return slashes.slice(1)+self.slice(0,match.index);case "'":return slashes.slice(1)+self.slice(match.index+match[0].length);default:return slashes.slice(1)+(match[command]||"")}}).replace(/\\\\/g,"\\")}if(pattern.lastIndex===match.index){result+=self.slice(index,match.index)+_replacement+(self[match.index]||"");pattern.lastIndex+=1}else result+=self.slice(index,
match.index)+_replacement;index=pattern.lastIndex}$gvars["~"]=match_data;return result},-2);$def(self,"$hash",function $$hash(){var self=this;return self.toString()});$def(self,"$hex",function $$hex(){var self=this;return self.$to_i(16)});$def(self,"$include?",function $String_include$ques$13(other){var self=this;if(!other.$$is_string)other=$coerce_to(other,$$$("String"),"to_str");return self.indexOf(other)!==-1});$def(self,"$index",function $$index(search,offset){var self=this;var index,match,regex;
if(offset===undefined)offset=0;else{offset=$coerce_to(offset,$$$("Integer"),"to_int");if(offset<0){offset+=self.length;if(offset<0)return nil}}if(search.$$is_regexp){regex=$global_multiline_regexp(search);while(true){match=regex.exec(self);if(match===null){$gvars["~"]=nil;index=-1;break}if(match.index>=offset){$gvars["~"]=$$$("MatchData").$new(regex,match);index=match.index;break}regex.lastIndex=match.index+1}}else{search=$coerce_to(search,$$$("String"),"to_str");if(search.length===0&&offset>self.length)index=
-1;else index=self.indexOf(search,offset)}return index===-1?nil:index},-2);$def(self,"$inspect",function $$inspect(){var self=this;var escapable=/[\\"\x00-\x1f\u007F-\u009F\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,meta={"\u0007":"\\a","\u001b":"\\e","\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","\v":"\\v",'"':'\\"',"\\":"\\\\"},escaped=self.replace(escapable,function(chr){if(meta[chr])return meta[chr];chr=chr.charCodeAt(0);if(chr<=255&&(self.encoding["$binary?"]()||
self.internal_encoding["$binary?"]()))return"\\x"+("00"+chr.toString(16).toUpperCase()).slice(-2);else return"\\u"+("0000"+chr.toString(16).toUpperCase()).slice(-4)});return'"'+escaped.replace(/#[\$@\{]/g,"\\$&")+'"'});$def(self,"$intern",function $$intern(){var self=this;return self.toString()});$def(self,"$length",function $$length(){var self=this;return self.length});$alias(self,"size","length");$def(self,"$lines",function $$lines($a,$b){var block=$$lines.$$p||nil,$post_args,$kwargs,separator,
chomp,self=this,e=nil;if($gvars["/"]==null)$gvars["/"]=nil;$$lines.$$p=null;$post_args=$slice(arguments);$kwargs=$extract_kwargs($post_args);$kwargs=$ensure_kwargs($kwargs);if($post_args.length>0)separator=$post_args.shift();if(separator==null)separator=$gvars["/"];chomp=$kwargs.$$smap["chomp"];if(chomp==null)chomp=false;e=$send(self,"each_line",[separator,$hash2(["chomp"],{"chomp":chomp})],block.$to_proc());if($truthy(block))return self;else return e.$to_a()},-1);$def(self,"$ljust",function $$ljust(width,
padstr){var self=this;if(padstr==null)padstr=" ";width=$coerce_to(width,$$$("Integer"),"to_int");padstr=$coerce_to(padstr,$$$("String"),"to_str").$to_s();if($truthy(padstr["$empty?"]()))$Kernel.$raise($$$("ArgumentError"),"zero width padding");if($truthy(width<=self.length))return self;var index=-1,result="";width-=self.length;while(++index<width)result+=padstr;return self+result.slice(0,width)},-2);$def(self,"$lstrip",function $$lstrip(){var self=this;return self.replace(/^[\u0000\s]*/,"")});$def(self,
"$ascii_only?",function $String_ascii_only$ques$14(){var self=this;if(!self.encoding.ascii)return false;return/^[\x00-\x7F]*$/.test(self)});$def(self,"$match",function $$match(pattern,pos){var block=$$match.$$p||nil,self=this;$$match.$$p=null;if($eqeqeq($$("String"),pattern)||$truthy(pattern["$respond_to?"]("to_str")))pattern=$$$("Regexp").$new(pattern.$to_str());if(!$eqeqeq($$$("Regexp"),pattern))$Kernel.$raise($$$("TypeError"),"wrong argument type "+pattern.$class()+" (expected Regexp)");return $send(pattern,
"match",[self,pos],block.$to_proc())},-2);$def(self,"$match?",function $String_match$ques$15(pattern,pos){var self=this;if($eqeqeq($$("String"),pattern)||$truthy(pattern["$respond_to?"]("to_str")))pattern=$$$("Regexp").$new(pattern.$to_str());if(!$eqeqeq($$$("Regexp"),pattern))$Kernel.$raise($$$("TypeError"),"wrong argument type "+pattern.$class()+" (expected Regexp)");return pattern["$match?"](self,pos)},-2);$def(self,"$next",function $$next(){var self=this;var i=self.length;if(i===0)return"";var result=
self;var first_alphanum_char_index=self.search(/[a-zA-Z0-9]/);var carry=false;var code;while(i--){code=self.charCodeAt(i);if(code>=48&&code<=57||code>=65&&code<=90||code>=97&&code<=122)switch(code){case 57:carry=true;code=48;break;case 90:carry=true;code=65;break;case 122:carry=true;code=97;break;default:carry=false;code+=1}else if(first_alphanum_char_index===-1)if(code===255){carry=true;code=0}else{carry=false;code+=1}else carry=true;result=result.slice(0,i)+String.fromCharCode(code)+result.slice(i+
1);if(carry&&(i===0||i===first_alphanum_char_index)){switch(code){case 65:break;case 97:break;default:code+=1}if(i===0)result=String.fromCharCode(code)+result;else result=result.slice(0,i)+String.fromCharCode(code)+result.slice(i);carry=false}if(!carry)break}return result});$def(self,"$oct",function $$oct(){var self=this;var result,string=self,radix=8;if(/^\s*_/.test(string))return 0;string=string.replace(/^(\s*[+-]?)(0[bodx]?)(.+)$/i,function(original,head,flag,tail){switch(tail.charAt(0)){case "+":case "-":return original;
case "0":if(tail.charAt(1)==="x"&&flag==="0x")return original}switch(flag){case "0b":radix=2;break;case "0":case "0o":radix=8;break;case "0d":radix=10;break;case "0x":radix=16;break}return head+tail});result=parseInt(string.replace(/_(?!_)/g,""),radix);return isNaN(result)?0:result});$def(self,"$ord",function $$ord(){var self=this;if(typeof self.codePointAt==="function")return self.codePointAt(0);else return self.charCodeAt(0)});$def(self,"$partition",function $$partition(sep){var self=this;var i,
m;if(sep.$$is_regexp){m=sep.exec(self);if(m===null)i=-1;else{$$$("MatchData").$new(sep,m);sep=m[0];i=m.index}}else{sep=$coerce_to(sep,$$$("String"),"to_str");i=self.indexOf(sep)}if(i===-1)return[self,"",""];return[self.slice(0,i),self.slice(i,i+sep.length),self.slice(i+sep.length)]});$def(self,"$reverse",function $$reverse(){var self=this;return self.split("").reverse().join("")});$def(self,"$rindex",function $$rindex(search,offset){var self=this;var i,m,r,_m;if(offset===undefined)offset=self.length;
else{offset=$coerce_to(offset,$$$("Integer"),"to_int");if(offset<0){offset+=self.length;if(offset<0)return nil}}if(search.$$is_regexp){m=null;r=$global_multiline_regexp(search);while(true){_m=r.exec(self);if(_m===null||_m.index>offset)break;m=_m;r.lastIndex=m.index+1}if(m===null){$gvars["~"]=nil;i=-1}else{$$$("MatchData").$new(r,m);i=m.index}}else{search=$coerce_to(search,$$$("String"),"to_str");i=self.lastIndexOf(search,offset)}return i===-1?nil:i},-2);$def(self,"$rjust",function $$rjust(width,padstr){var self=
this;if(padstr==null)padstr=" ";width=$coerce_to(width,$$$("Integer"),"to_int");padstr=$coerce_to(padstr,$$$("String"),"to_str").$to_s();if($truthy(padstr["$empty?"]()))$Kernel.$raise($$$("ArgumentError"),"zero width padding");if($truthy(width<=self.length))return self;var chars=Math.floor(width-self.length),patterns=Math.floor(chars/padstr.length),result=Array(patterns+1).join(padstr),remaining=chars-result.length;return result+padstr.slice(0,remaining)+self},-2);$def(self,"$rpartition",function $$rpartition(sep){var self=
this;var i,m,r,_m;if(sep.$$is_regexp){m=null;r=$global_multiline_regexp(sep);while(true){_m=r.exec(self);if(_m===null)break;m=_m;r.lastIndex=m.index+1}if(m===null)i=-1;else{$$$("MatchData").$new(r,m);sep=m[0];i=m.index}}else{sep=$coerce_to(sep,$$$("String"),"to_str");i=self.lastIndexOf(sep)}if(i===-1)return["","",self];return[self.slice(0,i),self.slice(i,i+sep.length),self.slice(i+sep.length)]});$def(self,"$rstrip",function $$rstrip(){var self=this;return self.replace(/[\s\u0000]*$/,"")});$def(self,
"$scan",function $$scan(pattern,$kwargs){var block=$$scan.$$p||nil,no_matchdata,self=this;$$scan.$$p=null;$kwargs=$ensure_kwargs($kwargs);no_matchdata=$kwargs.$$smap["no_matchdata"];if(no_matchdata==null)no_matchdata=false;var result=[],match_data=nil,match;if(pattern.$$is_regexp)pattern=$global_multiline_regexp(pattern);else{pattern=$coerce_to(pattern,$$$("String"),"to_str");pattern=new RegExp(pattern.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gm")}while((match=pattern.exec(self))!=null){match_data=
$$$("MatchData").$new(pattern,match,$hash2(["no_matchdata"],{"no_matchdata":no_matchdata}));if(block===nil)match.length==1?result.push(match[0]):result.push(match_data.$captures());else match.length==1?Opal.yield1(block,match[0]):Opal.yield1(block,match_data.$captures());if(pattern.lastIndex===match.index)pattern.lastIndex+=1}if(!no_matchdata)$gvars["~"]=match_data;return block!==nil?self:result},-2);$def(self,"$singleton_class",function $$singleton_class(){var self=this;return Opal.get_singleton_class(self)});
$def(self,"$split",function $$split(pattern,limit){var self=this,$ret_or_1=nil;if($gvars[";"]==null)$gvars[";"]=nil;if(self.length===0)return[];if(limit===undefined)limit=0;else{limit=$Opal["$coerce_to!"](limit,$$$("Integer"),"to_int");if(limit===1)return[self]}if(pattern===undefined||pattern===nil)pattern=$truthy($ret_or_1=$gvars[";"])?$ret_or_1:" ";var result=[],string=self.toString(),index=0,match,i,ii;if(pattern.$$is_regexp)pattern=$global_multiline_regexp(pattern);else{pattern=$coerce_to(pattern,
$$$("String"),"to_str").$to_s();if(pattern===" "){pattern=/\s+/gm;string=string.replace(/^\s+/,"")}else pattern=new RegExp(pattern.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gm")}result=string.split(pattern);if(result.length===1&&result[0]===string)return[result[0]];while((i=result.indexOf(undefined))!==-1)result.splice(i,1);if(limit===0){while(result[result.length-1]==="")result.length-=1;return result}match=pattern.exec(string);if(limit<0){if(match!==null&&match[0]===""&&pattern.source.indexOf("(?=")===
-1)for(i=0,ii=match.length;i<ii;i++)result.push("");return result}if(match!==null&&match[0]===""){result.splice(limit-1,result.length-1,result.slice(limit-1).join(""));return result}if(limit>=result.length)return result;i=0;while(match!==null){i++;index=pattern.lastIndex;if(i+1===limit)break;match=pattern.exec(string)}result.splice(limit-1,result.length-1,string.slice(index));return result},-1);$def(self,"$squeeze",function $$squeeze($a){var $post_args,sets,self=this;$post_args=$slice(arguments);
sets=$post_args;if(sets.length===0)return self.replace(/(.)\1+/g,"$1");var char_class=char_class_from_char_sets(sets);if(char_class===null)return self;return self.replace(new RegExp("("+char_class+")\\1+","g"),"$1")},-1);$def(self,"$start_with?",function $String_start_with$ques$16($a){var $post_args,prefixes,self=this;$post_args=$slice(arguments);prefixes=$post_args;for(var i=0,length=prefixes.length;i<length;i++)if(prefixes[i].$$is_regexp){var regexp=prefixes[i];var match=regexp.exec(self);if(match!=
null&&match.index===0){$gvars["~"]=$$$("MatchData").$new(regexp,match);return true}else $gvars["~"]=nil}else{var prefix=$coerce_to(prefixes[i],$$$("String"),"to_str").$to_s();if(self.indexOf(prefix)===0)return true}return false},-1);$def(self,"$strip",function $$strip(){var self=this;return self.replace(/^[\s\u0000]*|[\s\u0000]*$/g,"")});$def(self,"$sub",function $$sub(pattern,replacement){var block=$$sub.$$p||nil,self=this;$$sub.$$p=null;if(!pattern.$$is_regexp){pattern=$coerce_to(pattern,$$$("String"),
"to_str");pattern=new RegExp(pattern.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"))}var result,match=pattern.exec(self);if(match===null){$gvars["~"]=nil;result=self.toString()}else{$$$("MatchData").$new(pattern,match);if(replacement===undefined){if(block===nil)$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments (1 for 2)");result=self.slice(0,match.index)+block(match[0])+self.slice(match.index+match[0].length)}else if(replacement.$$is_hash)result=self.slice(0,match.index)+replacement["$[]"](match[0]).$to_s()+
self.slice(match.index+match[0].length);else{replacement=$coerce_to(replacement,$$$("String"),"to_str");replacement=replacement.replace(/([\\]+)([0-9+&`'])/g,function(original,slashes,command){if(slashes.length%2===0)return original;switch(command){case "+":for(var i=match.length-1;i>0;i--)if(match[i]!==undefined)return slashes.slice(1)+match[i];return"";case "&":return slashes.slice(1)+match[0];case "`":return slashes.slice(1)+self.slice(0,match.index);case "'":return slashes.slice(1)+self.slice(match.index+
match[0].length);default:return slashes.slice(1)+(match[command]||"")}}).replace(/\\\\/g,"\\");result=self.slice(0,match.index)+replacement+self.slice(match.index+match[0].length)}}return result},-2);$def(self,"$sum",function $$sum(n){var self=this;if(n==null)n=16;n=$coerce_to(n,$$$("Integer"),"to_int");var result=0,length=self.length,i=0;for(;i<length;i++)result+=self.charCodeAt(i);if(n<=0)return result;return result&Math.pow(2,n)-1},-1);$def(self,"$swapcase",function $$swapcase(){var self=this;
var str=self.replace(/([a-z]+)|([A-Z]+)/g,function($0,$1,$2){return $1?$0.toUpperCase():$0.toLowerCase()});return str});$def(self,"$to_f",function $$to_f(){var self=this;if(self.charAt(0)==="_")return 0;var result=parseFloat(self.replace(/_/g,""));if(isNaN(result)||result==Infinity||result==-Infinity)return 0;else return result});$def(self,"$to_i",function $$to_i(base){var self=this;if(base==null)base=10;var result,string=self.toLowerCase(),radix=$coerce_to(base,$$$("Integer"),"to_int");if(radix===
1||radix<0||radix>36)$Kernel.$raise($$$("ArgumentError"),"invalid radix "+radix);if(/^\s*_/.test(string))return 0;string=string.replace(/^(\s*[+-]?)(0[bodx]?)(.+)$/,function(original,head,flag,tail){switch(tail.charAt(0)){case "+":case "-":return original;case "0":if(tail.charAt(1)==="x"&&flag==="0x"&&(radix===0||radix===16))return original}switch(flag){case "0b":if(radix===0||radix===2){radix=2;return head+tail}break;case "0":case "0o":if(radix===0||radix===8){radix=8;return head+tail}break;case "0d":if(radix===
0||radix===10){radix=10;return head+tail}break;case "0x":if(radix===0||radix===16){radix=16;return head+tail}break}return original});result=parseInt(string.replace(/_(?!_)/g,""),radix);return isNaN(result)?0:result},-1);$def(self,"$to_proc",function $$to_proc(){var $yield=$$to_proc.$$p||nil,self=this,method_name=nil,jsid=nil,proc=nil;$$to_proc.$$p=null;method_name=self.valueOf();jsid=Opal.jsid(method_name);proc=$send($Kernel,"proc",[],function $$17($a){var block=$$17.$$p||nil,$post_args,args;$$17.$$p=
null;$post_args=$slice(arguments);args=$post_args;if(args.length===0)$Kernel.$raise($$$("ArgumentError"),"no receiver given");var recv=args[0];if(recv==null)recv=nil;var body=recv[jsid];if(!body){body=recv.$method_missing;args[0]=method_name}else args=args.slice(1);if(typeof block==="function")body.$$p=block;if(args.length===0)return body.call(recv);else return body.apply(recv,args)},-1);proc.$$source_location=nil;return proc});$def(self,"$to_s",function $$to_s(){var self=this;return self.toString()});
$def(self,"$tr",function $$tr(from,to){var self=this;from=$coerce_to(from,$$$("String"),"to_str").$to_s();to=$coerce_to(to,$$$("String"),"to_str").$to_s();if(from.length==0||from===to)return self;var i,in_range,c,ch,start,end,length;var subs={};var from_chars=from.split("");var from_length=from_chars.length;var to_chars=to.split("");var to_length=to_chars.length;var inverse=false;var global_sub=null;if(from_chars[0]==="^"&&from_chars.length>1){inverse=true;from_chars.shift();global_sub=to_chars[to_length-
1];from_length-=1}var from_chars_expanded=[];var last_from=null;in_range=false;for(i=0;i<from_length;i++){ch=from_chars[i];if(last_from==null){last_from=ch;from_chars_expanded.push(ch)}else if(ch==="-")if(last_from==="-"){from_chars_expanded.push("-");from_chars_expanded.push("-")}else if(i==from_length-1)from_chars_expanded.push("-");else in_range=true;else if(in_range){start=last_from.charCodeAt(0);end=ch.charCodeAt(0);if(start>end)$Kernel.$raise($$$("ArgumentError"),'invalid range "'+String.fromCharCode(start)+
"-"+String.fromCharCode(end)+'" in string transliteration');for(c=start+1;c<end;c++)from_chars_expanded.push(String.fromCharCode(c));from_chars_expanded.push(ch);in_range=null;last_from=null}else from_chars_expanded.push(ch)}from_chars=from_chars_expanded;from_length=from_chars.length;if(inverse)for(i=0;i<from_length;i++)subs[from_chars[i]]=true;else{if(to_length>0){var to_chars_expanded=[];var last_to=null;in_range=false;for(i=0;i<to_length;i++){ch=to_chars[i];if(last_to==null){last_to=ch;to_chars_expanded.push(ch)}else if(ch===
"-")if(last_to==="-"){to_chars_expanded.push("-");to_chars_expanded.push("-")}else if(i==to_length-1)to_chars_expanded.push("-");else in_range=true;else if(in_range){start=last_to.charCodeAt(0);end=ch.charCodeAt(0);if(start>end)$Kernel.$raise($$$("ArgumentError"),'invalid range "'+String.fromCharCode(start)+"-"+String.fromCharCode(end)+'" in string transliteration');for(c=start+1;c<end;c++)to_chars_expanded.push(String.fromCharCode(c));to_chars_expanded.push(ch);in_range=null;last_to=null}else to_chars_expanded.push(ch)}to_chars=
to_chars_expanded;to_length=to_chars.length}var length_diff=from_length-to_length;if(length_diff>0){var pad_char=to_length>0?to_chars[to_length-1]:"";for(i=0;i<length_diff;i++)to_chars.push(pad_char)}for(i=0;i<from_length;i++)subs[from_chars[i]]=to_chars[i]}var new_str="";for(i=0,length=self.length;i<length;i++){ch=self.charAt(i);var sub=subs[ch];if(inverse)new_str+=sub==null?global_sub:ch;else new_str+=sub!=null?sub:ch}return new_str});$def(self,"$tr_s",function $$tr_s(from,to){var self=this;from=
$coerce_to(from,$$$("String"),"to_str").$to_s();to=$coerce_to(to,$$$("String"),"to_str").$to_s();if(from.length==0)return self;var i,in_range,c,ch,start,end,length;var subs={};var from_chars=from.split("");var from_length=from_chars.length;var to_chars=to.split("");var to_length=to_chars.length;var inverse=false;var global_sub=null;if(from_chars[0]==="^"&&from_chars.length>1){inverse=true;from_chars.shift();global_sub=to_chars[to_length-1];from_length-=1}var from_chars_expanded=[];var last_from=null;
in_range=false;for(i=0;i<from_length;i++){ch=from_chars[i];if(last_from==null){last_from=ch;from_chars_expanded.push(ch)}else if(ch==="-")if(last_from==="-"){from_chars_expanded.push("-");from_chars_expanded.push("-")}else if(i==from_length-1)from_chars_expanded.push("-");else in_range=true;else if(in_range){start=last_from.charCodeAt(0);end=ch.charCodeAt(0);if(start>end)$Kernel.$raise($$$("ArgumentError"),'invalid range "'+String.fromCharCode(start)+"-"+String.fromCharCode(end)+'" in string transliteration');
for(c=start+1;c<end;c++)from_chars_expanded.push(String.fromCharCode(c));from_chars_expanded.push(ch);in_range=null;last_from=null}else from_chars_expanded.push(ch)}from_chars=from_chars_expanded;from_length=from_chars.length;if(inverse)for(i=0;i<from_length;i++)subs[from_chars[i]]=true;else{if(to_length>0){var to_chars_expanded=[];var last_to=null;in_range=false;for(i=0;i<to_length;i++){ch=to_chars[i];if(last_from==null){last_from=ch;to_chars_expanded.push(ch)}else if(ch==="-")if(last_to==="-"){to_chars_expanded.push("-");
to_chars_expanded.push("-")}else if(i==to_length-1)to_chars_expanded.push("-");else in_range=true;else if(in_range){start=last_from.charCodeAt(0);end=ch.charCodeAt(0);if(start>end)$Kernel.$raise($$$("ArgumentError"),'invalid range "'+String.fromCharCode(start)+"-"+String.fromCharCode(end)+'" in string transliteration');for(c=start+1;c<end;c++)to_chars_expanded.push(String.fromCharCode(c));to_chars_expanded.push(ch);in_range=null;last_from=null}else to_chars_expanded.push(ch)}to_chars=to_chars_expanded;
to_length=to_chars.length}var length_diff=from_length-to_length;if(length_diff>0){var pad_char=to_length>0?to_chars[to_length-1]:"";for(i=0;i<length_diff;i++)to_chars.push(pad_char)}for(i=0;i<from_length;i++)subs[from_chars[i]]=to_chars[i]}var new_str="";var last_substitute=null;for(i=0,length=self.length;i<length;i++){ch=self.charAt(i);var sub=subs[ch];if(inverse)if(sub==null){if(last_substitute==null){new_str+=global_sub;last_substitute=true}}else{new_str+=ch;last_substitute=null}else if(sub!=null){if(last_substitute==
null||last_substitute!==sub){new_str+=sub;last_substitute=sub}}else{new_str+=ch;last_substitute=null}}return new_str});$def(self,"$upcase",function $$upcase(){var self=this;return self.toUpperCase()});$def(self,"$upto",function $$upto(stop,excl){var block=$$upto.$$p||nil,self=this;$$upto.$$p=null;if(excl==null)excl=false;if(!(block!==nil))return self.$enum_for("upto",stop,excl);var a,b,s=self.toString();stop=$coerce_to(stop,$$$("String"),"to_str");if(s.length===1&&stop.length===1){a=s.charCodeAt(0);
b=stop.charCodeAt(0);while(a<=b){if(excl&&a===b)break;block(String.fromCharCode(a));a+=1}}else if(parseInt(s,10).toString()===s&&parseInt(stop,10).toString()===stop){a=parseInt(s,10);b=parseInt(stop,10);while(a<=b){if(excl&&a===b)break;block(a.toString());a+=1}}else while(s.length<=stop.length&&s<=stop){if(excl&&s===stop)break;block(s);s=s.$succ()}return self},-2);function char_class_from_char_sets(sets){function explode_sequences_in_character_set(set){var result="",i,len=set.length,curr_char,skip_next_dash,
char_code_from,char_code_upto,char_code;for(i=0;i<len;i++){curr_char=set.charAt(i);if(curr_char==="-"&&i>0&&i<len-1&&!skip_next_dash){char_code_from=set.charCodeAt(i-1);char_code_upto=set.charCodeAt(i+1);if(char_code_from>char_code_upto)$Kernel.$raise($$$("ArgumentError"),'invalid range "'+char_code_from+"-"+char_code_upto+'" in string transliteration');for(char_code=char_code_from+1;char_code<char_code_upto+1;char_code++)result+=String.fromCharCode(char_code);skip_next_dash=true;i++}else{skip_next_dash=
curr_char==="\\";result+=curr_char}}return result}function intersection(setA,setB){if(setA.length===0)return setB;var result="",i,len=setA.length,chr;for(i=0;i<len;i++){chr=setA.charAt(i);if(setB.indexOf(chr)!==-1)result+=chr}return result}var i,len,set,neg,chr,tmp,pos_intersection="",neg_intersection="";for(i=0,len=sets.length;i<len;i++){set=$coerce_to(sets[i],$$$("String"),"to_str");neg=set.charAt(0)==="^"&&set.length>1;set=explode_sequences_in_character_set(neg?set.slice(1):set);if(neg)neg_intersection=
intersection(neg_intersection,set);else pos_intersection=intersection(pos_intersection,set)}if(pos_intersection.length>0&&neg_intersection.length>0){tmp="";for(i=0,len=pos_intersection.length;i<len;i++){chr=pos_intersection.charAt(i);if(neg_intersection.indexOf(chr)===-1)tmp+=chr}pos_intersection=tmp;neg_intersection=""}if(pos_intersection.length>0)return"["+$$$("Regexp").$escape(pos_intersection)+"]";if(neg_intersection.length>0)return"[^"+$$$("Regexp").$escape(neg_intersection)+"]";return null}
$def(self,"$instance_variables",function $$instance_variables(){return[]});$defs(self,"$_load",function $$_load($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;return $send(self,"new",$to_a(args))},-1);$def(self,"$unicode_normalize",function $$unicode_normalize(form){var self=this;if(form==null)form="nfc";if(!$truthy(["nfc","nfd","nfkc","nfkd"]["$include?"](form)))$Kernel.$raise($$$("ArgumentError"),"Invalid normalization form "+form);return self.normalize(form.$upcase())},
-1);$def(self,"$unicode_normalized?",function $String_unicode_normalized$ques$18(form){var self=this;if(form==null)form="nfc";return self.$unicode_normalize(form)["$=="](self)},-1);$def(self,"$unpack",function $$unpack(format){return $Kernel.$raise("To use String#unpack, you must first require 'corelib/string/unpack'.")});$def(self,"$unpack1",function $$unpack1(format){return $Kernel.$raise("To use String#unpack1, you must first require 'corelib/string/unpack'.")});$def(self,"$freeze",function $$freeze(){var self=
this;if(typeof self==="string")return self;$prop(self,"$$frozen",true);return self});$def(self,"$-@",function $String_$minus$$19(){var self=this;if(typeof self==="string")return self;if(self.$$frozen)return self;if(self.encoding.name=="UTF-8"&&self.internal_encoding.name=="UTF-8")return self.toString();return self.$dup().$freeze()});$def(self,"$frozen?",function $String_frozen$ques$20(){var self=this;return typeof self==="string"||self.$$frozen===true});$alias(self,"+@","dup");$alias(self,"===","==");
$alias(self,"byteslice","[]");$alias(self,"eql?","==");$alias(self,"equal?","===");$alias(self,"object_id","__id__");$alias(self,"slice","[]");$alias(self,"succ","next");$alias(self,"to_str","to_s");$alias(self,"to_sym","intern");return $Opal.$pristine(self,"initialize")})("::",String,$nesting);return $const_set($nesting[0],"Symbol",$$("String"))};
Opal.modules["corelib/enumerable"]=function(Opal){var $truthy=Opal.truthy,$coerce_to=Opal.coerce_to,$yield1=Opal.yield1,$yieldX=Opal.yieldX,$deny_frozen_access=Opal.deny_frozen_access,$module=Opal.module,$send=Opal.send,$slice=Opal.slice,$to_a=Opal.to_a,$Opal=Opal.Opal,$thrower=Opal.thrower,$def=Opal.def,$Kernel=Opal.Kernel,$return_val=Opal.return_val,$rb_gt=Opal.rb_gt,$rb_times=Opal.rb_times,$rb_lt=Opal.rb_lt,$eqeq=Opal.eqeq,$rb_plus=Opal.rb_plus,$rb_minus=Opal.rb_minus,$rb_divide=Opal.rb_divide,
$rb_le=Opal.rb_le,$hash2=Opal.hash2,$lambda=Opal.lambda,$not=Opal.not,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("each,public_send,destructure,to_enum,enumerator_size,new,yield,raise,slice_when,!,enum_for,flatten,map,to_proc,compact,to_a,warn,proc,==,nil?,respond_to?,coerce_to!,>,*,try_convert,<,+,-,ceil,/,size,select,__send__,length,<=,[],push,<<,[]=,===,inspect,<=>,first,reverse,sort,take,sort_by,compare,call,dup,sort!,map!,include?,-@,key?,values,transform_values,group_by,fetch,to_h,coerce_to?,class,zip,detect,find_all,collect_concat,collect,inject,entries");
return function($base,$parent_nesting){var self=$module($base,"Enumerable");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);function comparableForPattern(value){if(value.length===0)value=[nil];if(value.length>1)value=[value];return value}$def(self,"$all?",function $Enumerable_all$ques$1(pattern){try{var $t_return=$thrower("return");var block=$Enumerable_all$ques$1.$$p||nil,self=this;$Enumerable_all$ques$1.$$p=null;if($truthy(pattern!==undefined))$send(self,"each",[],function $$2($a){var $post_args,
value,comparable=nil;$post_args=$slice(arguments);value=$post_args;comparable=comparableForPattern(value);if($truthy($send(pattern,"public_send",["==="].concat($to_a(comparable)))))return nil;else $t_return.$throw(false)},{$$arity:-1,$$ret:$t_return});else if(block!==nil)$send(self,"each",[],function $$3($a){var $post_args,value;$post_args=$slice(arguments);value=$post_args;if($truthy(Opal.yieldX(block,$to_a(value))))return nil;else $t_return.$throw(false)},{$$arity:-1,$$ret:$t_return});else $send(self,
"each",[],function $$4($a){var $post_args,value;$post_args=$slice(arguments);value=$post_args;if($truthy($Opal.$destructure(value)))return nil;else $t_return.$throw(false)},{$$arity:-1,$$ret:$t_return});return true}catch($e){if($e===$t_return)return $e.$v;throw $e;}},-1);$def(self,"$any?",function $Enumerable_any$ques$5(pattern){try{var $t_return=$thrower("return");var block=$Enumerable_any$ques$5.$$p||nil,self=this;$Enumerable_any$ques$5.$$p=null;if($truthy(pattern!==undefined))$send(self,"each",
[],function $$6($a){var $post_args,value,comparable=nil;$post_args=$slice(arguments);value=$post_args;comparable=comparableForPattern(value);if($truthy($send(pattern,"public_send",["==="].concat($to_a(comparable)))))$t_return.$throw(true);else return nil},{$$arity:-1,$$ret:$t_return});else if(block!==nil)$send(self,"each",[],function $$7($a){var $post_args,value;$post_args=$slice(arguments);value=$post_args;if($truthy(Opal.yieldX(block,$to_a(value))))$t_return.$throw(true);else return nil},{$$arity:-1,
$$ret:$t_return});else $send(self,"each",[],function $$8($a){var $post_args,value;$post_args=$slice(arguments);value=$post_args;if($truthy($Opal.$destructure(value)))$t_return.$throw(true);else return nil},{$$arity:-1,$$ret:$t_return});return false}catch($e){if($e===$t_return)return $e.$v;throw $e;}},-1);$def(self,"$chunk",function $$chunk(){var block=$$chunk.$$p||nil,self=this;$$chunk.$$p=null;if(!(block!==nil))return $send(self,"to_enum",["chunk"],function $$9(){var self=$$9.$$s==null?this:$$9.$$s;
return self.$enumerator_size()},{$$s:self});return $send($$$("Enumerator"),"new",[],function $$10(yielder){var self=$$10.$$s==null?this:$$10.$$s;if(yielder==null)yielder=nil;var previous=nil,accumulate=[];function releaseAccumulate(){if(accumulate.length>0)yielder.$yield(previous,accumulate)}self.$each.$$p=function(value){var key=$yield1(block,value);if(key===nil){releaseAccumulate();accumulate=[];previous=nil}else{if(previous===nil||previous===key)accumulate.push(value);else{releaseAccumulate();
accumulate=[value]}previous=key}};self.$each();releaseAccumulate()},{$$s:self})});$def(self,"$chunk_while",function $$chunk_while(){var block=$$chunk_while.$$p||nil,self=this;$$chunk_while.$$p=null;if(!(block!==nil))$Kernel.$raise($$$("ArgumentError"),"no block given");return $send(self,"slice_when",[],function $$11(before,after){if(before==null)before=nil;if(after==null)after=nil;return Opal.yieldX(block,[before,after])["$!"]()})});$def(self,"$collect",function $$collect(){var block=$$collect.$$p||
nil,self=this;$$collect.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["collect"],function $$12(){var self=$$12.$$s==null?this:$$12.$$s;return self.$enumerator_size()},{$$s:self});var result=[];self.$each.$$p=function(){var value=$yieldX(block,arguments);result.push(value)};self.$each();return result});$def(self,"$collect_concat",function $$collect_concat(){var block=$$collect_concat.$$p||nil,self=this;$$collect_concat.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["collect_concat"],
function $$13(){var self=$$13.$$s==null?this:$$13.$$s;return self.$enumerator_size()},{$$s:self});return $send(self,"map",[],block.$to_proc()).$flatten(1)});$def(self,"$compact",function $$compact(){var self=this;return self.$to_a().$compact()});$def(self,"$count",function $$count(object){var block=$$count.$$p||nil,self=this,result=nil;$$count.$$p=null;result=0;if(object!=null&&block!==nil)self.$warn("warning: given block not used");if($truthy(object!=null))block=$send($Kernel,"proc",[],function $$14($a){var $post_args,
args;$post_args=$slice(arguments);args=$post_args;return $Opal.$destructure(args)["$=="](object)},-1);else if($truthy(block["$nil?"]()))block=$send($Kernel,"proc",[],$return_val(true));$send(self,"each",[],function $$15($a){var $post_args,args;$post_args=$slice(arguments);args=$post_args;if($truthy($yieldX(block,args)))return result++;else return nil},-1);return result},-1);$def(self,"$cycle",function $$cycle(n){var block=$$cycle.$$p||nil,self=this;$$cycle.$$p=null;if(n==null)n=nil;if(!(block!==nil))return $send(self,
"enum_for",["cycle",n],function $$16(){var self=$$16.$$s==null?this:$$16.$$s;if($truthy(n["$nil?"]()))if($truthy(self["$respond_to?"]("size")))return $$$($$$("Float"),"INFINITY");else return nil;else{n=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if($truthy($rb_gt(n,0)))return $rb_times(self.$enumerator_size(),n);else return 0}},{$$s:self});if(!$truthy(n["$nil?"]())){n=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if($truthy(n<=0))return nil}var all=[],i,length,value;self.$each.$$p=function(){var param=
$Opal.$destructure(arguments),value=$yield1(block,param);all.push(param)};self.$each();if(all.length===0)return nil;if(n===nil)while(true)for(i=0,length=all.length;i<length;i++)value=$yield1(block,all[i]);else while(n>1){for(i=0,length=all.length;i<length;i++)value=$yield1(block,all[i]);n--}},-1);$def(self,"$detect",function $$detect(ifnone){try{var $t_return=$thrower("return");var block=$$detect.$$p||nil,self=this;$$detect.$$p=null;if(!(block!==nil))return self.$enum_for("detect",ifnone);$send(self,
"each",[],function $$17($a){var $post_args,args,value=nil;$post_args=$slice(arguments);args=$post_args;value=$Opal.$destructure(args);if($truthy(Opal.yield1(block,value)))$t_return.$throw(value);else return nil},{$$arity:-1,$$ret:$t_return});if(ifnone!==undefined)if(typeof ifnone==="function")return ifnone();else return ifnone;return nil}catch($e){if($e===$t_return)return $e.$v;throw $e;}},-1);$def(self,"$drop",function $$drop(number){var self=this;number=$coerce_to(number,$$$("Integer"),"to_int");
if($truthy(number<0))$Kernel.$raise($$$("ArgumentError"),"attempt to drop negative size");var result=[],current=0;self.$each.$$p=function(){if(number<=current)result.push($Opal.$destructure(arguments));current++};self.$each();return result});$def(self,"$drop_while",function $$drop_while(){var block=$$drop_while.$$p||nil,self=this;$$drop_while.$$p=null;if(!(block!==nil))return self.$enum_for("drop_while");var result=[],dropping=true;self.$each.$$p=function(){var param=$Opal.$destructure(arguments);
if(dropping){var value=$yield1(block,param);if(!$truthy(value)){dropping=false;result.push(param)}}else result.push(param)};self.$each();return result});$def(self,"$each_cons",function $$each_cons(n){var block=$$each_cons.$$p||nil,self=this;$$each_cons.$$p=null;if($truthy(arguments.length!=1))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+arguments.length+" for 1)");n=$Opal.$try_convert(n,$$$("Integer"),"to_int");if($truthy(n<=0))$Kernel.$raise($$$("ArgumentError"),"invalid size");
if(!(block!==nil))return $send(self,"enum_for",["each_cons",n],function $$18(){var self=$$18.$$s==null?this:$$18.$$s,enum_size=nil;enum_size=self.$enumerator_size();if($truthy(enum_size["$nil?"]()))return nil;else if($eqeq(enum_size,0)||$truthy($rb_lt(enum_size,n)))return 0;else return $rb_plus($rb_minus(enum_size,n),1)},{$$s:self});var buffer=[];self.$each.$$p=function(){var element=$Opal.$destructure(arguments);buffer.push(element);if(buffer.length>n)buffer.shift();if(buffer.length==n)$yield1(block,
buffer.slice(0,n))};self.$each();return self});$def(self,"$each_entry",function $$each_entry($a){var block=$$each_entry.$$p||nil,$post_args,data,self=this;$$each_entry.$$p=null;$post_args=$slice(arguments);data=$post_args;if(!(block!==nil))return $send(self,"to_enum",["each_entry"].concat($to_a(data)),function $$19(){var self=$$19.$$s==null?this:$$19.$$s;return self.$enumerator_size()},{$$s:self});self.$each.$$p=function(){var item=$Opal.$destructure(arguments);$yield1(block,item)};self.$each.apply(self,
data);return self},-1);$def(self,"$each_slice",function $$each_slice(n){var block=$$each_slice.$$p||nil,self=this;$$each_slice.$$p=null;n=$coerce_to(n,$$$("Integer"),"to_int");if($truthy(n<=0))$Kernel.$raise($$$("ArgumentError"),"invalid slice size");if(!(block!==nil))return $send(self,"enum_for",["each_slice",n],function $$20(){var self=$$20.$$s==null?this:$$20.$$s;if($truthy(self["$respond_to?"]("size")))return $rb_divide(self.$size(),n).$ceil();else return nil},{$$s:self});var slice=[];self.$each.$$p=
function(){var param=$Opal.$destructure(arguments);slice.push(param);if(slice.length===n){$yield1(block,slice);slice=[]}};self.$each();if(slice.length>0)$yield1(block,slice);return self});$def(self,"$each_with_index",function $$each_with_index($a){var block=$$each_with_index.$$p||nil,$post_args,args,self=this;$$each_with_index.$$p=null;$post_args=$slice(arguments);args=$post_args;if(!(block!==nil))return $send(self,"enum_for",["each_with_index"].concat($to_a(args)),function $$21(){var self=$$21.$$s==
null?this:$$21.$$s;return self.$enumerator_size()},{$$s:self});var index=0;self.$each.$$p=function(){var param=$Opal.$destructure(arguments);block(param,index);index++};self.$each.apply(self,args);return self},-1);$def(self,"$each_with_object",function $$each_with_object(object){var block=$$each_with_object.$$p||nil,self=this;$$each_with_object.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["each_with_object",object],function $$22(){var self=$$22.$$s==null?this:$$22.$$s;return self.$enumerator_size()},
{$$s:self});self.$each.$$p=function(){var param=$Opal.$destructure(arguments);block(param,object)};self.$each();return object});$def(self,"$entries",function $$entries($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;var result=[];self.$each.$$p=function(){result.push($Opal.$destructure(arguments))};self.$each.apply(self,args);return result},-1);$def(self,"$filter_map",function $$filter_map(){var block=$$filter_map.$$p||nil,self=this;$$filter_map.$$p=null;if(!(block!==
nil))return $send(self,"enum_for",["filter_map"],function $$23(){var self=$$23.$$s==null?this:$$23.$$s;return self.$enumerator_size()},{$$s:self});return $send($send(self,"map",[],block.$to_proc()),"select",[],"itself".$to_proc())});$def(self,"$find_all",function $$find_all(){var block=$$find_all.$$p||nil,self=this;$$find_all.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["find_all"],function $$24(){var self=$$24.$$s==null?this:$$24.$$s;return self.$enumerator_size()},{$$s:self});var result=
[];self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=$yield1(block,param);if($truthy(value))result.push(param)};self.$each();return result});$def(self,"$find_index",function $$find_index(object){try{var $t_return=$thrower("return");var block=$$find_index.$$p||nil,self=this,index=nil;$$find_index.$$p=null;if($truthy(object===undefined&&block===nil))return self.$enum_for("find_index");if(object!=null&&block!==nil)self.$warn("warning: given block not used");index=0;if($truthy(object!=
null))$send(self,"each",[],function $$25($a){var $post_args,value;$post_args=$slice(arguments);value=$post_args;if($eqeq($Opal.$destructure(value),object))$t_return.$throw(index);return index+=1},{$$arity:-1,$$ret:$t_return});else $send(self,"each",[],function $$26($a){var $post_args,value;$post_args=$slice(arguments);value=$post_args;if($truthy(Opal.yieldX(block,$to_a(value))))$t_return.$throw(index);return index+=1},{$$arity:-1,$$ret:$t_return});return nil}catch($e){if($e===$t_return)return $e.$v;
throw $e;}},-1);$def(self,"$first",function $$first(number){try{var $t_return=$thrower("return");var self=this,result=nil,current=nil;if($truthy(number===undefined))return $send(self,"each",[],function $$27(value){if(value==null)value=nil;$t_return.$throw(value)},{$$ret:$t_return});else{result=[];number=$coerce_to(number,$$$("Integer"),"to_int");if($truthy(number<0))$Kernel.$raise($$$("ArgumentError"),"attempt to take negative size");if($truthy(number==0))return[];current=0;$send(self,"each",[],function $$28($a){var $post_args,
args;$post_args=$slice(arguments);args=$post_args;result.push($Opal.$destructure(args));if($truthy(number<=++current))$t_return.$throw(result);else return nil},{$$arity:-1,$$ret:$t_return});return result}}catch($e){if($e===$t_return)return $e.$v;throw $e;}},-1);$def(self,"$grep",function $$grep(pattern){var block=$$grep.$$p||nil,self=this,result=nil;$$grep.$$p=null;result=[];$send(self,"each",[],function $$29($a){var $post_args,value,cmp=nil;$post_args=$slice(arguments);value=$post_args;cmp=comparableForPattern(value);
if(!$truthy($send(pattern,"__send__",["==="].concat($to_a(cmp)))))return nil;if(block!==nil){if($truthy($rb_gt(value.$length(),1)))value=[value];value=Opal.yieldX(block,$to_a(value))}else if($truthy($rb_le(value.$length(),1)))value=value["$[]"](0);return result.$push(value)},-1);return result});$def(self,"$grep_v",function $$grep_v(pattern){var block=$$grep_v.$$p||nil,self=this,result=nil;$$grep_v.$$p=null;result=[];$send(self,"each",[],function $$30($a){var $post_args,value,cmp=nil;$post_args=$slice(arguments);
value=$post_args;cmp=comparableForPattern(value);if($truthy($send(pattern,"__send__",["==="].concat($to_a(cmp)))))return nil;if(block!==nil){if($truthy($rb_gt(value.$length(),1)))value=[value];value=Opal.yieldX(block,$to_a(value))}else if($truthy($rb_le(value.$length(),1)))value=value["$[]"](0);return result.$push(value)},-1);return result});$def(self,"$group_by",function $$group_by(){var block=$$group_by.$$p||nil,$a,self=this,hash=nil,$ret_or_1=nil;$$group_by.$$p=null;if(!(block!==nil))return $send(self,
"enum_for",["group_by"],function $$31(){var self=$$31.$$s==null?this:$$31.$$s;return self.$enumerator_size()},{$$s:self});hash=$hash2([],{});var result;self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=$yield1(block,param);($truthy($ret_or_1=hash["$[]"](value))?$ret_or_1:($a=[value,[]],$send(hash,"[]=",$a),$a[$a.length-1]))["$<<"](param)};self.$each();if(result!==undefined)return result;return hash});$def(self,"$include?",function $Enumerable_include$ques$32(obj){try{var $t_return=
$thrower("return");var self=this;$send(self,"each",[],function $$33($a){var $post_args,args;$post_args=$slice(arguments);args=$post_args;if($eqeq($Opal.$destructure(args),obj))$t_return.$throw(true);else return nil},{$$arity:-1,$$ret:$t_return});return false}catch($e){if($e===$t_return)return $e.$v;throw $e;}});$def(self,"$inject",function $$inject(object,sym){var block=$$inject.$$p||nil,self=this;$$inject.$$p=null;var result=object;if(block!==nil&&sym===undefined)self.$each.$$p=function(){var value=
$Opal.$destructure(arguments);if(result===undefined){result=value;return}value=$yieldX(block,[result,value]);result=value};else{if(sym===undefined){if(!$$$("Symbol")["$==="](object))$Kernel.$raise($$$("TypeError"),""+object.$inspect()+" is not a Symbol");sym=object;result=undefined}self.$each.$$p=function(){var value=$Opal.$destructure(arguments);if(result===undefined){result=value;return}result=result.$__send__(sym,value)}}self.$each();return result==undefined?nil:result},-1);$def(self,"$lazy",function $$lazy(){var self=
this;return $send($$$($$$("Enumerator"),"Lazy"),"new",[self,self.$enumerator_size()],function $$34(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=$post_args;return $send(enum$,"yield",$to_a(args))},-2)});$def(self,"$enumerator_size",function $$enumerator_size(){var self=this;if($truthy(self["$respond_to?"]("size")))return self.$size();else return nil});$def(self,"$max",function $$max(n){var block=$$max.$$p||nil,self=this;$$max.$$p=null;if(n===undefined||
n===nil){var result,value;self.$each.$$p=function(){var item=$Opal.$destructure(arguments);if(result===undefined){result=item;return}if(block!==nil)value=$yieldX(block,[item,result]);else value=item["$<=>"](result);if(value===nil)$Kernel.$raise($$$("ArgumentError"),"comparison failed");if(value>0)result=item};self.$each();if(result===undefined)return nil;else return result}n=$coerce_to(n,$$$("Integer"),"to_int");return $send(self,"sort",[],block.$to_proc()).$reverse().$first(n)},-1);$def(self,"$max_by",
function $$max_by(n){var block=$$max_by.$$p||nil,self=this;$$max_by.$$p=null;if(n==null)n=nil;if(!$truthy(block))return $send(self,"enum_for",["max_by",n],function $$35(){var self=$$35.$$s==null?this:$$35.$$s;return self.$enumerator_size()},{$$s:self});if(!$truthy(n["$nil?"]()))return $send(self,"sort_by",[],block.$to_proc()).$reverse().$take(n);var result,by;self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=$yield1(block,param);if(result===undefined){result=param;by=value;return}if(value["$<=>"](by)>
0){result=param;by=value}};self.$each();return result===undefined?nil:result},-1);$def(self,"$min",function $$min(n){var block=$$min.$$p||nil,self=this;$$min.$$p=null;if(n==null)n=nil;if(!$truthy(n["$nil?"]()))if(block!==nil)return $send(self,"sort",[],function $$36(a,b){if(a==null)a=nil;if(b==null)b=nil;return Opal.yieldX(block,[a,b])}).$take(n);else return self.$sort().$take(n);var result;if(block!==nil)self.$each.$$p=function(){var param=$Opal.$destructure(arguments);if(result===undefined){result=
param;return}var value=block(param,result);if(value===nil)$Kernel.$raise($$$("ArgumentError"),"comparison failed");if(value<0)result=param};else self.$each.$$p=function(){var param=$Opal.$destructure(arguments);if(result===undefined){result=param;return}if($Opal.$compare(param,result)<0)result=param};self.$each();return result===undefined?nil:result},-1);$def(self,"$min_by",function $$min_by(n){var block=$$min_by.$$p||nil,self=this;$$min_by.$$p=null;if(n==null)n=nil;if(!$truthy(block))return $send(self,
"enum_for",["min_by",n],function $$37(){var self=$$37.$$s==null?this:$$37.$$s;return self.$enumerator_size()},{$$s:self});if(!$truthy(n["$nil?"]()))return $send(self,"sort_by",[],block.$to_proc()).$take(n);var result,by;self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=$yield1(block,param);if(result===undefined){result=param;by=value;return}if(value["$<=>"](by)<0){result=param;by=value}};self.$each();return result===undefined?nil:result},-1);$def(self,"$minmax",function $$minmax(){var block=
$$minmax.$$p||nil,self=this,$ret_or_1=nil;$$minmax.$$p=null;block=$truthy($ret_or_1=block)?$ret_or_1:$send($Kernel,"proc",[],function $$38(a,b){if(a==null)a=nil;if(b==null)b=nil;return a["$<=>"](b)});var min=nil,max=nil,first_time=true;self.$each.$$p=function(){var element=$Opal.$destructure(arguments);if(first_time){min=max=element;first_time=false}else{var min_cmp=block.$call(min,element);if(min_cmp===nil)$Kernel.$raise($$$("ArgumentError"),"comparison failed");else if(min_cmp>0)min=element;var max_cmp=
block.$call(max,element);if(max_cmp===nil)$Kernel.$raise($$$("ArgumentError"),"comparison failed");else if(max_cmp<0)max=element}};self.$each();return[min,max]});$def(self,"$minmax_by",function $$minmax_by(){var block=$$minmax_by.$$p||nil,self=this;$$minmax_by.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["minmax_by"],function $$39(){var self=$$39.$$s==null?this:$$39.$$s;return self.$enumerator_size()},{$$s:self});var min_result=nil,max_result=nil,min_by,max_by;self.$each.$$p=function(){var param=
$Opal.$destructure(arguments),value=$yield1(block,param);if(min_by===undefined||value["$<=>"](min_by)<0){min_result=param;min_by=value}if(max_by===undefined||value["$<=>"](max_by)>0){max_result=param;max_by=value}};self.$each();return[min_result,max_result]});$def(self,"$none?",function $Enumerable_none$ques$40(pattern){try{var $t_return=$thrower("return");var block=$Enumerable_none$ques$40.$$p||nil,self=this;$Enumerable_none$ques$40.$$p=null;if($truthy(pattern!==undefined))$send(self,"each",[],function $$41($a){var $post_args,
value,comparable=nil;$post_args=$slice(arguments);value=$post_args;comparable=comparableForPattern(value);if($truthy($send(pattern,"public_send",["==="].concat($to_a(comparable)))))$t_return.$throw(false);else return nil},{$$arity:-1,$$ret:$t_return});else if(block!==nil)$send(self,"each",[],function $$42($a){var $post_args,value;$post_args=$slice(arguments);value=$post_args;if($truthy(Opal.yieldX(block,$to_a(value))))$t_return.$throw(false);else return nil},{$$arity:-1,$$ret:$t_return});else $send(self,
"each",[],function $$43($a){var $post_args,value,item=nil;$post_args=$slice(arguments);value=$post_args;item=$Opal.$destructure(value);if($truthy(item))$t_return.$throw(false);else return nil},{$$arity:-1,$$ret:$t_return});return true}catch($e){if($e===$t_return)return $e.$v;throw $e;}},-1);$def(self,"$one?",function $Enumerable_one$ques$44(pattern){try{var $t_return=$thrower("return");var block=$Enumerable_one$ques$44.$$p||nil,self=this,count=nil;$Enumerable_one$ques$44.$$p=null;count=0;if($truthy(pattern!==
undefined))$send(self,"each",[],function $$45($a){var $post_args,value,comparable=nil;$post_args=$slice(arguments);value=$post_args;comparable=comparableForPattern(value);if($truthy($send(pattern,"public_send",["==="].concat($to_a(comparable))))){count=$rb_plus(count,1);if($truthy($rb_gt(count,1)))$t_return.$throw(false);else return nil}else return nil},{$$arity:-1,$$ret:$t_return});else if(block!==nil)$send(self,"each",[],function $$46($a){var $post_args,value;$post_args=$slice(arguments);value=
$post_args;if(!$truthy(Opal.yieldX(block,$to_a(value))))return nil;count=$rb_plus(count,1);if($truthy($rb_gt(count,1)))$t_return.$throw(false);else return nil},{$$arity:-1,$$ret:$t_return});else $send(self,"each",[],function $$47($a){var $post_args,value;$post_args=$slice(arguments);value=$post_args;if(!$truthy($Opal.$destructure(value)))return nil;count=$rb_plus(count,1);if($truthy($rb_gt(count,1)))$t_return.$throw(false);else return nil},{$$arity:-1,$$ret:$t_return});return count["$=="](1)}catch($e){if($e===
$t_return)return $e.$v;throw $e;}},-1);$def(self,"$partition",function $$partition(){var block=$$partition.$$p||nil,self=this;$$partition.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["partition"],function $$48(){var self=$$48.$$s==null?this:$$48.$$s;return self.$enumerator_size()},{$$s:self});var truthy=[],falsy=[],result;self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=$yield1(block,param);if($truthy(value))truthy.push(param);else falsy.push(param)};self.$each();
return[truthy,falsy]});$def(self,"$reject",function $$reject(){var block=$$reject.$$p||nil,self=this;$$reject.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["reject"],function $$49(){var self=$$49.$$s==null?this:$$49.$$s;return self.$enumerator_size()},{$$s:self});var result=[];self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=$yield1(block,param);if(!$truthy(value))result.push(param)};self.$each();return result});$def(self,"$reverse_each",function $$reverse_each(){var block=
$$reverse_each.$$p||nil,self=this;$$reverse_each.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["reverse_each"],function $$50(){var self=$$50.$$s==null?this:$$50.$$s;return self.$enumerator_size()},{$$s:self});var result=[];self.$each.$$p=function(){result.push(arguments)};self.$each();for(var i=result.length-1;i>=0;i--)$yieldX(block,result[i]);return result});$def(self,"$slice_before",function $$slice_before(pattern){var block=$$slice_before.$$p||nil,self=this;$$slice_before.$$p=null;if($truthy(pattern===
undefined&&block===nil))$Kernel.$raise($$$("ArgumentError"),"both pattern and block are given");if($truthy(pattern!==undefined&&block!==nil||arguments.length>1))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+arguments.length+" expected 1)");return $send($$$("Enumerator"),"new",[],function $$51(e){var self=$$51.$$s==null?this:$$51.$$s;if(e==null)e=nil;var slice=[];if(block!==nil)if(pattern===undefined)self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=$yield1(block,
param);if($truthy(value)&&slice.length>0){e["$<<"](slice);slice=[]}slice.push(param)};else self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=block(param,pattern.$dup());if($truthy(value)&&slice.length>0){e["$<<"](slice);slice=[]}slice.push(param)};else self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=pattern["$==="](param);if($truthy(value)&&slice.length>0){e["$<<"](slice);slice=[]}slice.push(param)};self.$each();if(slice.length>0)e["$<<"](slice)},{$$s:self})},
-1);$def(self,"$slice_after",function $$slice_after(pattern){var block=$$slice_after.$$p||nil,self=this;$$slice_after.$$p=null;if($truthy(pattern===undefined&&block===nil))$Kernel.$raise($$$("ArgumentError"),"both pattern and block are given");if($truthy(pattern!==undefined&&block!==nil||arguments.length>1))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+arguments.length+" expected 1)");if($truthy(pattern!==undefined))block=$send($Kernel,"proc",[],function $$52(e){if(e==null)e=nil;
return pattern["$==="](e)});return $send($$$("Enumerator"),"new",[],function $$53(yielder){var self=$$53.$$s==null?this:$$53.$$s;if(yielder==null)yielder=nil;var accumulate;self.$each.$$p=function(){var element=$Opal.$destructure(arguments),end_chunk=$yield1(block,element);if(accumulate==null)accumulate=[];if($truthy(end_chunk)){accumulate.push(element);yielder.$yield(accumulate);accumulate=null}else accumulate.push(element)};self.$each();if(accumulate!=null)yielder.$yield(accumulate)},{$$s:self})},
-1);$def(self,"$slice_when",function $$slice_when(){var block=$$slice_when.$$p||nil,self=this;$$slice_when.$$p=null;if(!(block!==nil))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments (0 for 1)");return $send($$$("Enumerator"),"new",[],function $$54(yielder){var self=$$54.$$s==null?this:$$54.$$s;if(yielder==null)yielder=nil;var slice=nil,last_after=nil;self.$each_cons.$$p=function(){var params=$Opal.$destructure(arguments),before=params[0],after=params[1],match=$yieldX(block,[before,
after]);last_after=after;if(slice===nil)slice=[];if($truthy(match)){slice.push(before);yielder.$yield(slice);slice=[]}else slice.push(before)};self.$each_cons(2);if(slice!==nil){slice.push(last_after);yielder.$yield(slice)}},{$$s:self})});$def(self,"$sort",function $$sort(){var block=$$sort.$$p||nil,self=this,ary=nil;$$sort.$$p=null;ary=self.$to_a();if(!(block!==nil))block=$lambda(function $$55(a,b){if(a==null)a=nil;if(b==null)b=nil;return a["$<=>"](b)});return $send(ary,"sort",[],block.$to_proc())});
$def(self,"$sort_by",function $$sort_by(){var block=$$sort_by.$$p||nil,self=this,dup=nil;$$sort_by.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["sort_by"],function $$56(){var self=$$56.$$s==null?this:$$56.$$s;return self.$enumerator_size()},{$$s:self});dup=$send(self,"map",[],function $$57(){var arg=nil;arg=$Opal.$destructure(arguments);return[Opal.yield1(block,arg),arg]});$send(dup,"sort!",[],function $$58(a,b){if(a==null)a=nil;if(b==null)b=nil;return a[0]["$<=>"](b[0])});return $send(dup,
"map!",[],function $$59(i){if(i==null)i=nil;return i[1]})});$def(self,"$sum",function $$sum(initial){var $yield=$$sum.$$p||nil,self=this,result=nil,compensation=nil;$$sum.$$p=null;if(initial==null)initial=0;result=initial;compensation=0;$send(self,"each",[],function $$60($a){var $post_args,args,item=nil,y=nil,t=nil;$post_args=$slice(arguments);args=$post_args;item=$yield!==nil?Opal.yieldX($yield,$to_a(args)):$Opal.$destructure(args);if($not([$$$($$$("Float"),"INFINITY"),$$$($$$("Float"),"INFINITY")["$-@"]()]["$include?"](item))&&
$truthy(item["$respond_to?"]("-"))){y=$rb_minus(item,compensation);t=$rb_plus(result,y);compensation=$rb_minus($rb_minus(t,result),y);return result=t}else return result=$rb_plus(result,item)},-1);return result},-1);$def(self,"$take",function $$take(num){var self=this;return self.$first(num)});$def(self,"$take_while",function $$take_while(){try{var $t_return=$thrower("return");var block=$$take_while.$$p||nil,self=this,result=nil;$$take_while.$$p=null;if(!$truthy(block))return self.$enum_for("take_while");
result=[];return $send(self,"each",[],function $$61($a){var $post_args,args,value=nil;$post_args=$slice(arguments);args=$post_args;value=$Opal.$destructure(args);if(!$truthy(Opal.yield1(block,value)))$t_return.$throw(result);return result.push(value)},{$$arity:-1,$$ret:$t_return})}catch($e){if($e===$t_return)return $e.$v;throw $e;}});$def(self,"$uniq",function $$uniq(){var block=$$uniq.$$p||nil,self=this,hash=nil;$$uniq.$$p=null;hash=$hash2([],{});$send(self,"each",[],function $$62($a){var $post_args,
args,$b,value=nil,produced=nil;$post_args=$slice(arguments);args=$post_args;value=$Opal.$destructure(args);produced=block!==nil?Opal.yield1(block,value):value;if($truthy(hash["$key?"](produced)))return nil;else return $b=[produced,value],$send(hash,"[]=",$b),$b[$b.length-1]},-1);return hash.$values()});$def(self,"$tally",function $$tally(hash){var self=this,out=nil;if(hash&&hash!==nil)$deny_frozen_access(hash);out=$send($send(self,"group_by",[],"itself".$to_proc()),"transform_values",[],"count".$to_proc());
if($truthy(hash)){$send(out,"each",[],function $$63(k,v){var $a;if(k==null)k=nil;if(v==null)v=nil;return $a=[k,$rb_plus(hash.$fetch(k,0),v)],$send(hash,"[]=",$a),$a[$a.length-1]});return hash}else return out},-1);$def(self,"$to_h",function $$to_h($a){var block=$$to_h.$$p||nil,$post_args,args,self=this;$$to_h.$$p=null;$post_args=$slice(arguments);args=$post_args;if(block!==nil)return $send($send(self,"map",[],block.$to_proc()),"to_h",$to_a(args));var hash=$hash2([],{});self.$each.$$p=function(){var param=
$Opal.$destructure(arguments);var ary=$Opal["$coerce_to?"](param,$$$("Array"),"to_ary"),key,val;if(!ary.$$is_array)$Kernel.$raise($$$("TypeError"),"wrong element type "+ary.$class()+" (expected array)");if(ary.length!==2)$Kernel.$raise($$$("ArgumentError"),"wrong array length (expected 2, was "+ary.$length()+")");key=ary[0];val=ary[1];Opal.hash_put(hash,key,val)};self.$each.apply(self,args);return hash},-1);$def(self,"$to_set",function $$to_set($a,$b){var block=$$to_set.$$p||nil,$post_args,klass,
args,self=this;$$to_set.$$p=null;$post_args=$slice(arguments);if($post_args.length>0)klass=$post_args.shift();if(klass==null)klass=$$("Set");args=$post_args;return $send(klass,"new",[self].concat($to_a(args)),block.$to_proc())},-1);$def(self,"$zip",function $$zip($a){var block=$$zip.$$p||nil,$post_args,others,self=this;$$zip.$$p=null;$post_args=$slice(arguments);others=$post_args;return $send(self.$to_a(),"zip",$to_a(others))},-1);$alias(self,"find","detect");$alias(self,"filter","find_all");$alias(self,
"flat_map","collect_concat");$alias(self,"map","collect");$alias(self,"member?","include?");$alias(self,"reduce","inject");$alias(self,"select","find_all");return $alias(self,"to_a","entries")}("::",$nesting)};
Opal.modules["corelib/enumerator/arithmetic_sequence"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$to_a=Opal.to_a,$eqeq=Opal.eqeq,$Kernel=Opal.Kernel,$def=Opal.def,$rb_gt=Opal.rb_gt,$rb_lt=Opal.rb_lt,$rb_le=Opal.rb_le,$rb_ge=Opal.rb_ge,$rb_plus=Opal.rb_plus,$rb_minus=Opal.rb_minus,$eqeqeq=Opal.eqeqeq,$not=Opal.not,$rb_times=Opal.rb_times,$rb_divide=Opal.rb_divide,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("is_a?,==,raise,respond_to?,class,attr_reader,begin,end,exclude_end?,>,step,<,<=,>=,-@,_lesser_than_end?,<<,+,-,===,%,_greater_than_begin?,reverse,!,include?,*,to_i,abs,/,hash,inspect");
return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Enumerator");var $nesting=[self].concat($parent_nesting);return function($base,$super,$parent_nesting){var self=$klass($base,$super,"ArithmeticSequence");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.step_arg2=$proto.receiver_num=$proto.step_arg1=$proto.step=$proto.range=$proto.topfx=$proto.bypfx=$proto.creation_method=$proto.skipped_arg=nil;Opal.prop(self.$$prototype,"$$is_arithmetic_seq",
true);var inf=Infinity;$def(self,"$initialize",function $$initialize(range,step,creation_method){var $a,self=this,$ret_or_1=nil;if(creation_method==null)creation_method="step";self.creation_method=creation_method;if($truthy(range["$is_a?"]($$$("Array")))){$a=[].concat($to_a(range)),self.step_arg1=$a[0]==null?nil:$a[0],self.step_arg2=$a[1]==null?nil:$a[1],self.topfx=$a[2]==null?nil:$a[2],self.bypfx=$a[3]==null?nil:$a[3],$a;self.receiver_num=step;self.step=1;self.range=$truthy(self.step_arg2)?(self.step=
self.step_arg2,Opal.Range.$new(self.receiver_num,self.step_arg1,false)):$truthy(self.step_arg1)?Opal.Range.$new(self.receiver_num,self.step_arg1,false):Opal.Range.$new(self.receiver_num,nil,false)}else{if(!$truthy(step))self.skipped_arg=true;$a=[range,$truthy($ret_or_1=step)?$ret_or_1:1],self.range=$a[0],self.step=$a[1],$a}self.object=self;if($eqeq(self.step,0))$Kernel.$raise($$("ArgumentError"),"step can't be 0");if($truthy(self.step["$respond_to?"]("to_int")))return nil;else return $Kernel.$raise($$("ArgumentError"),
""+("no implicit conversion of "+self.step.$class()+" ")+"into Integer")},-2);self.$attr_reader("step");$def(self,"$begin",function $$begin(){var self=this;return self.range.$begin()});$def(self,"$end",function $$end(){var self=this;return self.range.$end()});$def(self,"$exclude_end?",function $ArithmeticSequence_exclude_end$ques$1(){var self=this;return self.range["$exclude_end?"]()});$def(self,"$_lesser_than_end?",function $ArithmeticSequence__lesser_than_end$ques$2(val){var self=this,end_=nil,
$ret_or_1=nil;end_=$truthy($ret_or_1=self.$end())?$ret_or_1:inf;if($truthy($rb_gt(self.$step(),0)))if($truthy(self["$exclude_end?"]()))return $rb_lt(val,end_);else return $rb_le(val,end_);else if($truthy(self["$exclude_end?"]()))return $rb_gt(val,end_);else return $rb_ge(val,end_)});$def(self,"$_greater_than_begin?",function $ArithmeticSequence__greater_than_begin$ques$3(val){var self=this,begin_=nil,$ret_or_1=nil;begin_=$truthy($ret_or_1=self.$begin())?$ret_or_1:inf["$-@"]();if($truthy($rb_gt(self.$step(),
0)))return $rb_gt(val,begin_);else return $rb_lt(val,begin_)});$def(self,"$first",function $$first(count){var self=this,iter=nil,$ret_or_1=nil,out=nil;iter=$truthy($ret_or_1=self.$begin())?$ret_or_1:inf["$-@"]();if(!$truthy(count))return $truthy(self["$_lesser_than_end?"](iter))?iter:nil;out=[];while($truthy($truthy($ret_or_1=self["$_lesser_than_end?"](iter))?$rb_gt(count,0):$ret_or_1)){out["$<<"](iter);iter=$rb_plus(iter,self.$step());count=$rb_minus(count,1)}return out},-1);$def(self,"$each",function $$each(){var block=
$$each.$$p||nil,self=this,$ret_or_1=nil,iter=nil;$$each.$$p=null;if(!(block!==nil))return self;if($eqeqeq(nil,$ret_or_1=self.$begin()))$Kernel.$raise($$("TypeError"),"nil can't be coerced into Integer");else nil;iter=$truthy($ret_or_1=self.$begin())?$ret_or_1:inf["$-@"]();while($truthy(self["$_lesser_than_end?"](iter))){Opal.yield1(block,iter);iter=$rb_plus(iter,self.$step())}return self});$def(self,"$last",function $$last(count){var self=this,$ret_or_1=nil,iter=nil,out=nil;if($eqeqeq(inf,$ret_or_1=
self.$end())||$eqeqeq(inf["$-@"](),$ret_or_1))$Kernel.$raise($$$("FloatDomainError"),self.$end());else if($eqeqeq(nil,$ret_or_1))$Kernel.$raise($$$("RangeError"),"cannot get the last element of endless arithmetic sequence");else nil;iter=$rb_minus(self.$end(),$rb_minus(self.$end(),self.$begin())["$%"](self.$step()));if(!$truthy(self["$_lesser_than_end?"](iter)))iter=$rb_minus(iter,self.$step());if(!$truthy(count))return $truthy(self["$_greater_than_begin?"](iter))?iter:nil;out=[];while($truthy($truthy($ret_or_1=
self["$_greater_than_begin?"](iter))?$rb_gt(count,0):$ret_or_1)){out["$<<"](iter);iter=$rb_minus(iter,self.$step());count=$rb_minus(count,1)}return out.$reverse()},-1);$def(self,"$size",function $$size(){var self=this,step_sign=nil,iter=nil;step_sign=$truthy($rb_gt(self.$step(),0))?1:-1;if($not(self["$_lesser_than_end?"](self.$begin())))return 0;else if($truthy([inf["$-@"](),inf]["$include?"](self.$step())))return 1;else if($truthy([$rb_times(inf["$-@"](),step_sign),nil]["$include?"](self.$begin()))||
$truthy([$rb_times(inf,step_sign),nil]["$include?"](self.$end())))return inf;else{iter=$rb_minus(self.$end(),$rb_minus(self.$end(),self.$begin())["$%"](self.$step()));if(!$truthy(self["$_lesser_than_end?"](iter)))iter=$rb_minus(iter,self.$step());return $rb_plus($rb_divide($rb_minus(iter,self.$begin()),self.$step()).$abs().$to_i(),1)}});$def(self,"$==",function $ArithmeticSequence_$eq_eq$4(other){var self=this,$ret_or_1=nil,$ret_or_2=nil,$ret_or_3=nil,$ret_or_4=nil;if($truthy($ret_or_1=$truthy($ret_or_2=
$truthy($ret_or_3=$truthy($ret_or_4=self.$class()["$=="](other.$class()))?self.$begin()["$=="](other.$begin()):$ret_or_4)?self.$end()["$=="](other.$end()):$ret_or_3)?self.$step()["$=="](other.$step()):$ret_or_2))return self["$exclude_end?"]()["$=="](other["$exclude_end?"]());else return $ret_or_1});$def(self,"$hash",function $$hash(){var self=this;return[self.$begin(),self.$end(),self.$step(),self["$exclude_end?"]()].$hash()});$def(self,"$inspect",function $$inspect(){var self=this,args=nil;if($truthy(self.receiver_num)){args=
$truthy(self.step_arg2)?"("+self.topfx+self.step_arg1.$inspect()+", "+self.bypfx+self.step_arg2.$inspect()+")":$truthy(self.step_arg1)?"("+self.topfx+self.step_arg1.$inspect()+")":nil;return"("+self.receiver_num.$inspect()+"."+self.creation_method+args+")"}else{args=$truthy(self.skipped_arg)?nil:"("+self.step+")";return"(("+self.range.$inspect()+")."+self.creation_method+args+")"}});$alias(self,"===","==");return $alias(self,"eql?","==")}(self,self,$nesting)}("::",null,$nesting)};
Opal.modules["corelib/enumerator/chain"]=function(Opal){var $deny_frozen_access=Opal.deny_frozen_access,$klass=Opal.klass,$slice=Opal.slice,$def=Opal.def,$send=Opal.send,$to_a=Opal.to_a,$truthy=Opal.truthy,$rb_plus=Opal.rb_plus,$thrower=Opal.thrower,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("to_enum,size,each,<<,to_proc,include?,+,reverse_each,respond_to?,rewind,inspect");return function($base,$super){var self=$klass($base,$super,"Enumerator");return function($base,$super){var self=$klass($base,$super,
"Chain");var $proto=self.$$prototype;$proto.enums=$proto.iterated=nil;$def(self,"$initialize",function $$initialize($a){var $post_args,enums,self=this;$post_args=$slice(arguments);enums=$post_args;$deny_frozen_access(self);self.enums=enums;self.iterated=[];return self.object=self},-1);$def(self,"$each",function $$each($a){var block=$$each.$$p||nil,$post_args,args,self=this;$$each.$$p=null;$post_args=$slice(arguments);args=$post_args;if(!(block!==nil))return $send(self,"to_enum",["each"].concat($to_a(args)),
function $$1(){var self=$$1.$$s==null?this:$$1.$$s;return self.$size()},{$$s:self});$send(self.enums,"each",[],function $$2(enum$){var self=$$2.$$s==null?this:$$2.$$s;if(self.iterated==null)self.iterated=nil;if(enum$==null)enum$=nil;self.iterated["$<<"](enum$);return $send(enum$,"each",$to_a(args),block.$to_proc())},{$$s:self});return self},-1);$def(self,"$size",function $$size($a){try{var $t_return=$thrower("return");var $post_args,args,self=this,accum=nil;$post_args=$slice(arguments);args=$post_args;
accum=0;$send(self.enums,"each",[],function $$3(enum$){var size=nil;if(enum$==null)enum$=nil;size=$send(enum$,"size",$to_a(args));if($truthy([nil,$$$($$$("Float"),"INFINITY")]["$include?"](size)))$t_return.$throw(size);return accum=$rb_plus(accum,size)},{$$ret:$t_return});return accum}catch($e){if($e===$t_return)return $e.$v;throw $e;}},-1);$def(self,"$rewind",function $$rewind(){var self=this;$send(self.iterated,"reverse_each",[],function $$4(enum$){if(enum$==null)enum$=nil;if($truthy(enum$["$respond_to?"]("rewind")))return enum$.$rewind();
else return nil});self.iterated=[];return self});return $def(self,"$inspect",function $$inspect(){var self=this;return"#<Enumerator::Chain: "+self.enums.$inspect()+">"})}(self,self)}("::",null)};
Opal.modules["corelib/enumerator/generator"]=function(Opal){var $deny_frozen_access=Opal.deny_frozen_access,$klass=Opal.klass,$truthy=Opal.truthy,$Kernel=Opal.Kernel,$def=Opal.def,$slice=Opal.slice,$send=Opal.send,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("include,raise,new,to_proc");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Enumerator");var $nesting=[self].concat($parent_nesting);return function($base,$super,$parent_nesting){var self=$klass($base,$super,
"Generator");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.block=nil;self.$include($$$("Enumerable"));$def(self,"$initialize",function $$initialize(){var block=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;$deny_frozen_access(self);if(!$truthy(block))$Kernel.$raise($$$("LocalJumpError"),"no block given");return self.block=block});return $def(self,"$each",function $$each($a){var block=$$each.$$p||nil,$post_args,args,self=this,yielder=nil;$$each.$$p=
null;$post_args=$slice(arguments);args=$post_args;yielder=$send($$("Yielder"),"new",[],block.$to_proc());try{args.unshift(yielder);Opal.yieldX(self.block,args)}catch(e){if(e&&e.$thrower_type=="breaker")return e.$v;else throw e;}return self},-1)}($nesting[0],null,$nesting)}($nesting[0],null,$nesting)};
Opal.modules["corelib/enumerator/lazy"]=function(Opal){var $truthy=Opal.truthy,$coerce_to=Opal.coerce_to,$yield1=Opal.yield1,$yieldX=Opal.yieldX,$deny_frozen_access=Opal.deny_frozen_access,$klass=Opal.klass,$slice=Opal.slice,$send2=Opal.send2,$find_super=Opal.find_super,$to_a=Opal.to_a,$defs=Opal.defs,$Kernel=Opal.Kernel,$send=Opal.send,$def=Opal.def,$return_self=Opal.return_self,$Opal=Opal.Opal,$rb_lt=Opal.rb_lt,$eqeqeq=Opal.eqeqeq,$rb_plus=Opal.rb_plus,$alias=Opal.alias,$nesting=[],nil=Opal.nil,
$$$=Opal.$$$;Opal.add_stubs("raise,each,new,enumerator_size,yield,respond_to?,try_convert,<,===,+,for,class,to_proc,destructure,inspect,to_a,find_all,collect_concat,collect,enum_for");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Enumerator");var $nesting=[self].concat($parent_nesting);return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Lazy");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.enumerator=
nil;$klass(self,$$$("Exception"),"StopLazyError");$defs(self,"$for",function $Lazy_for$1(object,$a){var $post_args,$fwd_rest,$yield=$Lazy_for$1.$$p||nil,self=this,lazy=nil;$Lazy_for$1.$$p=null;$post_args=$slice(arguments,1);$fwd_rest=$post_args;lazy=$send2(self,$find_super(self,"for",$Lazy_for$1,false,true),"for",[object].concat($to_a($fwd_rest)),$yield);lazy.enumerator=object;return lazy},-2);$def(self,"$initialize",function $$initialize(object,size){var block=$$initialize.$$p||nil,self=this;$$initialize.$$p=
null;if(size==null)size=nil;$deny_frozen_access(self);if(!(block!==nil))$Kernel.$raise($$$("ArgumentError"),"tried to call lazy new without a block");self.enumerator=object;return $send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",[size],function $$2(yielder,$a){var $post_args,each_args;if(yielder==null)yielder=nil;$post_args=$slice(arguments,1);each_args=$post_args;try{return $send(object,"each",$to_a(each_args),function $$3($b){var $post_args,args;$post_args=$slice(arguments);
args=$post_args;args.unshift(yielder);$yieldX(block,args)},-1)}catch($err){if(Opal.rescue($err,[$$("StopLazyError")]))try{return nil}finally{Opal.pop_exception()}else throw $err;}},-2)},-2);$def(self,"$lazy",$return_self);$def(self,"$collect",function $$collect(){var block=$$collect.$$p||nil,self=this;$$collect.$$p=null;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),"tried to call lazy map without a block");return $send($$("Lazy"),"new",[self,self.$enumerator_size()],function $$4(enum$,$a){var $post_args,
args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=$post_args;var value=$yieldX(block,args);enum$.$yield(value)},-2)});$def(self,"$collect_concat",function $$collect_concat(){var block=$$collect_concat.$$p||nil,self=this;$$collect_concat.$$p=null;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),"tried to call lazy map without a block");return $send($$("Lazy"),"new",[self,nil],function $$5(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=
$post_args;var value=$yieldX(block,args);if(value["$respond_to?"]("force")&&value["$respond_to?"]("each"))$send(value,"each",[],function $$6(v){if(v==null)v=nil;return enum$.$yield(v)});else{var array=$Opal.$try_convert(value,$$$("Array"),"to_ary");if(array===nil)enum$.$yield(value);else $send(value,"each",[],function $$7(v){if(v==null)v=nil;return enum$.$yield(v)})}},-2)});$def(self,"$drop",function $$drop(n){var self=this,current_size=nil,set_size=nil,dropped=nil;n=$coerce_to(n,$$$("Integer"),"to_int");
if($truthy($rb_lt(n,0)))$Kernel.$raise($$$("ArgumentError"),"attempt to drop negative size");current_size=self.$enumerator_size();set_size=$eqeqeq($$$("Integer"),current_size)?$truthy($rb_lt(n,current_size))?n:current_size:current_size;dropped=0;return $send($$("Lazy"),"new",[self,set_size],function $$8(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=$post_args;if($truthy($rb_lt(dropped,n)))return dropped=$rb_plus(dropped,1);else return $send(enum$,"yield",
$to_a(args))},-2)});$def(self,"$drop_while",function $$drop_while(){var block=$$drop_while.$$p||nil,self=this,succeeding=nil;$$drop_while.$$p=null;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),"tried to call lazy drop_while without a block");succeeding=true;return $send($$("Lazy"),"new",[self,nil],function $$9(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=$post_args;if($truthy(succeeding)){var value=$yieldX(block,args);if(!$truthy(value)){succeeding=
false;$send(enum$,"yield",$to_a(args))}}else return $send(enum$,"yield",$to_a(args))},-2)});$def(self,"$enum_for",function $$enum_for($a,$b){var block=$$enum_for.$$p||nil,$post_args,method,args,self=this;$$enum_for.$$p=null;$post_args=$slice(arguments);if($post_args.length>0)method=$post_args.shift();if(method==null)method="each";args=$post_args;return $send(self.$class(),"for",[self,method].concat($to_a(args)),block.$to_proc())},-1);$def(self,"$find_all",function $$find_all(){var block=$$find_all.$$p||
nil,self=this;$$find_all.$$p=null;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),"tried to call lazy select without a block");return $send($$("Lazy"),"new",[self,nil],function $$10(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=$post_args;var value=$yieldX(block,args);if($truthy(value))$send(enum$,"yield",$to_a(args))},-2)});$def(self,"$grep",function $$grep(pattern){var block=$$grep.$$p||nil,self=this;$$grep.$$p=null;if($truthy(block))return $send($$("Lazy"),
"new",[self,nil],function $$11(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=$post_args;var param=$Opal.$destructure(args),value=pattern["$==="](param);if($truthy(value)){value=$yield1(block,param);enum$.$yield($yield1(block,param))}},-2);else return $send($$("Lazy"),"new",[self,nil],function $$12(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=$post_args;var param=$Opal.$destructure(args),value=pattern["$==="](param);
if($truthy(value))enum$.$yield(param)},-2)});$def(self,"$reject",function $$reject(){var block=$$reject.$$p||nil,self=this;$$reject.$$p=null;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),"tried to call lazy reject without a block");return $send($$("Lazy"),"new",[self,nil],function $$13(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);args=$post_args;var value=$yieldX(block,args);if(!$truthy(value))$send(enum$,"yield",$to_a(args))},-2)});$def(self,"$take",
function $$take(n){var self=this,current_size=nil,set_size=nil,taken=nil;n=$coerce_to(n,$$$("Integer"),"to_int");if($truthy($rb_lt(n,0)))$Kernel.$raise($$$("ArgumentError"),"attempt to take negative size");current_size=self.$enumerator_size();set_size=$eqeqeq($$$("Integer"),current_size)?$truthy($rb_lt(n,current_size))?n:current_size:current_size;taken=0;return $send($$("Lazy"),"new",[self,set_size],function $$14(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=$slice(arguments,1);
args=$post_args;if($truthy($rb_lt(taken,n))){$send(enum$,"yield",$to_a(args));return taken=$rb_plus(taken,1)}else return $Kernel.$raise($$("StopLazyError"))},-2)});$def(self,"$take_while",function $$take_while(){var block=$$take_while.$$p||nil,self=this;$$take_while.$$p=null;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),"tried to call lazy take_while without a block");return $send($$("Lazy"),"new",[self,nil],function $$15(enum$,$a){var $post_args,args;if(enum$==null)enum$=nil;$post_args=
$slice(arguments,1);args=$post_args;var value=$yieldX(block,args);if($truthy(value))$send(enum$,"yield",$to_a(args));else $Kernel.$raise($$("StopLazyError"))},-2)});$def(self,"$inspect",function $$inspect(){var self=this;return"#<"+self.$class()+": "+self.enumerator.$inspect()+">"});$alias(self,"force","to_a");$alias(self,"filter","find_all");$alias(self,"flat_map","collect_concat");$alias(self,"map","collect");$alias(self,"select","find_all");return $alias(self,"to_enum","enum_for")}(self,self,$nesting)}("::",
null,$nesting)};
Opal.modules["corelib/enumerator/yielder"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$slice=Opal.slice,$send=Opal.send,$to_a=Opal.to_a,$nesting=[],nil=Opal.nil;Opal.add_stubs("yield,proc");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Enumerator");var $nesting=[self].concat($parent_nesting);return function($base,$super){var self=$klass($base,$super,"Yielder");var $proto=self.$$prototype;$proto.block=nil;$def(self,"$initialize",function $$initialize(){var block=$$initialize.$$p||
nil,self=this;$$initialize.$$p=null;self.block=block;return self});$def(self,"$yield",function $Yielder_yield$1($a){var $post_args,values,self=this;$post_args=$slice(arguments);values=$post_args;var value=Opal.yieldX(self.block,values);if(value&&value.$thrower_type=="break")throw value;return value},-1);$def(self,"$<<",function $Yielder_$lt$lt$2(value){var self=this;self.$yield(value);return self});return $def(self,"$to_proc",function $$to_proc(){var self=this;return $send(self,"proc",[],function $$3($a){var $post_args,
values,self=$$3.$$s==null?this:$$3.$$s;$post_args=$slice(arguments);values=$post_args;return $send(self,"yield",$to_a(values))},{$$arity:-1,$$s:self})})}($nesting[0],null)}($nesting[0],null,$nesting)};
Opal.modules["corelib/enumerator"]=function(Opal){var $slice=Opal.slice,$coerce_to=Opal.coerce_to,$deny_frozen_access=Opal.deny_frozen_access,$klass=Opal.klass,$defs=Opal.defs,$truthy=Opal.truthy,$send=Opal.send,$not=Opal.not,$def=Opal.def,$rb_plus=Opal.rb_plus,$to_a=Opal.to_a,$Opal=Opal.Opal,$send2=Opal.send2,$find_super=Opal.find_super,$rb_ge=Opal.rb_ge,$Kernel=Opal.Kernel,$rb_le=Opal.rb_le,$alias=Opal.alias,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,include,allocate,new,to_proc,!,respond_to?,empty?,nil?,+,class,__send__,call,enum_for,size,destructure,map,>=,length,raise,[],peek_values,<=,next_values,inspect,any?,each_with_object,autoload");
self.$require("corelib/enumerable");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Enumerator");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.size=$proto.args=$proto.object=$proto.method=$proto.values=$proto.cursor=nil;self.$include($$$("Enumerable"));self.$$prototype.$$is_enumerator=true;$defs(self,"$for",function $Enumerator_for$1(object,$a,$b){var block=$Enumerator_for$1.$$p||nil,$post_args,method,args,self=this;$Enumerator_for$1.$$p=
null;$post_args=$slice(arguments,1);if($post_args.length>0)method=$post_args.shift();if(method==null)method="each";args=$post_args;var obj=self.$allocate();obj.object=object;obj.size=block;obj.method=method;obj.args=args;obj.cursor=0;return obj},-2);$def(self,"$initialize",function $$initialize($a){var block=$$initialize.$$p||nil,$post_args,$fwd_rest,self=this;$$initialize.$$p=null;$post_args=$slice(arguments);$fwd_rest=$post_args;$deny_frozen_access(self);self.cursor=0;if($truthy(block)){self.object=
$send($$("Generator"),"new",[],block.$to_proc());self.method="each";self.args=[];self.size=arguments[0]||nil;if($truthy(self.size)&&$not(self.size["$respond_to?"]("call")))return self.size=$coerce_to(self.size,$$$("Integer"),"to_int");else return nil}else{self.object=arguments[0];self.method=arguments[1]||"each";self.args=$slice(arguments,2);return self.size=nil}},-1);$def(self,"$each",function $$each($a){var block=$$each.$$p||nil,$post_args,args,self=this;$$each.$$p=null;$post_args=$slice(arguments);
args=$post_args;if($truthy(block["$nil?"]())&&$truthy(args["$empty?"]()))return self;args=$rb_plus(self.args,args);if($truthy(block["$nil?"]()))return $send(self.$class(),"new",[self.object,self.method].concat($to_a(args)));return $send(self.object,"__send__",[self.method].concat($to_a(args)),block.$to_proc())},-1);$def(self,"$size",function $$size(){var self=this;if($truthy(self.size["$respond_to?"]("call")))return $send(self.size,"call",$to_a(self.args));else return self.size});$def(self,"$with_index",
function $$with_index(offset){var block=$$with_index.$$p||nil,self=this;$$with_index.$$p=null;if(offset==null)offset=0;offset=$truthy(offset)?$coerce_to(offset,$$$("Integer"),"to_int"):0;if(!$truthy(block))return $send(self,"enum_for",["with_index",offset],function $$2(){var self=$$2.$$s==null?this:$$2.$$s;return self.$size()},{$$s:self});var result,index=offset;self.$each.$$p=function(){var param=$Opal.$destructure(arguments),value=block(param,index);index++;return value};return self.$each()},-1);
$def(self,"$each_with_index",function $$each_with_index(){var block=$$each_with_index.$$p||nil,self=this;$$each_with_index.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["each_with_index"],function $$3(){var self=$$3.$$s==null?this:$$3.$$s;return self.$size()},{$$s:self});$send2(self,$find_super(self,"each_with_index",$$each_with_index,false,true),"each_with_index",[],block);return self.object});$def(self,"$rewind",function $$rewind(){var self=this;self.cursor=0;return self});$def(self,
"$peek_values",function $$peek_values(){var self=this,$ret_or_1=nil;self.values=$truthy($ret_or_1=self.values)?$ret_or_1:$send(self,"map",[],function $$4($a){var $post_args,i;$post_args=$slice(arguments);i=$post_args;return i},-1);if($truthy($rb_ge(self.cursor,self.values.$length())))$Kernel.$raise($$$("StopIteration"),"iteration reached an end");return self.values["$[]"](self.cursor)});$def(self,"$peek",function $$peek(){var self=this,values=nil;values=self.$peek_values();if($truthy($rb_le(values.$length(),
1)))return values["$[]"](0);else return values});$def(self,"$next_values",function $$next_values(){var self=this,out=nil;out=self.$peek_values();self.cursor=$rb_plus(self.cursor,1);return out});$def(self,"$next",function $$next(){var self=this,values=nil;values=self.$next_values();if($truthy($rb_le(values.$length(),1)))return values["$[]"](0);else return values});$def(self,"$feed",function $$feed(arg){var self=this;return self.$raise($$("NotImplementedError"),"Opal doesn't support Enumerator#feed")});
$def(self,"$+",function $Enumerator_$plus$5(other){var self=this;return $$$($$$("Enumerator"),"Chain").$new(self,other)});$def(self,"$inspect",function $$inspect(){var self=this,result=nil;result="#<"+self.$class()+": "+self.object.$inspect()+":"+self.method;if($truthy(self.args["$any?"]()))result=$rb_plus(result,"("+self.args.$inspect()["$[]"]($$$("Range").$new(1,-2))+")");return $rb_plus(result,">")});$alias(self,"with_object","each_with_object");self.$autoload("ArithmeticSequence","corelib/enumerator/arithmetic_sequence");
self.$autoload("Chain","corelib/enumerator/chain");self.$autoload("Generator","corelib/enumerator/generator");self.$autoload("Lazy","corelib/enumerator/lazy");return self.$autoload("Yielder","corelib/enumerator/yielder")}("::",null,$nesting)};
Opal.modules["corelib/numeric"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$Kernel=Opal.Kernel,$def=Opal.def,$to_ary=Opal.to_ary,$return_self=Opal.return_self,$rb_minus=Opal.rb_minus,$rb_times=Opal.rb_times,$rb_lt=Opal.rb_lt,$eqeq=Opal.eqeq,$rb_divide=Opal.rb_divide,$return_val=Opal.return_val,$Opal=Opal.Opal,$slice=Opal.slice,$extract_kwargs=Opal.extract_kwargs,$ensure_kwargs=Opal.ensure_kwargs,$not=Opal.not,$send=Opal.send,$rb_ge=Opal.rb_ge,$rb_le=Opal.rb_le,$rb_plus=Opal.rb_plus,
$rb_gt=Opal.rb_gt,$alias=Opal.alias,self=Opal.top,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,include,instance_of?,class,Float,respond_to?,coerce,__send__,raise,equal?,-,*,div,<,-@,ceil,to_f,denominator,to_r,==,floor,/,%,Complex,zero?,numerator,abs,arg,coerce_to!,round,<=>,compare,is_a?,!,new,enum_for,to_proc,negative?,>=,<=,+,to_i,truncate,>,angle,conj,imag,rect");self.$require("corelib/comparable");return function($base,$super){var self=$klass($base,$super,"Numeric");self.$include($$$("Comparable"));
$def(self,"$coerce",function $$coerce(other){var self=this;if($truthy(other["$instance_of?"](self.$class())))return[other,self];return[$Kernel.$Float(other),$Kernel.$Float(self)]});$def(self,"$__coerced__",function $$__coerced__(method,other){var $a,$b,self=this,a=nil,b=nil;if($truthy(other["$respond_to?"]("coerce"))){$b=other.$coerce(self),$a=$to_ary($b),a=$a[0]==null?nil:$a[0],b=$a[1]==null?nil:$a[1],$b;return a.$__send__(method,b)}else switch(method){case "+":case "-":case "*":case "/":case "%":case "&":case "|":case "^":case "**":return $Kernel.$raise($$$("TypeError"),
""+other.$class()+" can't be coerced into Numeric");case ">":case ">=":case "<":case "<=":case "<=>":return $Kernel.$raise($$$("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed");default:return nil}});$def(self,"$<=>",function $Numeric_$lt_eq_gt$1(other){var self=this;if($truthy(self["$equal?"](other)))return 0;return nil});$def(self,"$+@",$return_self);$def(self,"$-@",function $Numeric_$minus$$2(){var self=this;return $rb_minus(0,self)});$def(self,"$%",function $Numeric_$percent$3(other){var self=
this;return $rb_minus(self,$rb_times(other,self.$div(other)))});$def(self,"$abs",function $$abs(){var self=this;if($rb_lt(self,0))return self["$-@"]();else return self});$def(self,"$abs2",function $$abs2(){var self=this;return $rb_times(self,self)});$def(self,"$angle",function $$angle(){var self=this;if($rb_lt(self,0))return $$$($$$("Math"),"PI");else return 0});$def(self,"$ceil",function $$ceil(ndigits){var self=this;if(ndigits==null)ndigits=0;return self.$to_f().$ceil(ndigits)},-1);$def(self,"$conj",
$return_self);$def(self,"$denominator",function $$denominator(){var self=this;return self.$to_r().$denominator()});$def(self,"$div",function $$div(other){var self=this;if($eqeq(other,0))$Kernel.$raise($$$("ZeroDivisionError"),"divided by o");return $rb_divide(self,other).$floor()});$def(self,"$divmod",function $$divmod(other){var self=this;return[self.$div(other),self["$%"](other)]});$def(self,"$fdiv",function $$fdiv(other){var self=this;return $rb_divide(self.$to_f(),other)});$def(self,"$floor",
function $$floor(ndigits){var self=this;if(ndigits==null)ndigits=0;return self.$to_f().$floor(ndigits)},-1);$def(self,"$i",function $$i(){var self=this;return $Kernel.$Complex(0,self)});$def(self,"$imag",$return_val(0));$def(self,"$integer?",$return_val(false));$def(self,"$nonzero?",function $Numeric_nonzero$ques$4(){var self=this;if($truthy(self["$zero?"]()))return nil;else return self});$def(self,"$numerator",function $$numerator(){var self=this;return self.$to_r().$numerator()});$def(self,"$polar",
function $$polar(){var self=this;return[self.$abs(),self.$arg()]});$def(self,"$quo",function $$quo(other){var self=this;return $rb_divide($Opal["$coerce_to!"](self,$$$("Rational"),"to_r"),other)});$def(self,"$real",$return_self);$def(self,"$real?",$return_val(true));$def(self,"$rect",function $$rect(){var self=this;return[self,0]});$def(self,"$round",function $$round(digits){var self=this;return self.$to_f().$round(digits)},-1);$def(self,"$step",function $$step($a,$b,$c){var block=$$step.$$p||nil,
$post_args,$kwargs,limit,step,to,by,self=this,counter=nil;$$step.$$p=null;$post_args=$slice(arguments);$kwargs=$extract_kwargs($post_args);$kwargs=$ensure_kwargs($kwargs);if($post_args.length>0)limit=$post_args.shift();if($post_args.length>0)step=$post_args.shift();to=$kwargs.$$smap["to"];by=$kwargs.$$smap["by"];if(limit!==undefined&&to!==undefined)$Kernel.$raise($$$("ArgumentError"),"to is given twice");if(step!==undefined&&by!==undefined)$Kernel.$raise($$$("ArgumentError"),"step is given twice");
if(to!==undefined)limit=to;if(by!==undefined)step=by;if(limit===undefined)limit=nil;function validateParameters(){if(step===nil)$Kernel.$raise($$$("TypeError"),"step must be numeric");if(step!=null&&step["$=="](0))$Kernel.$raise($$$("ArgumentError"),"step can't be 0");if(step===nil||step==null)step=1;var sign=step["$<=>"](0);if(sign===nil)$Kernel.$raise($$$("ArgumentError"),"0 can't be coerced into "+step.$class());if(limit===nil||limit==null)limit=sign>0?$$$($$$("Float"),"INFINITY"):$$$($$$("Float"),
"INFINITY")["$-@"]();$Opal.$compare(self,limit)}function stepFloatSize(){if(step>0&&self>limit||step<0&&self<limit)return 0;else if(step===Infinity||step===-Infinity)return 1;else{var abs=Math.abs,floor=Math.floor,err=(abs(self)+abs(limit)+abs(limit-self))/abs(step)*$$$($$$("Float"),"EPSILON");if(err===Infinity||err===-Infinity)return 0;else{if(err>.5)err=.5;return floor((limit-self)/step+err)+1}}}function stepSize(){validateParameters();if(step===0)return Infinity;if(step%1!==0)return stepFloatSize();
else if(step>0&&self>limit||step<0&&self<limit)return 0;else{var ceil=Math.ceil,abs=Math.abs,lhs=abs(self-limit)+1,rhs=abs(step);return ceil(lhs/rhs)}}if(!(block!==nil))if(($not(limit)||$truthy(limit["$is_a?"]($$$("Numeric"))))&&($not(step)||$truthy(step["$is_a?"]($$$("Numeric")))))return $$$($$$("Enumerator"),"ArithmeticSequence").$new([limit,step,$truthy(to)?"to: ":nil,$truthy(by)?"by: ":nil],self);else return $send(self,"enum_for",["step",limit,step],stepSize.$to_proc());validateParameters();var isDesc=
step["$negative?"](),isInf=step["$=="](0)||limit===Infinity&&!isDesc||limit===-Infinity&&isDesc;if(self.$$is_number&&step.$$is_number&&limit.$$is_number)if(self%1===0&&(isInf||limit%1===0)&&step%1===0){var value=self;if(isInf)for(;;value+=step)block(value);else if(isDesc)for(;value>=limit;value+=step)block(value);else for(;value<=limit;value+=step)block(value);return self}else{var begin=self.$to_f().valueOf();step=step.$to_f().valueOf();limit=limit.$to_f().valueOf();var n=stepFloatSize();if(!isFinite(step)){if(n!==
0)block(begin)}else if(step===0)while(true)block(begin);else for(var i=0;i<n;i++){var d=i*step+self;if(step>=0?limit<d:limit>d)d=limit;block(d)}return self}counter=self;while($truthy(isDesc?$rb_ge(counter,limit):$rb_le(counter,limit))){Opal.yield1(block,counter);counter=$rb_plus(counter,step)}},-1);$def(self,"$to_c",function $$to_c(){var self=this;return $Kernel.$Complex(self,0)});$def(self,"$to_int",function $$to_int(){var self=this;return self.$to_i()});$def(self,"$truncate",function $$truncate(ndigits){var self=
this;if(ndigits==null)ndigits=0;return self.$to_f().$truncate(ndigits)},-1);$def(self,"$zero?",function $Numeric_zero$ques$5(){var self=this;return self["$=="](0)});$def(self,"$positive?",function $Numeric_positive$ques$6(){var self=this;return $rb_gt(self,0)});$def(self,"$negative?",function $Numeric_negative$ques$7(){var self=this;return $rb_lt(self,0)});$def(self,"$dup",$return_self);$def(self,"$clone",function $$clone($kwargs){var freeze,self=this;$kwargs=$ensure_kwargs($kwargs);freeze=$kwargs.$$smap["freeze"];
if(freeze==null)freeze=true;return self},-1);$def(self,"$finite?",$return_val(true));$def(self,"$infinite?",$return_val(nil));$alias(self,"arg","angle");$alias(self,"conjugate","conj");$alias(self,"imaginary","imag");$alias(self,"magnitude","abs");$alias(self,"modulo","%");$alias(self,"phase","arg");return $alias(self,"rectangular","rect")}("::",null)};
Opal.modules["corelib/array"]=function(Opal){var $truthy=Opal.truthy,$falsy=Opal.falsy,$hash_ids=Opal.hash_ids,$yield1=Opal.yield1,$hash_get=Opal.hash_get,$hash_put=Opal.hash_put,$hash_delete=Opal.hash_delete,$coerce_to=Opal.coerce_to,$respond_to=Opal.respond_to,$deny_frozen_access=Opal.deny_frozen_access,$freeze=Opal.freeze,$klass=Opal.klass,$slice=Opal.slice,$defs=Opal.defs,$Kernel=Opal.Kernel,$def=Opal.def,$Opal=Opal.Opal,$eqeqeq=Opal.eqeqeq,$hash2=Opal.hash2,$send2=Opal.send2,$find_super=Opal.find_super,
$send=Opal.send,$rb_gt=Opal.rb_gt,$rb_times=Opal.rb_times,$eqeq=Opal.eqeq,$rb_minus=Opal.rb_minus,$to_a=Opal.to_a,$to_ary=Opal.to_ary,$gvars=Opal.gvars,$rb_ge=Opal.rb_ge,$assign_ivar=Opal.assign_ivar,$rb_lt=Opal.rb_lt,$return_self=Opal.return_self,$neqeq=Opal.neqeq,$alias=Opal.alias,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,include,to_a,warn,raise,replace,respond_to?,to_ary,coerce_to?,===,join,to_str,hash,<=>,==,object_id,inspect,enum_for,class,bsearch_index,to_proc,nil?,coerce_to!,>,*,enumerator_size,empty?,size,map,equal?,dup,each,reduce,-,[],dig,eql?,length,exclude_end?,flatten,frozen?,__id__,&,!,intersection,to_s,new,item,max,min,>=,**,delete_if,reverse,rotate,rand,at,keep_if,shuffle!,<,sort,sort_by,!=,times,[]=,<<,uniq,|,values,is_a?,end,begin,upto,reject,push,select,select!,collect,collect!,unshift,pristine,singleton_class");
self.$require("corelib/enumerable");self.$require("corelib/numeric");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Array");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$$("Enumerable"));Opal.prop(self.$$prototype,"$$is_array",true);function shiftNoArg(list){var r=list[0];var index=1;var length=list.length;for(;index<length;index++)list[index-1]=list[index];list.pop();return r}function toArraySubclass(obj,klass){if(klass.$$name===Opal.Array)return obj;
else return klass.$allocate().$replace(obj.$to_a())}function filterIf(self,filter,block){var value,raised=null,updated=new Array(self.length);for(var i=0,i2=0,length=self.length;i<length;i++){if(!raised)try{value=$yield1(block,self[i])}catch(error){raised=error}if(raised||filter(value)){updated[i2]=self[i];i2+=1}}if(i2!==i){self.splice.apply(self,[0,updated.length].concat(updated));self.splice(i2,updated.length)}if(raised)throw raised;}$defs(self,"$[]",function $Array_$$$1($a){var $post_args,objects,
self=this;$post_args=$slice(arguments);objects=$post_args;return toArraySubclass(objects,self)},-1);$def(self,"$initialize",function $$initialize(size,obj){var block=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;if(size==null)size=nil;if(obj==null)obj=nil;$deny_frozen_access(self);if(obj!==nil&&block!==nil)$Kernel.$warn("warning: block supersedes default value argument");if(size>$$$($$$("Integer"),"MAX"))$Kernel.$raise($$$("ArgumentError"),"array size too big");if(arguments.length>2)$Kernel.$raise($$$("ArgumentError"),
"wrong number of arguments ("+arguments.length+" for 0..2)");if(arguments.length===0){self.splice(0,self.length);return self}if(arguments.length===1)if(size.$$is_array){self.$replace(size.$to_a());return self}else if(size["$respond_to?"]("to_ary")){self.$replace(size.$to_ary());return self}size=$coerce_to(size,$$$("Integer"),"to_int");if(size<0)$Kernel.$raise($$$("ArgumentError"),"negative array size");self.splice(0,self.length);var i,value;if(block===nil)for(i=0;i<size;i++)self.push(obj);else for(i=
0,value;i<size;i++){value=block(i);self[i]=value}return self},-1);$defs(self,"$try_convert",function $$try_convert(obj){return $Opal["$coerce_to?"](obj,$$$("Array"),"to_ary")});$def(self,"$&",function $Array_$$2(other){var self=this;other=$eqeqeq($$$("Array"),other)?other.$to_a():$coerce_to(other,$$$("Array"),"to_ary").$to_a();var result=[],hash=$hash2([],{}),i,length,item;for(i=0,length=other.length;i<length;i++)$hash_put(hash,other[i],true);for(i=0,length=self.length;i<length;i++){item=self[i];
if($hash_delete(hash,item)!==undefined)result.push(item)}return result});$def(self,"$|",function $Array_$$3(other){var self=this;other=$eqeqeq($$$("Array"),other)?other.$to_a():$coerce_to(other,$$$("Array"),"to_ary").$to_a();var hash=$hash2([],{}),i,length,item;for(i=0,length=self.length;i<length;i++)$hash_put(hash,self[i],true);for(i=0,length=other.length;i<length;i++)$hash_put(hash,other[i],true);return hash.$keys()});$def(self,"$*",function $Array_$$4(other){var self=this;if($truthy(other["$respond_to?"]("to_str")))return self.$join(other.$to_str());
other=$coerce_to(other,$$$("Integer"),"to_int");if($truthy(other<0))$Kernel.$raise($$$("ArgumentError"),"negative argument");var result=[],converted=self.$to_a();for(var i=0;i<other;i++)result=result.concat(converted);return result});$def(self,"$+",function $Array_$plus$5(other){var self=this;other=$eqeqeq($$$("Array"),other)?other.$to_a():$coerce_to(other,$$$("Array"),"to_ary").$to_a();return self.concat(other)});$def(self,"$-",function $Array_$minus$6(other){var self=this;other=$eqeqeq($$$("Array"),
other)?other.$to_a():$coerce_to(other,$$$("Array"),"to_ary").$to_a();if($truthy(self.length===0))return[];if($truthy(other.length===0))return self.slice();var result=[],hash=$hash2([],{}),i,length,item;for(i=0,length=other.length;i<length;i++)$hash_put(hash,other[i],true);for(i=0,length=self.length;i<length;i++){item=self[i];if($hash_get(hash,item)===undefined)result.push(item)}return result});$def(self,"$<<",function $Array_$lt$lt$7(object){var self=this;$deny_frozen_access(self);self.push(object);
return self});$def(self,"$<=>",function $Array_$lt_eq_gt$8(other){var self=this;if($eqeqeq($$$("Array"),other))other=other.$to_a();else if($truthy(other["$respond_to?"]("to_ary")))other=other.$to_ary().$to_a();else return nil;if(self.$hash()===other.$hash())return 0;var count=Math.min(self.length,other.length);for(var i=0;i<count;i++){var tmp=self[i]["$<=>"](other[i]);if(tmp!==0)return tmp}return self.length["$<=>"](other.length)});$def(self,"$==",function $Array_$eq_eq$9(other){var self=this;var recursed=
{};function _eqeq(array,other){var i,length,a,b;if(array===other)return true;if(!other.$$is_array)if($respond_to(other,"$to_ary"))return other["$=="](array);else return false;if(array.$$constructor!==Array)array=array.$to_a();if(other.$$constructor!==Array)other=other.$to_a();if(array.length!==other.length)return false;recursed[array.$object_id()]=true;for(i=0,length=array.length;i<length;i++){a=array[i];b=other[i];if(a.$$is_array){if(b.$$is_array&&b.length!==a.length)return false;if(!recursed.hasOwnProperty(a.$object_id()))if(!_eqeq(a,
b))return false}else if(!a["$=="](b))return false}return true}return _eqeq(self,other)});function $array_slice_range(self,index){var size=self.length,exclude,from,to,result;exclude=index.excl;from=index.begin===nil?0:$coerce_to(index.begin,Opal.Integer,"to_int");to=index.end===nil?-1:$coerce_to(index.end,Opal.Integer,"to_int");if(from<0){from+=size;if(from<0)return nil}if(index.excl_rev&&index.begin!==nil)from+=1;if(from>size)return nil;if(to<0){to+=size;if(to<0)return[]}if(!exclude||index.end===
nil)to+=1;result=self.slice(from,to);return result}function $array_slice_arithmetic_seq(self,index){var array,out=[],i=0,pseudorange;if(index.step<0){pseudorange={begin:index.range.end,end:index.range.begin,excl:false,excl_rev:index.range.excl};array=$array_slice_range(self,pseudorange).$reverse()}else array=$array_slice_range(self,index.range);while(i<array.length){out.push(array[i]);i+=Math.abs(index.step)}return out}function $array_slice_index_length(self,index,length){var size=self.length,exclude,
from,to,result;index=$coerce_to(index,Opal.Integer,"to_int");if(index<0){index+=size;if(index<0)return nil}if(length===undefined){if(index>=size||index<0)return nil;return self[index]}else{length=$coerce_to(length,Opal.Integer,"to_int");if(length<0||index>size||index<0)return nil;result=self.slice(index,index+length)}return result}$def(self,"$[]",function $Array_$$$10(index,length){var self=this;if(index.$$is_range)return $array_slice_range(self,index);else if(index.$$is_arithmetic_seq)return $array_slice_arithmetic_seq(self,
index);else return $array_slice_index_length(self,index,length)},-2);$def(self,"$[]=",function $Array_$$$eq$11(index,value,extra){var self=this,data=nil,length=nil;$deny_frozen_access(self);data=nil;var i,size=self.length;if(index.$$is_range){if(value.$$is_array)data=value.$to_a();else if(value["$respond_to?"]("to_ary"))data=value.$to_ary().$to_a();else data=[value];var exclude=index.excl,from=index.begin===nil?0:$coerce_to(index.begin,Opal.Integer,"to_int"),to=index.end===nil?-1:$coerce_to(index.end,
Opal.Integer,"to_int");if(from<0){from+=size;if(from<0)$Kernel.$raise($$$("RangeError"),""+index.$inspect()+" out of range")}if(to<0)to+=size;if(!exclude||index.end===nil)to+=1;if(from>size)for(i=size;i<from;i++)self[i]=nil;if(to<0)self.splice.apply(self,[from,0].concat(data));else self.splice.apply(self,[from,to-from].concat(data));return value}else{if(extra===undefined)length=1;else{length=value;value=extra;if(value.$$is_array)data=value.$to_a();else if(value["$respond_to?"]("to_ary"))data=value.$to_ary().$to_a();
else data=[value]}var old;index=$coerce_to(index,$$$("Integer"),"to_int");length=$coerce_to(length,$$$("Integer"),"to_int");if(index<0){old=index;index+=size;if(index<0)$Kernel.$raise($$$("IndexError"),"index "+old+" too small for array; minimum "+-self.length)}if(length<0)$Kernel.$raise($$$("IndexError"),"negative length ("+length+")");if(index>size)for(i=size;i<index;i++)self[i]=nil;if(extra===undefined)self[index]=value;else self.splice.apply(self,[index,length].concat(data));return value}},-3);
$def(self,"$any?",function $Array_any$ques$12(pattern){var block=$Array_any$ques$12.$$p||nil,self=this;$Array_any$ques$12.$$p=null;if(self.length===0)return false;return $send2(self,$find_super(self,"any?",$Array_any$ques$12,false,true),"any?",[pattern],block)},-1);$def(self,"$assoc",function $$assoc(object){var self=this;for(var i=0,length=self.length,item;i<length;i++)if(item=self[i],item.length&&item[0]["$=="](object))return item;return nil});$def(self,"$at",function $$at(index){var self=this;
index=$coerce_to(index,$$$("Integer"),"to_int");if(index<0)index+=self.length;if(index<0||index>=self.length)return nil;return self[index]});$def(self,"$bsearch_index",function $$bsearch_index(){var block=$$bsearch_index.$$p||nil,self=this;$$bsearch_index.$$p=null;if(!(block!==nil))return self.$enum_for("bsearch_index");var min=0,max=self.length,mid,val,ret,smaller=false,satisfied=nil;while(min<max){mid=min+Math.floor((max-min)/2);val=self[mid];ret=$yield1(block,val);if(ret===true){satisfied=mid;
smaller=true}else if(ret===false||ret===nil)smaller=false;else if(ret.$$is_number){if(ret===0)return mid;smaller=ret<0}else $Kernel.$raise($$$("TypeError"),"wrong argument type "+ret.$class()+" (must be numeric, true, false or nil)");if(smaller)max=mid;else min=mid+1}return satisfied});$def(self,"$bsearch",function $$bsearch(){var block=$$bsearch.$$p||nil,self=this,index=nil;$$bsearch.$$p=null;if(!(block!==nil))return self.$enum_for("bsearch");index=$send(self,"bsearch_index",[],block.$to_proc());
if(index!=null&&index.$$is_number)return self[index];else return index});$def(self,"$cycle",function $$cycle(n){var block=$$cycle.$$p||nil,self=this;$$cycle.$$p=null;if(n==null)n=nil;if(!(block!==nil))return $send(self,"enum_for",["cycle",n],function $$13(){var self=$$13.$$s==null?this:$$13.$$s;if($truthy(n["$nil?"]()))return $$$($$$("Float"),"INFINITY");else{n=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if($truthy($rb_gt(n,0)))return $rb_times(self.$enumerator_size(),n);else return 0}},{$$s:self});
if($truthy(self["$empty?"]())||$eqeq(n,0))return nil;var i,length,value;if(n===nil)while(true)for(i=0,length=self.length;i<length;i++)value=$yield1(block,self[i]);else{n=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if(n<=0)return self;while(n>0){for(i=0,length=self.length;i<length;i++)value=$yield1(block,self[i]);n--}}return self},-1);$def(self,"$clear",function $$clear(){var self=this;$deny_frozen_access(self);self.splice(0,self.length);return self});$def(self,"$count",function $$count(object){var block=
$$count.$$p||nil,self=this;$$count.$$p=null;if($truthy(object!==undefined)||$truthy(block))return $send2(self,$find_super(self,"count",$$count,false,true),"count",[object],block);else return self.$size()},-1);$def(self,"$initialize_copy",function $$initialize_copy(other){var self=this;return self.$replace(other)});$def(self,"$collect",function $$collect(){var block=$$collect.$$p||nil,self=this;$$collect.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["collect"],function $$14(){var self=$$14.$$s==
null?this:$$14.$$s;return self.$size()},{$$s:self});var result=[];for(var i=0,length=self.length;i<length;i++){var value=$yield1(block,self[i]);result.push(value)}return result});$def(self,"$collect!",function $Array_collect$excl$15(){var block=$Array_collect$excl$15.$$p||nil,self=this;$Array_collect$excl$15.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["collect!"],function $$16(){var self=$$16.$$s==null?this:$$16.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);for(var i=
0,length=self.length;i<length;i++){var value=$yield1(block,self[i]);self[i]=value}return self});function binomial_coefficient(n,k){if(n===k||k===0)return 1;if(k>0&&n>k)return binomial_coefficient(n-1,k-1)+binomial_coefficient(n-1,k);return 0}$def(self,"$combination",function $$combination(n){var $yield=$$combination.$$p||nil,self=this,num=nil;$$combination.$$p=null;num=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if(!($yield!==nil))return $send(self,"enum_for",["combination",num],function $$17(){var self=
$$17.$$s==null?this:$$17.$$s;return binomial_coefficient(self.length,num)},{$$s:self});var i,length,stack,chosen,lev,done,next;if(num===0)Opal.yield1($yield,[]);else if(num===1)for(i=0,length=self.length;i<length;i++)Opal.yield1($yield,[self[i]]);else if(num===self.length)Opal.yield1($yield,self.slice());else if(num>=0&&num<self.length){stack=[];for(i=0;i<=num+1;i++)stack.push(0);chosen=[];lev=0;done=false;stack[0]=-1;while(!done){chosen[lev]=self[stack[lev+1]];while(lev<num-1){lev++;next=stack[lev+
1]=stack[lev]+1;chosen[lev]=self[next]}Opal.yield1($yield,chosen.slice());lev++;do{done=lev===0;stack[lev]++;lev--}while(stack[lev+1]+num===self.length+lev+1)}}return self});$def(self,"$repeated_combination",function $$repeated_combination(n){var $yield=$$repeated_combination.$$p||nil,self=this,num=nil;$$repeated_combination.$$p=null;num=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if(!($yield!==nil))return $send(self,"enum_for",["repeated_combination",num],function $$18(){var self=$$18.$$s==null?
this:$$18.$$s;return binomial_coefficient(self.length+num-1,num)},{$$s:self});function iterate(max,from,buffer,self){if(buffer.length==max){var copy=buffer.slice();Opal.yield1($yield,copy);return}for(var i=from;i<self.length;i++){buffer.push(self[i]);iterate(max,i,buffer,self);buffer.pop()}}if(num>=0)iterate(num,0,[],self);return self});$def(self,"$compact",function $$compact(){var self=this;var result=[];for(var i=0,length=self.length,item;i<length;i++)if((item=self[i])!==nil)result.push(item);return result});
$def(self,"$compact!",function $Array_compact$excl$19(){var self=this;$deny_frozen_access(self);var original=self.length;for(var i=0,length=self.length;i<length;i++)if(self[i]===nil){self.splice(i,1);length--;i--}return self.length===original?nil:self});$def(self,"$concat",function $$concat($a){var $post_args,others,self=this;$post_args=$slice(arguments);others=$post_args;$deny_frozen_access(self);others=$send(others,"map",[],function $$20(other){var self=$$20.$$s==null?this:$$20.$$s;if(other==null)other=
nil;other=$eqeqeq($$$("Array"),other)?other.$to_a():$coerce_to(other,$$$("Array"),"to_ary").$to_a();if($truthy(other["$equal?"](self)))other=other.$dup();return other},{$$s:self});$send(others,"each",[],function $$21(other){var self=$$21.$$s==null?this:$$21.$$s;if(other==null)other=nil;for(var i=0,length=other.length;i<length;i++)self.push(other[i])},{$$s:self});return self},-1);$def(self,"$delete",function $Array_delete$22(object){var $yield=$Array_delete$22.$$p||nil,self=this;$Array_delete$22.$$p=
null;var original=self.length;for(var i=0,length=original;i<length;i++)if(self[i]["$=="](object)){$deny_frozen_access(self);self.splice(i,1);length--;i--}if(self.length===original){if($yield!==nil)return Opal.yieldX($yield,[]);return nil}return object});$def(self,"$delete_at",function $$delete_at(index){var self=this;$deny_frozen_access(self);index=$coerce_to(index,$$$("Integer"),"to_int");if(index<0)index+=self.length;if(index<0||index>=self.length)return nil;var result=self[index];self.splice(index,
1);return result});$def(self,"$delete_if",function $$delete_if(){var block=$$delete_if.$$p||nil,self=this;$$delete_if.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["delete_if"],function $$23(){var self=$$23.$$s==null?this:$$23.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);filterIf(self,$falsy,block);return self});$def(self,"$difference",function $$difference($a){var $post_args,arrays,self=this;$post_args=$slice(arguments);arrays=$post_args;return $send(arrays,"reduce",
[self.$to_a().$dup()],function $$24(a,b){if(a==null)a=nil;if(b==null)b=nil;return $rb_minus(a,b)})},-1);$def(self,"$dig",function $$dig(idx,$a){var $post_args,idxs,self=this,item=nil;$post_args=$slice(arguments,1);idxs=$post_args;item=self["$[]"](idx);if(item===nil||idxs.length===0)return item;if(!$truthy(item["$respond_to?"]("dig")))$Kernel.$raise($$$("TypeError"),""+item.$class()+" does not have #dig method");return $send(item,"dig",$to_a(idxs))},-2);$def(self,"$drop",function $$drop(number){var self=
this;number=$coerce_to(number,$$$("Integer"),"to_int");if(number<0)$Kernel.$raise($$$("ArgumentError"));return self.slice(number)});$def(self,"$dup",function $$dup(){var $yield=$$dup.$$p||nil,self=this;$$dup.$$p=null;if(self.$$class===Opal.Array&&self.$$class.$allocate.$$pristine&&self.$copy_instance_variables.$$pristine&&self.$initialize_dup.$$pristine)return self.slice(0);return $send2(self,$find_super(self,"dup",$$dup,false,true),"dup",[],$yield)});$def(self,"$each",function $$each(){var block=
$$each.$$p||nil,self=this;$$each.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["each"],function $$25(){var self=$$25.$$s==null?this:$$25.$$s;return self.$size()},{$$s:self});for(var i=0,length=self.length;i<length;i++)var value=$yield1(block,self[i]);return self});$def(self,"$each_index",function $$each_index(){var block=$$each_index.$$p||nil,self=this;$$each_index.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["each_index"],function $$26(){var self=$$26.$$s==null?this:$$26.$$s;
return self.$size()},{$$s:self});for(var i=0,length=self.length;i<length;i++)var value=$yield1(block,i);return self});$def(self,"$empty?",function $Array_empty$ques$27(){var self=this;return self.length===0});$def(self,"$eql?",function $Array_eql$ques$28(other){var self=this;var recursed={};function _eql(array,other){var i,length,a,b;if(!other.$$is_array)return false;other=other.$to_a();if(array.length!==other.length)return false;recursed[array.$object_id()]=true;for(i=0,length=array.length;i<length;i++){a=
array[i];b=other[i];if(a.$$is_array){if(b.$$is_array&&b.length!==a.length)return false;if(!recursed.hasOwnProperty(a.$object_id()))if(!_eql(a,b))return false}else if(!a["$eql?"](b))return false}return true}return _eql(self,other)});$def(self,"$fetch",function $$fetch(index,defaults){var block=$$fetch.$$p||nil,self=this;$$fetch.$$p=null;var original=index;index=$coerce_to(index,$$$("Integer"),"to_int");if(index<0)index+=self.length;if(index>=0&&index<self.length)return self[index];if(block!==nil&&
defaults!=null)self.$warn("warning: block supersedes default value argument");if(block!==nil)return block(original);if(defaults!=null)return defaults;if(self.length===0)$Kernel.$raise($$$("IndexError"),"index "+original+" outside of array bounds: 0...0");else $Kernel.$raise($$$("IndexError"),"index "+original+" outside of array bounds: -"+self.length+"..."+self.length)},-2);$def(self,"$fill",function $$fill($a){var block=$$fill.$$p||nil,$post_args,args,$b,$c,self=this,one=nil,two=nil,obj=nil,left=
nil,right=nil;$$fill.$$p=null;$post_args=$slice(arguments);args=$post_args;$deny_frozen_access(self);var i,length,value;if($truthy(block)){if($truthy(args.length>2))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+args.$length()+" for 0..2)");$c=args,$b=$to_ary($c),one=$b[0]==null?nil:$b[0],two=$b[1]==null?nil:$b[1],$c}else{if($truthy(args.length==0))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments (0 for 1..3)");else if($truthy(args.length>3))$Kernel.$raise($$$("ArgumentError"),
"wrong number of arguments ("+args.$length()+" for 1..3)");$c=args,$b=$to_ary($c),obj=$b[0]==null?nil:$b[0],one=$b[1]==null?nil:$b[1],two=$b[2]==null?nil:$b[2],$c}if($eqeqeq($$$("Range"),one)){if($truthy(two))$Kernel.$raise($$$("TypeError"),"length invalid with range");left=one.begin===nil?0:$coerce_to(one.begin,$$$("Integer"),"to_int");if($truthy(left<0))left+=this.length;if($truthy(left<0))$Kernel.$raise($$$("RangeError"),""+one.$inspect()+" out of range");right=one.end===nil?-1:$coerce_to(one.end,
$$$("Integer"),"to_int");if($truthy(right<0))right+=this.length;if(!$truthy(one["$exclude_end?"]()))right+=1;if($truthy(right<=left))return self}else if($truthy(one)){left=$coerce_to(one,$$$("Integer"),"to_int");if($truthy(left<0))left+=this.length;if($truthy(left<0))left=0;if($truthy(two)){right=$coerce_to(two,$$$("Integer"),"to_int");if($truthy(right==0))return self;right+=left}else right=this.length}else{left=0;right=this.length}if($truthy(left>this.length))for(i=this.length;i<right;i++)self[i]=
nil;if($truthy(right>this.length))this.length=right;if($truthy(block))for(length=this.length;left<right;left++){value=block(left);self[left]=value}else for(length=this.length;left<right;left++)self[left]=obj;return self},-1);$def(self,"$first",function $$first(count){var self=this;if(count==null)return self.length===0?nil:self[0];count=$coerce_to(count,$$$("Integer"),"to_int");if(count<0)$Kernel.$raise($$$("ArgumentError"),"negative array size");return self.slice(0,count)},-1);$def(self,"$flatten",
function $$flatten(level){var self=this;function _flatten(array,level){var result=[],i,length,item,ary;array=array.$to_a();for(i=0,length=array.length;i<length;i++){item=array[i];if(!$respond_to(item,"$to_ary",true)){result.push(item);continue}ary=item.$to_ary();if(ary===nil){result.push(item);continue}if(!ary.$$is_array)$Kernel.$raise($$$("TypeError"));if(ary===self)$Kernel.$raise($$$("ArgumentError"));switch(level){case undefined:result=result.concat(_flatten(ary));break;case 0:result.push(ary);
break;default:result.push.apply(result,_flatten(ary,level-1))}}return result}if(level!==undefined)level=$coerce_to(level,$$$("Integer"),"to_int");return _flatten(self,level)},-1);$def(self,"$flatten!",function $Array_flatten$excl$29(level){var self=this;$deny_frozen_access(self);var flattened=self.$flatten(level);if(self.length==flattened.length){for(var i=0,length=self.length;i<length;i++)if(self[i]!==flattened[i])break;if(i==length)return nil}self.$replace(flattened);return self},-1);$def(self,
"$freeze",function $$freeze(){var self=this;if($truthy(self["$frozen?"]()))return self;return $freeze(self)});$def(self,"$hash",function $$hash(){var self=this;var top=$hash_ids===undefined,result=["A"],hash_id=self.$object_id(),item,i,key;try{if(top)$hash_ids=Object.create(null);if($hash_ids[hash_id])return"self";for(key in $hash_ids){item=$hash_ids[key];if(self["$eql?"](item))return"self"}$hash_ids[hash_id]=self;for(i=0;i<self.length;i++){item=self[i];result.push(item.$hash())}return result.join(",")}finally{if(top)$hash_ids=
undefined}});$def(self,"$include?",function $Array_include$ques$30(member){var self=this;for(var i=0,length=self.length;i<length;i++)if(self[i]["$=="](member))return true;return false});$def(self,"$index",function $$index(object){var block=$$index.$$p||nil,self=this;$$index.$$p=null;var i,length,value;if(object!=null&&block!==nil)self.$warn("warning: given block not used");if(object!=null)for(i=0,length=self.length;i<length;i++){if(self[i]["$=="](object))return i}else if(block!==nil)for(i=0,length=
self.length;i<length;i++){value=block(self[i]);if(value!==false&&value!==nil)return i}else return self.$enum_for("index");return nil},-1);$def(self,"$insert",function $$insert(index,$a){var $post_args,objects,self=this;$post_args=$slice(arguments,1);objects=$post_args;$deny_frozen_access(self);index=$coerce_to(index,$$$("Integer"),"to_int");if(objects.length>0){if(index<0){index+=self.length+1;if(index<0)$Kernel.$raise($$$("IndexError"),""+index+" is out of bounds")}if(index>self.length)for(var i=
self.length;i<index;i++)self.push(nil);self.splice.apply(self,[index,0].concat(objects))}return self},-2);var inspect_stack=[];$def(self,"$inspect",function $$inspect(){var self=this;var result=[],id=self.$__id__(),pushed=true;return function(){try{if(inspect_stack.indexOf(id)!==-1){pushed=false;return"[...]"}inspect_stack.push(id);for(var i=0,length=self.length;i<length;i++){var item=self["$[]"](i);result.push($$("Opal").$inspect(item))}return"["+result.join(", ")+"]";return nil}finally{if(pushed)inspect_stack.pop()}}()});
$def(self,"$intersection",function $$intersection($a){var $post_args,arrays,self=this;$post_args=$slice(arguments);arrays=$post_args;return $send(arrays,"reduce",[self.$to_a().$dup()],function $$31(a,b){if(a==null)a=nil;if(b==null)b=nil;return a["$&"](b)})},-1);$def(self,"$intersect?",function $Array_intersect$ques$32(other){var self=this;return self.$intersection(other)["$empty?"]()["$!"]()});$def(self,"$join",function $$join(sep){var self=this;if($gvars[","]==null)$gvars[","]=nil;if(sep==null)sep=
nil;if($truthy(self.length===0))return"";if($truthy(sep===nil))sep=$gvars[","];var result=[];var i,length,item,tmp;for(i=0,length=self.length;i<length;i++){item=self[i];if($respond_to(item,"$to_str")){tmp=item.$to_str();if(tmp!==nil){result.push(tmp.$to_s());continue}}if($respond_to(item,"$to_ary")){tmp=item.$to_ary();if(tmp===self)$Kernel.$raise($$$("ArgumentError"));if(tmp!==nil){result.push(tmp.$join(sep));continue}}if($respond_to(item,"$to_s")){tmp=item.$to_s();if(tmp!==nil){result.push(tmp);
continue}}$Kernel.$raise($$$("NoMethodError").$new(""+$$("Opal").$inspect(self.$item())+" doesn't respond to #to_str, #to_ary or #to_s","to_str"))}if(sep===nil)return result.join("");else return result.join($Opal["$coerce_to!"](sep,$$$("String"),"to_str").$to_s())},-1);$def(self,"$keep_if",function $$keep_if(){var block=$$keep_if.$$p||nil,self=this;$$keep_if.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["keep_if"],function $$33(){var self=$$33.$$s==null?this:$$33.$$s;return self.$size()},
{$$s:self});$deny_frozen_access(self);filterIf(self,$truthy,block);return self});$def(self,"$last",function $$last(count){var self=this;if(count==null)return self.length===0?nil:self[self.length-1];count=$coerce_to(count,$$$("Integer"),"to_int");if(count<0)$Kernel.$raise($$$("ArgumentError"),"negative array size");if(count>self.length)count=self.length;return self.slice(self.length-count,self.length)},-1);$def(self,"$length",function $$length(){var self=this;return self.length});$def(self,"$max",
function $$max(n){var block=$$max.$$p||nil,self=this;$$max.$$p=null;return $send(self.$each(),"max",[n],block.$to_proc())},-1);$def(self,"$min",function $$min(){var block=$$min.$$p||nil,self=this;$$min.$$p=null;return $send(self.$each(),"min",[],block.$to_proc())});function descending_factorial(from,how_many){var count=how_many>=0?1:0;while(how_many){count*=from;from--;how_many--}return count}$def(self,"$permutation",function $$permutation(num){var block=$$permutation.$$p||nil,self=this,perm=nil,
used=nil;$$permutation.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["permutation",num],function $$34(){var self=$$34.$$s==null?this:$$34.$$s;return descending_factorial(self.length,num===undefined?self.length:num)},{$$s:self});var permute,offensive,output;if(num===undefined)num=self.length;else num=$coerce_to(num,$$$("Integer"),"to_int");if(num<0||self.length<num);else if(num===0)Opal.yield1(block,[]);else if(num===1)for(var i=0;i<self.length;i++)Opal.yield1(block,[self[i]]);else{perm=
$$("Array").$new(num);used=$$("Array").$new(self.length,false);permute=function(num,perm,index,used,blk){self=this;for(var i=0;i<self.length;i++)if(used["$[]"](i)["$!"]()){perm[index]=i;if(index<num-1){used[i]=true;permute.call(self,num,perm,index+1,used,blk);used[i]=false}else{output=[];for(var j=0;j<perm.length;j++)output.push(self[perm[j]]);$yield1(blk,output)}}};if(block!==nil){offensive=self.slice();permute.call(offensive,num,perm,0,used,block)}else permute.call(self,num,perm,0,used,block)}return self},
-1);$def(self,"$repeated_permutation",function $$repeated_permutation(n){var $yield=$$repeated_permutation.$$p||nil,self=this,num=nil;$$repeated_permutation.$$p=null;num=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if(!($yield!==nil))return $send(self,"enum_for",["repeated_permutation",num],function $$35(){var self=$$35.$$s==null?this:$$35.$$s;if($truthy($rb_ge(num,0)))return self.$size()["$**"](num);else return 0},{$$s:self});function iterate(max,buffer,self){if(buffer.length==max){var copy=buffer.slice();
Opal.yield1($yield,copy);return}for(var i=0;i<self.length;i++){buffer.push(self[i]);iterate(max,buffer,self);buffer.pop()}}iterate(num,[],self.slice());return self});$def(self,"$pop",function $$pop(count){var self=this;$deny_frozen_access(self);if($truthy(count===undefined)){if($truthy(self.length===0))return nil;return self.pop()}count=$coerce_to(count,$$$("Integer"),"to_int");if($truthy(count<0))$Kernel.$raise($$$("ArgumentError"),"negative array size");if($truthy(self.length===0))return[];if($truthy(count===
1))return[self.pop()];else if($truthy(count>self.length))return self.splice(0,self.length);else return self.splice(self.length-count,self.length)},-1);$def(self,"$product",function $$product($a){var block=$$product.$$p||nil,$post_args,args,self=this;$$product.$$p=null;$post_args=$slice(arguments);args=$post_args;var result=block!==nil?null:[],n=args.length+1,counters=new Array(n),lengths=new Array(n),arrays=new Array(n),i,m,subarray,len,resultlen=1;arrays[0]=self;for(i=1;i<n;i++)arrays[i]=$coerce_to(args[i-
1],$$$("Array"),"to_ary");for(i=0;i<n;i++){len=arrays[i].length;if(len===0)return result||self;resultlen*=len;if(resultlen>2147483647)$Kernel.$raise($$$("RangeError"),"too big to product");lengths[i]=len;counters[i]=0}outer_loop:for(;;){subarray=[];for(i=0;i<n;i++)subarray.push(arrays[i][counters[i]]);if(result)result.push(subarray);else Opal.yield1(block,subarray);m=n-1;counters[m]++;while(counters[m]===lengths[m]){counters[m]=0;if(--m<0)break outer_loop;counters[m]++}}return result||self},-1);$def(self,
"$push",function $$push($a){var $post_args,objects,self=this;$post_args=$slice(arguments);objects=$post_args;$deny_frozen_access(self);for(var i=0,length=objects.length;i<length;i++)self.push(objects[i]);return self},-1);$def(self,"$rassoc",function $$rassoc(object){var self=this;for(var i=0,length=self.length,item;i<length;i++){item=self[i];if(item.length&&item[1]!==undefined)if(item[1]["$=="](object))return item}return nil});$def(self,"$reject",function $$reject(){var block=$$reject.$$p||nil,self=
this;$$reject.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["reject"],function $$36(){var self=$$36.$$s==null?this:$$36.$$s;return self.$size()},{$$s:self});var result=[];for(var i=0,length=self.length,value;i<length;i++){value=block(self[i]);if(value===false||value===nil)result.push(self[i])}return result});$def(self,"$reject!",function $Array_reject$excl$37(){var block=$Array_reject$excl$37.$$p||nil,self=this,original=nil;$Array_reject$excl$37.$$p=null;if(!(block!==nil))return $send(self,
"enum_for",["reject!"],function $$38(){var self=$$38.$$s==null?this:$$38.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);original=self.$length();$send(self,"delete_if",[],block.$to_proc());if($eqeq(self.$length(),original))return nil;else return self});$def(self,"$replace",function $$replace(other){var self=this;$deny_frozen_access(self);other=$eqeqeq($$$("Array"),other)?other.$to_a():$coerce_to(other,$$$("Array"),"to_ary").$to_a();self.splice(0,self.length);self.push.apply(self,other);
return self});$def(self,"$reverse",function $$reverse(){var self=this;return self.slice(0).reverse()});$def(self,"$reverse!",function $Array_reverse$excl$39(){var self=this;$deny_frozen_access(self);return self.reverse()});$def(self,"$reverse_each",function $$reverse_each(){var block=$$reverse_each.$$p||nil,self=this;$$reverse_each.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["reverse_each"],function $$40(){var self=$$40.$$s==null?this:$$40.$$s;return self.$size()},{$$s:self});$send(self.$reverse(),
"each",[],block.$to_proc());return self});$def(self,"$rindex",function $$rindex(object){var block=$$rindex.$$p||nil,self=this;$$rindex.$$p=null;var i,value;if(object!=null&&block!==nil)self.$warn("warning: given block not used");if(object!=null)for(i=self.length-1;i>=0;i--){if(i>=self.length)break;if(self[i]["$=="](object))return i}else if(block!==nil)for(i=self.length-1;i>=0;i--){if(i>=self.length)break;value=block(self[i]);if(value!==false&&value!==nil)return i}else if(object==null)return self.$enum_for("rindex");
return nil},-1);$def(self,"$rotate",function $$rotate(n){var self=this;if(n==null)n=1;var ary,idx,firstPart,lastPart;n=$coerce_to(n,$$$("Integer"),"to_int");if(self.length===1)return self.slice();if(self.length===0)return[];ary=self.slice();idx=n%ary.length;firstPart=ary.slice(idx);lastPart=ary.slice(0,idx);return firstPart.concat(lastPart)},-1);$def(self,"$rotate!",function $Array_rotate$excl$41(cnt){var self=this,ary=nil;if(cnt==null)cnt=1;$deny_frozen_access(self);if(self.length===0||self.length===
1)return self;cnt=$coerce_to(cnt,$$$("Integer"),"to_int");ary=self.$rotate(cnt);return self.$replace(ary)},-1);(function($base,$super){var self=$klass($base,$super,"SampleRandom");var $proto=self.$$prototype;$proto.rng=nil;$def(self,"$initialize",$assign_ivar("rng"));return $def(self,"$rand",function $$rand(size){var self=this,random=nil;random=$coerce_to(self.rng.$rand(size),$$$("Integer"),"to_int");if($truthy(random<0))$Kernel.$raise($$$("RangeError"),"random value must be >= 0");if(!$truthy(random<
size))$Kernel.$raise($$$("RangeError"),"random value must be less than Array size");return random})})(self,null);$def(self,"$sample",function $$sample(count,options){var self=this,o=nil,rng=nil;if($truthy(count===undefined))return self.$at($Kernel.$rand(self.length));if($truthy(options===undefined))if($truthy(o=$Opal["$coerce_to?"](count,$$$("Hash"),"to_hash"))){options=o;count=nil}else{options=nil;count=$coerce_to(count,$$$("Integer"),"to_int")}else{count=$coerce_to(count,$$$("Integer"),"to_int");
options=$coerce_to(options,$$$("Hash"),"to_hash")}if($truthy(count)&&$truthy(count<0))$Kernel.$raise($$$("ArgumentError"),"count must be greater than 0");if($truthy(options))rng=options["$[]"]("random");rng=$truthy(rng)&&$truthy(rng["$respond_to?"]("rand"))?$$("SampleRandom").$new(rng):$Kernel;if(!$truthy(count))return self[rng.$rand(self.length)];var abandon,spin,result,i,j,k,targetIndex,oldValue;if(count>self.length)count=self.length;switch(count){case 0:return[];break;case 1:return[self[rng.$rand(self.length)]];
break;case 2:i=rng.$rand(self.length);j=rng.$rand(self.length-1);if(i<=j)j++;return[self[i],self[j]];break;default:if(self.length/count>3){abandon=false;spin=0;result=$$("Array").$new(count);i=1;result[0]=rng.$rand(self.length);while(i<count){k=rng.$rand(self.length);j=0;while(j<i){while(k===result[j]){spin++;if(spin>100){abandon=true;break}k=rng.$rand(self.length)}if(abandon)break;j++}if(abandon)break;result[i]=k;i++}if(!abandon){i=0;while(i<count){result[i]=self[result[i]];i++}return result}}result=
self.slice();for(var c=0;c<count;c++){targetIndex=rng.$rand(self.length-c)+c;oldValue=result[c];result[c]=result[targetIndex];result[targetIndex]=oldValue}return count===self.length?result:result["$[]"](0,count)}},-1);$def(self,"$select",function $$select(){var block=$$select.$$p||nil,self=this;$$select.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["select"],function $$42(){var self=$$42.$$s==null?this:$$42.$$s;return self.$size()},{$$s:self});var result=[];for(var i=0,length=self.length,
item,value;i<length;i++){item=self[i];value=$yield1(block,item);if($truthy(value))result.push(item)}return result});$def(self,"$select!",function $Array_select$excl$43(){var block=$Array_select$excl$43.$$p||nil,self=this;$Array_select$excl$43.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["select!"],function $$44(){var self=$$44.$$s==null?this:$$44.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);var original=self.length;$send(self,"keep_if",[],block.$to_proc());return self.length===
original?nil:self});$def(self,"$shift",function $$shift(count){var self=this;$deny_frozen_access(self);if($truthy(count===undefined)){if($truthy(self.length===0))return nil;return shiftNoArg(self)}count=$coerce_to(count,$$$("Integer"),"to_int");if($truthy(count<0))$Kernel.$raise($$$("ArgumentError"),"negative array size");if($truthy(self.length===0))return[];return self.splice(0,count)},-1);$def(self,"$shuffle",function $$shuffle(rng){var self=this;return self.$dup().$to_a()["$shuffle!"](rng)},-1);
$def(self,"$shuffle!",function $Array_shuffle$excl$45(rng){var self=this;$deny_frozen_access(self);var randgen,i=self.length,j,tmp;if(rng!==undefined){rng=$Opal["$coerce_to?"](rng,$$$("Hash"),"to_hash");if(rng!==nil){rng=rng["$[]"]("random");if(rng!==nil&&rng["$respond_to?"]("rand"))randgen=rng}}while(i){if(randgen){j=randgen.$rand(i).$to_int();if(j<0)$Kernel.$raise($$$("RangeError"),"random number too small "+j);if(j>=i)$Kernel.$raise($$$("RangeError"),"random number too big "+j)}else j=self.$rand(i);
tmp=self[--i];self[i]=self[j];self[j]=tmp}return self},-1);$def(self,"$slice!",function $Array_slice$excl$46(index,length){var self=this,result=nil,range=nil,range_start=nil,range_end=nil,start=nil;$deny_frozen_access(self);result=nil;if($truthy(length===undefined))if($eqeqeq($$$("Range"),index)){range=index;result=self["$[]"](range);range_start=range.begin===nil?0:$coerce_to(range.begin,$$$("Integer"),"to_int");range_end=range.end===nil?-1:$coerce_to(range.end,$$$("Integer"),"to_int");if(range_start<
0)range_start+=self.length;if(range_end<0)range_end+=self.length;else if(range_end>=self.length){range_end=self.length-1;if(range.excl)range_end+=1}var range_length=range_end-range_start;if(range.excl&&range.end!==nil)range_end-=1;else range_length+=1;if(range_start<self.length&&range_start>=0&&range_end<self.length&&range_end>=0&&range_length>0)self.splice(range_start,range_length)}else{start=$coerce_to(index,$$$("Integer"),"to_int");if(start<0)start+=self.length;if(start<0||start>=self.length)return nil;
result=self[start];if(start===0)self.shift();else self.splice(start,1)}else{start=$coerce_to(index,$$$("Integer"),"to_int");length=$coerce_to(length,$$$("Integer"),"to_int");if(length<0)return nil;var end=start+length;result=self["$[]"](start,length);if(start<0)start+=self.length;if(start+length>self.length)length=self.length-start;if(start<self.length&&start>=0)self.splice(start,length)}return result},-2);$def(self,"$sort",function $$sort(){var block=$$sort.$$p||nil,self=this;$$sort.$$p=null;if(!$truthy(self.length>
1))return self;if(block===nil)block=function(a,b){return a["$<=>"](b)};return self.slice().sort(function(x,y){var ret=block(x,y);if(ret===nil)$Kernel.$raise($$$("ArgumentError"),"comparison of "+x.$inspect()+" with "+y.$inspect()+" failed");return $rb_gt(ret,0)?1:$rb_lt(ret,0)?-1:0})});$def(self,"$sort!",function $Array_sort$excl$47(){var block=$Array_sort$excl$47.$$p||nil,self=this;$Array_sort$excl$47.$$p=null;$deny_frozen_access(self);var result;if(block!==nil)result=$send(self.slice(),"sort",[],
block.$to_proc());else result=self.slice().$sort();self.length=0;for(var i=0,length=result.length;i<length;i++)self.push(result[i]);return self});$def(self,"$sort_by!",function $Array_sort_by$excl$48(){var block=$Array_sort_by$excl$48.$$p||nil,self=this;$Array_sort_by$excl$48.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["sort_by!"],function $$49(){var self=$$49.$$s==null?this:$$49.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);return self.$replace($send(self,"sort_by",
[],block.$to_proc()))});$def(self,"$take",function $$take(count){var self=this;if(count<0)$Kernel.$raise($$$("ArgumentError"));return self.slice(0,count)});$def(self,"$take_while",function $$take_while(){var block=$$take_while.$$p||nil,self=this;$$take_while.$$p=null;var result=[];for(var i=0,length=self.length,item,value;i<length;i++){item=self[i];value=block(item);if(value===false||value===nil)return result;result.push(item)}return result});$def(self,"$to_a",function $$to_a(){var self=this;if(self.$$class===
Opal.Array)return self;else return Opal.Array.$new(self)});$def(self,"$to_ary",$return_self);$def(self,"$to_h",function $$to_h(){var block=$$to_h.$$p||nil,self=this,array=nil;$$to_h.$$p=null;array=self;if(block!==nil)array=$send(array,"map",[],block.$to_proc());var i,len=array.length,ary,key,val,hash=$hash2([],{});for(i=0;i<len;i++){ary=$Opal["$coerce_to?"](array[i],$$$("Array"),"to_ary");if(!ary.$$is_array)$Kernel.$raise($$$("TypeError"),"wrong element type "+ary.$class()+" at "+i+" (expected array)");
if(ary.length!==2)$Kernel.$raise($$$("ArgumentError"),"wrong array length at "+i+" (expected 2, was "+ary.$length()+")");key=ary[0];val=ary[1];$hash_put(hash,key,val)}return hash});$def(self,"$transpose",function $$transpose(){var self=this,result=nil,max=nil;if($truthy(self["$empty?"]()))return[];result=[];max=nil;$send(self,"each",[],function $$50(row){var $ret_or_1=nil;if(row==null)row=nil;row=$eqeqeq($$$("Array"),row)?row.$to_a():$coerce_to(row,$$$("Array"),"to_ary").$to_a();max=$truthy($ret_or_1=
max)?$ret_or_1:row.length;if($neqeq(row.length,max))$Kernel.$raise($$$("IndexError"),"element size differs ("+row.length+" should be "+max+")");return $send(row.length,"times",[],function $$51(i){var $a,entry=nil;if(i==null)i=nil;entry=$truthy($ret_or_1=result["$[]"](i))?$ret_or_1:($a=[i,[]],$send(result,"[]=",$a),$a[$a.length-1]);return entry["$<<"](row.$at(i))})});return result});$def(self,"$union",function $$union($a){var $post_args,arrays,self=this;$post_args=$slice(arguments);arrays=$post_args;
return $send(arrays,"reduce",[self.$uniq()],function $$52(a,b){if(a==null)a=nil;if(b==null)b=nil;return a["$|"](b)})},-1);$def(self,"$uniq",function $$uniq(){var block=$$uniq.$$p||nil,self=this;$$uniq.$$p=null;var hash=$hash2([],{}),i,length,item,key;if(block===nil)for(i=0,length=self.length;i<length;i++){item=self[i];if($hash_get(hash,item)===undefined)$hash_put(hash,item,item)}else for(i=0,length=self.length;i<length;i++){item=self[i];key=$yield1(block,item);if($hash_get(hash,key)===undefined)$hash_put(hash,
key,item)}return hash.$values()});$def(self,"$uniq!",function $Array_uniq$excl$53(){var block=$Array_uniq$excl$53.$$p||nil,self=this;$Array_uniq$excl$53.$$p=null;$deny_frozen_access(self);var original_length=self.length,hash=$hash2([],{}),i,length,item,key;for(i=0,length=original_length;i<length;i++){item=self[i];key=block===nil?item:$yield1(block,item);if($hash_get(hash,key)===undefined){$hash_put(hash,key,item);continue}self.splice(i,1);length--;i--}return self.length===original_length?nil:self});
$def(self,"$unshift",function $$unshift($a){var $post_args,objects,self=this;$post_args=$slice(arguments);objects=$post_args;$deny_frozen_access(self);var selfLength=self.length;var objectsLength=objects.length;if(objectsLength==0)return self;var index=selfLength-objectsLength;for(var i=0;i<objectsLength;i++)self.push(self[index+i]);var len=selfLength-1;while(len-objectsLength>=0){self[len]=self[len-objectsLength];len--}for(var j=0;j<objectsLength;j++)self[j]=objects[j];return self},-1);$def(self,
"$values_at",function $$values_at($a){var $post_args,args,self=this,out=nil;$post_args=$slice(arguments);args=$post_args;out=[];$send(args,"each",[],function $$54(elem){var self=$$54.$$s==null?this:$$54.$$s,finish=nil,start=nil,i=nil;if(elem==null)elem=nil;if($truthy(elem["$is_a?"]($$$("Range")))){finish=elem.$end()===nil?-1:$coerce_to(elem.$end(),$$$("Integer"),"to_int");start=elem.$begin()===nil?0:$coerce_to(elem.$begin(),$$$("Integer"),"to_int");if(start<0){start=start+self.length;return nil}if(finish<
0)finish=finish+self.length;if(elem["$exclude_end?"]()&&elem.$end()!==nil)finish--;if(finish<start)return nil;return $send(start,"upto",[finish],function $$55(i){var self=$$55.$$s==null?this:$$55.$$s;if(i==null)i=nil;return out["$<<"](self.$at(i))},{$$s:self})}else{i=$coerce_to(elem,$$$("Integer"),"to_int");return out["$<<"](self.$at(i))}},{$$s:self});return out},-1);$def(self,"$zip",function $$zip($a){var block=$$zip.$$p||nil,$post_args,others,self=this,$ret_or_1=nil;$$zip.$$p=null;$post_args=$slice(arguments);
others=$post_args;var result=[],size=self.length,part,o,i,j,jj;for(j=0,jj=others.length;j<jj;j++){o=others[j];if(o.$$is_array)continue;if(o.$$is_range||o.$$is_enumerator){others[j]=o.$take(size);continue}others[j]=($truthy($ret_or_1=$Opal["$coerce_to?"](o,$$$("Array"),"to_ary"))?$ret_or_1:$Opal["$coerce_to!"](o,$$$("Enumerator"),"to_enum","each")).$to_a()}for(i=0;i<size;i++){part=[self[i]];for(j=0,jj=others.length;j<jj;j++){o=others[j][i];if(o==null)o=nil;part[j+1]=o}result[i]=part}if(block!==nil){for(i=
0;i<size;i++)Opal.yield1(block,result[i]);return nil}return result},-1);$defs(self,"$inherited",function $$inherited(klass){klass.$$prototype.$to_a=function(){return this.slice(0,this.length)}});$def(self,"$instance_variables",function $$instance_variables(){var $yield=$$instance_variables.$$p||nil,self=this;$$instance_variables.$$p=null;return $send($send2(self,$find_super(self,"instance_variables",$$instance_variables,false,true),"instance_variables",[],$yield),"reject",[],function $$56(ivar){var $ret_or_1=
nil;if(ivar==null)ivar=nil;if($truthy($ret_or_1=/^@\d+$/.test(ivar)))return $ret_or_1;else return ivar["$=="]("@length")})});$def(self,"$pack",function $$pack($a){var $post_args,args;$post_args=$slice(arguments);args=$post_args;return $Kernel.$raise("To use Array#pack, you must first require 'corelib/array/pack'.")},-1);$alias(self,"append","push");$alias(self,"filter","select");$alias(self,"filter!","select!");$alias(self,"map","collect");$alias(self,"map!","collect!");$alias(self,"prepend","unshift");
$alias(self,"size","length");$alias(self,"slice","[]");$alias(self,"to_s","inspect");$Opal.$pristine(self.$singleton_class(),"allocate");return $Opal.$pristine(self,"copy_instance_variables","initialize_dup")}("::",Array,$nesting)};
Opal.modules["corelib/hash"]=function(Opal){var $yield1=Opal.yield1,$hash=Opal.hash,$hash_init=Opal.hash_init,$hash_get=Opal.hash_get,$hash_put=Opal.hash_put,$hash_delete=Opal.hash_delete,$deny_frozen_access=Opal.deny_frozen_access,$freeze=Opal.freeze,$klass=Opal.klass,$slice=Opal.slice,$Opal=Opal.Opal,$Kernel=Opal.Kernel,$defs=Opal.defs,$def=Opal.def,$send=Opal.send,$rb_ge=Opal.rb_ge,$rb_gt=Opal.rb_gt,$hash2=Opal.hash2,$truthy=Opal.truthy,$to_a=Opal.to_a,$return_self=Opal.return_self,$alias=Opal.alias,
self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,include,coerce_to?,[],merge!,allocate,raise,coerce_to!,each,fetch,>=,>,==,compare_by_identity,lambda?,abs,arity,enum_for,size,respond_to?,class,dig,except!,dup,delete,new,inspect,map,to_proc,flatten,frozen?,eql?,default,default_proc,default_proc=,default=,to_h,proc,clone,select,select!,has_key?,indexes,index,length,[]=,has_value?");self.$require("corelib/enumerable");return function($base,$super,$parent_nesting){var self=
$klass($base,$super,"Hash");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$$("Enumerable"));self.$$prototype.$$is_hash=true;$defs(self,"$[]",function $Hash_$$$1($a){var $post_args,argv,self=this;$post_args=$slice(arguments);argv=$post_args;var hash,argc=argv.length,i;if(argc===1){hash=$Opal["$coerce_to?"](argv["$[]"](0),$$$("Hash"),"to_hash");if(hash!==nil)return self.$allocate()["$merge!"](hash);argv=$Opal["$coerce_to?"](argv["$[]"](0),$$$("Array"),"to_ary");if(argv===
nil)$Kernel.$raise($$$("ArgumentError"),"odd number of arguments for Hash");argc=argv.length;hash=self.$allocate();for(i=0;i<argc;i++){if(!argv[i].$$is_array)continue;switch(argv[i].length){case 1:hash.$store(argv[i][0],nil);break;case 2:hash.$store(argv[i][0],argv[i][1]);break;default:$Kernel.$raise($$$("ArgumentError"),"invalid number of elements ("+argv[i].length+" for 1..2)")}}return hash}if(argc%2!==0)$Kernel.$raise($$$("ArgumentError"),"odd number of arguments for Hash");hash=self.$allocate();
for(i=0;i<argc;i+=2)hash.$store(argv[i],argv[i+1]);return hash},-1);$defs(self,"$allocate",function $$allocate(){var self=this;var hash=new self.$$constructor;$hash_init(hash);hash.$$none=nil;hash.$$proc=nil;return hash});$defs(self,"$try_convert",function $$try_convert(obj){return $Opal["$coerce_to?"](obj,$$$("Hash"),"to_hash")});$def(self,"$initialize",function $$initialize(defaults){var block=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;$deny_frozen_access(self);if(defaults!==undefined&&
block!==nil)$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments (1 for 0)");self.$$none=defaults===undefined?nil:defaults;self.$$proc=block;return self},-1);$def(self,"$==",function $Hash_$eq_eq$2(other){var self=this;if(self===other)return true;if(!other.$$is_hash)return false;if(self.$$keys.length!==other.$$keys.length)return false;for(var i=0,keys=self.$$keys,length=keys.length,key,value,other_value;i<length;i++){key=keys[i];if(key.$$is_string){value=self.$$smap[key];other_value=other.$$smap[key]}else{value=
key.value;other_value=$hash_get(other,key.key)}if(other_value===undefined||!value["$eql?"](other_value))return false}return true});$def(self,"$>=",function $Hash_$gt_eq$3(other){var self=this,result=nil;other=$Opal["$coerce_to!"](other,$$$("Hash"),"to_hash");if(self.$$keys.length<other.$$keys.length)return false;result=true;$send(other,"each",[],function $$4(other_key,other_val){var self=$$4.$$s==null?this:$$4.$$s,val=nil;if(other_key==null)other_key=nil;if(other_val==null)other_val=nil;val=self.$fetch(other_key,
null);if(val==null||val!==other_val){result=false;return}},{$$s:self});return result});$def(self,"$>",function $Hash_$gt$5(other){var self=this;other=$Opal["$coerce_to!"](other,$$$("Hash"),"to_hash");if(self.$$keys.length<=other.$$keys.length)return false;return $rb_ge(self,other)});$def(self,"$<",function $Hash_$lt$6(other){var self=this;other=$Opal["$coerce_to!"](other,$$$("Hash"),"to_hash");return $rb_gt(other,self)});$def(self,"$<=",function $Hash_$lt_eq$7(other){var self=this;other=$Opal["$coerce_to!"](other,
$$$("Hash"),"to_hash");return $rb_ge(other,self)});$def(self,"$[]",function $Hash_$$$8(key){var self=this;var value=$hash_get(self,key);if(value!==undefined)return value;return self.$default(key)});$def(self,"$[]=",function $Hash_$$$eq$9(key,value){var self=this;$deny_frozen_access(self);$hash_put(self,key,value);return value});$def(self,"$assoc",function $$assoc(object){var self=this;for(var i=0,keys=self.$$keys,length=keys.length,key;i<length;i++){key=keys[i];if(key.$$is_string){if(key["$=="](object))return[key,
self.$$smap[key]]}else if(key.key["$=="](object))return[key.key,key.value]}return nil});$def(self,"$clear",function $$clear(){var self=this;$deny_frozen_access(self);$hash_init(self);return self});$def(self,"$clone",function $$clone(){var self=this;var hash=new self.$$class;$hash_init(hash);Opal.hash_clone(self,hash);return hash});$def(self,"$compact",function $$compact(){var self=this;var hash=$hash();for(var i=0,keys=self.$$keys,length=keys.length,key,value,obj;i<length;i++){key=keys[i];if(key.$$is_string)value=
self.$$smap[key];else{value=key.value;key=key.key}if(value!==nil)$hash_put(hash,key,value)}return hash});$def(self,"$compact!",function $Hash_compact$excl$10(){var self=this;$deny_frozen_access(self);var changes_were_made=false;for(var i=0,keys=self.$$keys,length=keys.length,key,value,obj;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}if(value===nil)if($hash_delete(self,key)!==undefined){changes_were_made=true;length--;i--}}return changes_were_made?
self:nil});$def(self,"$compare_by_identity",function $$compare_by_identity(){var self=this;$deny_frozen_access(self);var i,ii,key,keys=self.$$keys,identity_hash;if(self.$$by_identity)return self;if(self.$$keys.length===0){self.$$by_identity=true;return self}identity_hash=$hash2([],{}).$compare_by_identity();for(i=0,ii=keys.length;i<ii;i++){key=keys[i];if(!key.$$is_string)key=key.key;$hash_put(identity_hash,key,$hash_get(self,key))}self.$$by_identity=true;self.$$map=identity_hash.$$map;self.$$smap=
identity_hash.$$smap;return self});$def(self,"$compare_by_identity?",function $Hash_compare_by_identity$ques$11(){var self=this;return self.$$by_identity===true});$def(self,"$default",function $Hash_default$12(key){var self=this;if(key!==undefined&&self.$$proc!==nil&&self.$$proc!==undefined)return self.$$proc.$call(self,key);if(self.$$none===undefined)return nil;return self.$$none},-1);$def(self,"$default=",function $Hash_default$eq$13(object){var self=this;$deny_frozen_access(self);self.$$proc=nil;
self.$$none=object;return object});$def(self,"$default_proc",function $$default_proc(){var self=this;if(self.$$proc!==undefined)return self.$$proc;return nil});$def(self,"$default_proc=",function $Hash_default_proc$eq$14(default_proc){var self=this;$deny_frozen_access(self);var proc=default_proc;if(proc!==nil){proc=$Opal["$coerce_to!"](proc,$$$("Proc"),"to_proc");if(proc["$lambda?"]()&&proc.$arity().$abs()!==2)$Kernel.$raise($$$("TypeError"),"default_proc takes two arguments")}self.$$none=nil;self.$$proc=
proc;return default_proc});$def(self,"$delete",function $Hash_delete$15(key){var block=$Hash_delete$15.$$p||nil,self=this;$Hash_delete$15.$$p=null;$deny_frozen_access(self);var value=$hash_delete(self,key);if(value!==undefined)return value;if(block!==nil)return Opal.yield1(block,key);return nil});$def(self,"$delete_if",function $$delete_if(){var block=$$delete_if.$$p||nil,self=this;$$delete_if.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["delete_if"],function $$16(){var self=$$16.$$s==
null?this:$$16.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);for(var i=0,keys=self.$$keys,length=keys.length,key,value,obj;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}obj=block(key,value);if(obj!==false&&obj!==nil)if($hash_delete(self,key)!==undefined){length--;i--}}return self});$def(self,"$dig",function $$dig(key,$a){var $post_args,keys,self=this,item=nil;$post_args=$slice(arguments,1);keys=$post_args;item=self["$[]"](key);
if(item===nil||keys.length===0)return item;if(!$truthy(item["$respond_to?"]("dig")))$Kernel.$raise($$$("TypeError"),""+item.$class()+" does not have #dig method");return $send(item,"dig",$to_a(keys))},-2);$def(self,"$each",function $$each(){var block=$$each.$$p||nil,self=this;$$each.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["each"],function $$17(){var self=$$17.$$s==null?this:$$17.$$s;return self.$size()},{$$s:self});for(var i=0,keys=self.$$keys.slice(),length=keys.length,key,value;i<
length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}$yield1(block,[key,value])}return self});$def(self,"$each_key",function $$each_key(){var block=$$each_key.$$p||nil,self=this;$$each_key.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["each_key"],function $$18(){var self=$$18.$$s==null?this:$$18.$$s;return self.$size()},{$$s:self});for(var i=0,keys=self.$$keys.slice(),length=keys.length,key;i<length;i++){key=keys[i];block(key.$$is_string?key:
key.key)}return self});$def(self,"$each_value",function $$each_value(){var block=$$each_value.$$p||nil,self=this;$$each_value.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["each_value"],function $$19(){var self=$$19.$$s==null?this:$$19.$$s;return self.$size()},{$$s:self});for(var i=0,keys=self.$$keys.slice(),length=keys.length,key;i<length;i++){key=keys[i];block(key.$$is_string?self.$$smap[key]:key.value)}return self});$def(self,"$empty?",function $Hash_empty$ques$20(){var self=this;return self.$$keys.length===
0});$def(self,"$except",function $$except($a){var $post_args,keys,self=this;$post_args=$slice(arguments);keys=$post_args;return $send(self.$dup(),"except!",$to_a(keys))},-1);$def(self,"$except!",function $Hash_except$excl$21($a){var $post_args,keys,self=this;$post_args=$slice(arguments);keys=$post_args;$send(keys,"each",[],function $$22(key){var self=$$22.$$s==null?this:$$22.$$s;if(key==null)key=nil;return self.$delete(key)},{$$s:self});return self},-1);$def(self,"$fetch",function $$fetch(key,defaults){var block=
$$fetch.$$p||nil,self=this;$$fetch.$$p=null;var value=$hash_get(self,key);if(value!==undefined)return value;if(block!==nil)return block(key);if(defaults!==undefined)return defaults;return $Kernel.$raise($$$("KeyError").$new("key not found: "+key.$inspect(),$hash2(["key","receiver"],{"key":key,"receiver":self})))},-2);$def(self,"$fetch_values",function $$fetch_values($a){var block=$$fetch_values.$$p||nil,$post_args,keys,self=this;$$fetch_values.$$p=null;$post_args=$slice(arguments);keys=$post_args;
return $send(keys,"map",[],function $$23(key){var self=$$23.$$s==null?this:$$23.$$s;if(key==null)key=nil;return $send(self,"fetch",[key],block.$to_proc())},{$$s:self})},-1);$def(self,"$flatten",function $$flatten(level){var self=this;if(level==null)level=1;level=$Opal["$coerce_to!"](level,$$$("Integer"),"to_int");var result=[];for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}result.push(key);
if(value.$$is_array){if(level===1){result.push(value);continue}result=result.concat(value.$flatten(level-2));continue}result.push(value)}return result},-1);$def(self,"$freeze",function $$freeze(){var self=this;if($truthy(self["$frozen?"]()))return self;return $freeze(self)});$def(self,"$has_key?",function $Hash_has_key$ques$24(key){var self=this;return $hash_get(self,key)!==undefined});$def(self,"$has_value?",function $Hash_has_value$ques$25(value){var self=this;for(var i=0,keys=self.$$keys,length=
keys.length,key;i<length;i++){key=keys[i];if((key.$$is_string?self.$$smap[key]:key.value)["$=="](value))return true}return false});$def(self,"$hash",function $$hash(){var self=this;var top=Opal.hash_ids===undefined,hash_id=self.$object_id(),result=["Hash"],key,item;try{if(top)Opal.hash_ids=Object.create(null);if(Opal[hash_id])return"self";for(key in Opal.hash_ids){item=Opal.hash_ids[key];if(self["$eql?"](item))return"self"}Opal.hash_ids[hash_id]=self;for(var i=0,keys=self.$$keys,length=keys.length;i<
length;i++){key=keys[i];if(key.$$is_string)result.push([key,self.$$smap[key].$hash()]);else result.push([key.key_hash,key.value.$hash()])}return result.sort().join()}finally{if(top)Opal.hash_ids=undefined}});$def(self,"$index",function $$index(object){var self=this;for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}if(value["$=="](object))return key}return nil});$def(self,"$indexes",function $$indexes($a){var $post_args,
args,self=this;$post_args=$slice(arguments);args=$post_args;var result=[];for(var i=0,length=args.length,key,value;i<length;i++){key=args[i];value=$hash_get(self,key);if(value===undefined){result.push(self.$default());continue}result.push(value)}return result},-1);var inspect_ids;$def(self,"$inspect",function $$inspect(){var self=this;var top=inspect_ids===undefined,hash_id=self.$object_id(),result=[];return function(){try{if(top)inspect_ids={};if(inspect_ids.hasOwnProperty(hash_id))return"{...}";
inspect_ids[hash_id]=true;for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}key=$$("Opal").$inspect(key);value=$$("Opal").$inspect(value);result.push(key+"=>"+value)}return"{"+result.join(", ")+"}";return nil}finally{if(top)inspect_ids=undefined}}()});$def(self,"$invert",function $$invert(){var self=this;var hash=$hash();for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=
keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}$hash_put(hash,value,key)}return hash});$def(self,"$keep_if",function $$keep_if(){var block=$$keep_if.$$p||nil,self=this;$$keep_if.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["keep_if"],function $$26(){var self=$$26.$$s==null?this:$$26.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);for(var i=0,keys=self.$$keys,length=keys.length,key,value,obj;i<length;i++){key=keys[i];if(key.$$is_string)value=
self.$$smap[key];else{value=key.value;key=key.key}obj=block(key,value);if(obj===false||obj===nil)if($hash_delete(self,key)!==undefined){length--;i--}}return self});$def(self,"$keys",function $$keys(){var self=this;var result=[];for(var i=0,keys=self.$$keys,length=keys.length,key;i<length;i++){key=keys[i];if(key.$$is_string)result.push(key);else result.push(key.key)}return result});$def(self,"$length",function $$length(){var self=this;return self.$$keys.length});$def(self,"$merge",function $$merge($a){var block=
$$merge.$$p||nil,$post_args,others,self=this;$$merge.$$p=null;$post_args=$slice(arguments);others=$post_args;return $send(self.$dup(),"merge!",$to_a(others),block.$to_proc())},-1);$def(self,"$merge!",function $Hash_merge$excl$27($a){var block=$Hash_merge$excl$27.$$p||nil,$post_args,others,self=this;$Hash_merge$excl$27.$$p=null;$post_args=$slice(arguments);others=$post_args;$deny_frozen_access(self);var i,j,other,other_keys,length,key,value,other_value;for(i=0;i<others.length;++i){other=$Opal["$coerce_to!"](others[i],
$$$("Hash"),"to_hash");other_keys=other.$$keys,length=other_keys.length;if(block===nil)for(j=0;j<length;j++){key=other_keys[j];if(key.$$is_string)other_value=other.$$smap[key];else{other_value=key.value;key=key.key}$hash_put(self,key,other_value)}else for(j=0;j<length;j++){key=other_keys[j];if(key.$$is_string)other_value=other.$$smap[key];else{other_value=key.value;key=key.key}value=$hash_get(self,key);if(value===undefined){$hash_put(self,key,other_value);continue}$hash_put(self,key,block(key,value,
other_value))}}return self},-1);$def(self,"$rassoc",function $$rassoc(object){var self=this;for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}if(value["$=="](object))return[key,value]}return nil});$def(self,"$rehash",function $$rehash(){var self=this;$deny_frozen_access(self);Opal.hash_rehash(self);return self});$def(self,"$reject",function $$reject(){var block=$$reject.$$p||nil,self=this;
$$reject.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["reject"],function $$28(){var self=$$28.$$s==null?this:$$28.$$s;return self.$size()},{$$s:self});var hash=$hash();for(var i=0,keys=self.$$keys,length=keys.length,key,value,obj;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}obj=block(key,value);if(obj===false||obj===nil)$hash_put(hash,key,value)}return hash});$def(self,"$reject!",function $Hash_reject$excl$29(){var block=$Hash_reject$excl$29.$$p||
nil,self=this;$Hash_reject$excl$29.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["reject!"],function $$30(){var self=$$30.$$s==null?this:$$30.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);var changes_were_made=false;for(var i=0,keys=self.$$keys,length=keys.length,key,value,obj;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}obj=block(key,value);if(obj!==false&&obj!==nil)if($hash_delete(self,key)!==undefined){changes_were_made=
true;length--;i--}}return changes_were_made?self:nil});$def(self,"$replace",function $$replace(other){var self=this;$deny_frozen_access(self);other=$Opal["$coerce_to!"](other,$$$("Hash"),"to_hash");$hash_init(self);for(var i=0,other_keys=other.$$keys,length=other_keys.length,key,value,other_value;i<length;i++){key=other_keys[i];if(key.$$is_string)other_value=other.$$smap[key];else{other_value=key.value;key=key.key}$hash_put(self,key,other_value)}if($truthy(other.$default_proc()))self["$default_proc="](other.$default_proc());
else self["$default="](other.$default());return self});$def(self,"$select",function $$select(){var block=$$select.$$p||nil,self=this;$$select.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["select"],function $$31(){var self=$$31.$$s==null?this:$$31.$$s;return self.$size()},{$$s:self});var hash=$hash();for(var i=0,keys=self.$$keys,length=keys.length,key,value,obj;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}obj=block(key,value);if(obj!==
false&&obj!==nil)$hash_put(hash,key,value)}return hash});$def(self,"$select!",function $Hash_select$excl$32(){var block=$Hash_select$excl$32.$$p||nil,self=this;$Hash_select$excl$32.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["select!"],function $$33(){var self=$$33.$$s==null?this:$$33.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);var result=nil;for(var i=0,keys=self.$$keys,length=keys.length,key,value,obj;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];
else{value=key.value;key=key.key}obj=block(key,value);if(obj===false||obj===nil){if($hash_delete(self,key)!==undefined){length--;i--}result=self}}return result});$def(self,"$shift",function $$shift(){var self=this;$deny_frozen_access(self);var keys=self.$$keys,key;if(keys.length>0){key=keys[0];key=key.$$is_string?key:key.key;return[key,$hash_delete(self,key)]}return nil});$def(self,"$slice",function $$slice($a){var $post_args,keys,self=this;$post_args=$slice(arguments);keys=$post_args;var result=
$hash();for(var i=0,length=keys.length;i<length;i++){var key=keys[i],value=$hash_get(self,key);if(value!==undefined)$hash_put(result,key,value)}return result},-1);$def(self,"$to_a",function $$to_a(){var self=this;var result=[];for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}result.push([key,value])}return result});$def(self,"$to_h",function $$to_h(){var block=$$to_h.$$p||nil,self=this;$$to_h.$$p=
null;if(block!==nil)return $send(self,"map",[],block.$to_proc()).$to_h();if(self.$$class===Opal.Hash)return self;var hash=new Opal.Hash;$hash_init(hash);Opal.hash_clone(self,hash);return hash});$def(self,"$to_hash",$return_self);$def(self,"$to_proc",function $$to_proc(){var self=this;return $send(self,"proc",[],function $$34(key){var self=$$34.$$s==null?this:$$34.$$s;if(key==null)$Kernel.$raise($$$("ArgumentError"),"no key given");return self["$[]"](key)},{$$arity:-1,$$s:self})});$def(self,"$transform_keys",
function $$transform_keys(){var block=$$transform_keys.$$p||nil,self=this;$$transform_keys.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["transform_keys"],function $$35(){var self=$$35.$$s==null?this:$$35.$$s;return self.$size()},{$$s:self});var result=$hash();for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}key=$yield1(block,key);$hash_put(result,key,value)}return result});$def(self,
"$transform_keys!",function $Hash_transform_keys$excl$36(){var block=$Hash_transform_keys$excl$36.$$p||nil,self=this;$Hash_transform_keys$excl$36.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["transform_keys!"],function $$37(){var self=$$37.$$s==null?this:$$37.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);var keys=Opal.slice(self.$$keys),i,length=keys.length,key,value,new_key;for(i=0;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;
key=key.key}new_key=$yield1(block,key);$hash_delete(self,key);$hash_put(self,new_key,value)}return self});$def(self,"$transform_values",function $$transform_values(){var block=$$transform_values.$$p||nil,self=this;$$transform_values.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["transform_values"],function $$38(){var self=$$38.$$s==null?this:$$38.$$s;return self.$size()},{$$s:self});var result=$hash();for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=keys[i];
if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}value=$yield1(block,value);$hash_put(result,key,value)}return result});$def(self,"$transform_values!",function $Hash_transform_values$excl$39(){var block=$Hash_transform_values$excl$39.$$p||nil,self=this;$Hash_transform_values$excl$39.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["transform_values!"],function $$40(){var self=$$40.$$s==null?this:$$40.$$s;return self.$size()},{$$s:self});$deny_frozen_access(self);
for(var i=0,keys=self.$$keys,length=keys.length,key,value;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}value=$yield1(block,value);$hash_put(self,key,value)}return self});$def(self,"$values",function $$values(){var self=this;var result=[];for(var i=0,keys=self.$$keys,length=keys.length,key;i<length;i++){key=keys[i];if(key.$$is_string)result.push(self.$$smap[key]);else result.push(key.value)}return result});$alias(self,"dup","clone");$alias(self,
"each_pair","each");$alias(self,"eql?","==");$alias(self,"filter","select");$alias(self,"filter!","select!");$alias(self,"include?","has_key?");$alias(self,"indices","indexes");$alias(self,"key","index");$alias(self,"key?","has_key?");$alias(self,"member?","has_key?");$alias(self,"size","length");$alias(self,"store","[]=");$alias(self,"to_s","inspect");$alias(self,"update","merge!");$alias(self,"value?","has_value?");return $alias(self,"values_at","indexes")}("::",null,$nesting)};
Opal.modules["corelib/number"]=function(Opal){var $klass=Opal.klass,$Opal=Opal.Opal,$Kernel=Opal.Kernel,$def=Opal.def,$eqeqeq=Opal.eqeqeq,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,$not=Opal.not,$rb_lt=Opal.rb_lt,$alias=Opal.alias,$send2=Opal.send2,$find_super=Opal.find_super,$send=Opal.send,$rb_plus=Opal.rb_plus,$rb_minus=Opal.rb_minus,$eqeq=Opal.eqeq,$return_self=Opal.return_self,$rb_divide=Opal.rb_divide,$to_ary=Opal.to_ary,$rb_times=Opal.rb_times,$rb_le=Opal.rb_le,$rb_ge=Opal.rb_ge,$return_val=Opal.return_val,
$const_set=Opal.const_set,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,bridge,raise,name,class,Float,respond_to?,coerce_to!,__coerced__,===,>,!,**,new,<,to_f,==,nan?,infinite?,enum_for,+,-,gcd,lcm,%,/,frexp,to_i,ldexp,rationalize,*,<<,to_r,truncate,-@,size,<=,>=,inspect,angle,to_s,is_a?,abs,__id__,next,coerce_to?");self.$require("corelib/numeric");(function($base,$super,$parent_nesting){var self=$klass($base,$super,"Number");var $nesting=[self].concat($parent_nesting);
$Opal.$bridge(Number,self);Opal.prop(self.$$prototype,"$$is_number",true);self.$$is_number_class=true;(function(self,$parent_nesting){$def(self,"$allocate",function $$allocate(){var self=this;return $Kernel.$raise($$$("TypeError"),"allocator undefined for "+self.$name())});Opal.udef(self,"$"+"new");return nil})(Opal.get_singleton_class(self),$nesting);$def(self,"$coerce",function $$coerce(other){var self=this;if(other===nil)$Kernel.$raise($$$("TypeError"),"can't convert "+other.$class()+" into Float");
else if(other.$$is_string)return[$Kernel.$Float(other),self];else if(other["$respond_to?"]("to_f"))return[$Opal["$coerce_to!"](other,$$$("Float"),"to_f"),self];else if(other.$$is_number)return[other,self];else $Kernel.$raise($$$("TypeError"),"can't convert "+other.$class()+" into Float")});$def(self,"$__id__",function $$__id__(){var self=this;return self*2+1});$def(self,"$+",function $Number_$plus$1(other){var self=this;if(other.$$is_number)return self+other;else return self.$__coerced__("+",other)});
$def(self,"$-",function $Number_$minus$2(other){var self=this;if(other.$$is_number)return self-other;else return self.$__coerced__("-",other)});$def(self,"$*",function $Number_$$3(other){var self=this;if(other.$$is_number)return self*other;else return self.$__coerced__("*",other)});$def(self,"$/",function $Number_$slash$4(other){var self=this;if(other.$$is_number)return self/other;else return self.$__coerced__("/",other)});$def(self,"$%",function $Number_$percent$5(other){var self=this;if(other.$$is_number)if(other==
-Infinity)return other;else if(other==0)$Kernel.$raise($$$("ZeroDivisionError"),"divided by 0");else if(other<0||self<0)return(self%other+other)%other;else return self%other;else return self.$__coerced__("%",other)});$def(self,"$&",function $Number_$$6(other){var self=this;if(other.$$is_number)return self&other;else return self.$__coerced__("&",other)});$def(self,"$|",function $Number_$$7(other){var self=this;if(other.$$is_number)return self|other;else return self.$__coerced__("|",other)});$def(self,
"$^",function $Number_$$8(other){var self=this;if(other.$$is_number)return self^other;else return self.$__coerced__("^",other)});$def(self,"$<",function $Number_$lt$9(other){var self=this;if(other.$$is_number)return self<other;else return self.$__coerced__("<",other)});$def(self,"$<=",function $Number_$lt_eq$10(other){var self=this;if(other.$$is_number)return self<=other;else return self.$__coerced__("<=",other)});$def(self,"$>",function $Number_$gt$11(other){var self=this;if(other.$$is_number)return self>
other;else return self.$__coerced__(">",other)});$def(self,"$>=",function $Number_$gt_eq$12(other){var self=this;if(other.$$is_number)return self>=other;else return self.$__coerced__(">=",other)});var spaceship_operator=function(self,other){if(other.$$is_number){if(isNaN(self)||isNaN(other))return nil;if(self>other)return 1;else if(self<other)return-1;else return 0}else return self.$__coerced__("<=>",other)};$def(self,"$<=>",function $Number_$lt_eq_gt$13(other){var self=this;try{return spaceship_operator(self,
other)}catch($err){if(Opal.rescue($err,[$$$("ArgumentError")]))try{return nil}finally{Opal.pop_exception()}else throw $err;}});$def(self,"$<<",function $Number_$lt$lt$14(count){var self=this;count=$Opal["$coerce_to!"](count,$$$("Integer"),"to_int");return count>0?self<<count:self>>-count});$def(self,"$>>",function $Number_$gt$gt$15(count){var self=this;count=$Opal["$coerce_to!"](count,$$$("Integer"),"to_int");return count>0?self>>count:self<<-count});$def(self,"$[]",function $Number_$$$16(bit){var self=
this;bit=$Opal["$coerce_to!"](bit,$$$("Integer"),"to_int");if(bit<0)return 0;if(bit>=32)return self<0?1:0;return self>>bit&1});$def(self,"$+@",function $Number_$plus$$17(){var self=this;return+self});$def(self,"$-@",function $Number_$minus$$18(){var self=this;return-self});$def(self,"$~",function $Number_$$19(){var self=this;return~self});$def(self,"$**",function $Number_$$$20(other){var self=this;if($eqeqeq($$$("Integer"),other))if($not($$$("Integer")["$==="](self))||$truthy($rb_gt(other,0)))return Math.pow(self,
other);else return $$$("Rational").$new(self,1)["$**"](other);else if($rb_lt(self,0)&&($eqeqeq($$$("Float"),other)||$eqeqeq($$$("Rational"),other)))return $$$("Complex").$new(self,0)["$**"](other.$to_f());else if($truthy(other.$$is_number!=null))return Math.pow(self,other);else return self.$__coerced__("**",other)});$def(self,"$==",function $Number_$eq_eq$21(other){var self=this;if(other.$$is_number)return self.valueOf()===other.valueOf();else if(other["$respond_to?"]("=="))return other["$=="](self);
else return false});$alias(self,"===","==");$def(self,"$abs",function $$abs(){var self=this;return Math.abs(self)});$def(self,"$abs2",function $$abs2(){var self=this;return Math.abs(self*self)});$def(self,"$allbits?",function $Number_allbits$ques$22(mask){var self=this;mask=$Opal["$coerce_to!"](mask,$$$("Integer"),"to_int");return(self&mask)==mask});$def(self,"$anybits?",function $Number_anybits$ques$23(mask){var self=this;mask=$Opal["$coerce_to!"](mask,$$$("Integer"),"to_int");return(self&mask)!==
0});$def(self,"$angle",function $$angle(){var self=this;if($truthy(self["$nan?"]()))return self;if(self==0)if(1/self>0)return 0;else return Math.PI;else if(self<0)return Math.PI;else return 0});$def(self,"$bit_length",function $$bit_length(){var self=this;if(!$eqeqeq($$$("Integer"),self))$Kernel.$raise($$$("NoMethodError").$new("undefined method `bit_length` for "+self+":Float","bit_length"));if(self===0||self===-1)return 0;var result=0,value=self<0?~self:self;while(value!=0){result+=1;value>>>=1}return result});
$def(self,"$ceil",function $$ceil(ndigits){var self=this;if(ndigits==null)ndigits=0;var f=self.$to_f();if(f%1===0&&ndigits>=0)return f;var factor=Math.pow(10,ndigits),result=Math.ceil(f*factor)/factor;if(f%1===0)result=Math.round(result);return result},-1);$def(self,"$chr",function $$chr(encoding){var self=this;return Opal.enc(String.fromCharCode(self),encoding||"BINARY")},-1);$def(self,"$denominator",function $$denominator(){var $yield=$$denominator.$$p||nil,self=this;$$denominator.$$p=null;if($truthy(self["$nan?"]())||
$truthy(self["$infinite?"]()))return 1;else return $send2(self,$find_super(self,"denominator",$$denominator,false,true),"denominator",[],$yield)});$def(self,"$downto",function $$downto(stop){var block=$$downto.$$p||nil,self=this;$$downto.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["downto",stop],function $$24(){var self=$$24.$$s==null?this:$$24.$$s;if(!$eqeqeq($$$("Numeric"),stop))$Kernel.$raise($$$("ArgumentError"),"comparison of "+self.$class()+" with "+stop.$class()+" failed");if($truthy($rb_gt(stop,
self)))return 0;else return $rb_plus($rb_minus(self,stop),1)},{$$s:self});if(!stop.$$is_number)$Kernel.$raise($$$("ArgumentError"),"comparison of "+self.$class()+" with "+stop.$class()+" failed");for(var i=self;i>=stop;i--)block(i);return self});$def(self,"$equal?",function $Number_equal$ques$25(other){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self["$=="](other)))return $ret_or_1;else return isNaN(self)&&isNaN(other)});$def(self,"$even?",function $Number_even$ques$26(){var self=this;return self%
2===0});$def(self,"$floor",function $$floor(ndigits){var self=this;if(ndigits==null)ndigits=0;var f=self.$to_f();if(f%1===0&&ndigits>=0)return f;var factor=Math.pow(10,ndigits),result=Math.floor(f*factor)/factor;if(f%1===0)result=Math.round(result);return result},-1);$def(self,"$gcd",function $$gcd(other){var self=this;if(!$eqeqeq($$$("Integer"),other))$Kernel.$raise($$$("TypeError"),"not an integer");var min=Math.abs(self),max=Math.abs(other);while(min>0){var tmp=min;min=max%min;max=tmp}return max});
$def(self,"$gcdlcm",function $$gcdlcm(other){var self=this;return[self.$gcd(other),self.$lcm(other)]});$def(self,"$integer?",function $Number_integer$ques$27(){var self=this;return self%1===0});$def(self,"$is_a?",function $Number_is_a$ques$28(klass){var $yield=$Number_is_a$ques$28.$$p||nil,self=this;$Number_is_a$ques$28.$$p=null;if($eqeq(klass,$$$("Integer"))&&$eqeqeq($$$("Integer"),self))return true;if($eqeq(klass,$$$("Integer"))&&$eqeqeq($$$("Integer"),self))return true;if($eqeq(klass,$$$("Float"))&&
$eqeqeq($$$("Float"),self))return true;return $send2(self,$find_super(self,"is_a?",$Number_is_a$ques$28,false,true),"is_a?",[klass],$yield)});$def(self,"$instance_of?",function $Number_instance_of$ques$29(klass){var $yield=$Number_instance_of$ques$29.$$p||nil,self=this;$Number_instance_of$ques$29.$$p=null;if($eqeq(klass,$$$("Integer"))&&$eqeqeq($$$("Integer"),self))return true;if($eqeq(klass,$$$("Integer"))&&$eqeqeq($$$("Integer"),self))return true;if($eqeq(klass,$$$("Float"))&&$eqeqeq($$$("Float"),
self))return true;return $send2(self,$find_super(self,"instance_of?",$Number_instance_of$ques$29,false,true),"instance_of?",[klass],$yield)});$def(self,"$lcm",function $$lcm(other){var self=this;if(!$eqeqeq($$$("Integer"),other))$Kernel.$raise($$$("TypeError"),"not an integer");if(self==0||other==0)return 0;else return Math.abs(self*other/self.$gcd(other))});$def(self,"$next",function $$next(){var self=this;return self+1});$def(self,"$nobits?",function $Number_nobits$ques$30(mask){var self=this;mask=
$Opal["$coerce_to!"](mask,$$$("Integer"),"to_int");return(self&mask)==0});$def(self,"$nonzero?",function $Number_nonzero$ques$31(){var self=this;return self==0?nil:self});$def(self,"$numerator",function $$numerator(){var $yield=$$numerator.$$p||nil,self=this;$$numerator.$$p=null;if($truthy(self["$nan?"]())||$truthy(self["$infinite?"]()))return self;else return $send2(self,$find_super(self,"numerator",$$numerator,false,true),"numerator",[],$yield)});$def(self,"$odd?",function $Number_odd$ques$32(){var self=
this;return self%2!==0});$def(self,"$ord",$return_self);$def(self,"$pow",function $$pow(b,m){var self=this;if(self==0)$Kernel.$raise($$$("ZeroDivisionError"),"divided by 0");if(m===undefined)return self["$**"](b);else{if(!$$$("Integer")["$==="](b))$Kernel.$raise($$$("TypeError"),"Integer#pow() 2nd argument not allowed unless a 1st argument is integer");if(b<0)$Kernel.$raise($$$("TypeError"),"Integer#pow() 1st argument cannot be negative when 2nd argument specified");if(!$$$("Integer")["$==="](m))$Kernel.$raise($$$("TypeError"),
"Integer#pow() 2nd argument not allowed unless all arguments are integers");if(m===0)$Kernel.$raise($$$("ZeroDivisionError"),"divided by 0");return self["$**"](b)["$%"](m)}},-2);$def(self,"$pred",function $$pred(){var self=this;return self-1});$def(self,"$quo",function $$quo(other){var $yield=$$quo.$$p||nil,self=this;$$quo.$$p=null;if($eqeqeq($$$("Integer"),self))return $send2(self,$find_super(self,"quo",$$quo,false,true),"quo",[other],$yield);else return $rb_divide(self,other)});$def(self,"$rationalize",
function $$rationalize(eps){var $a,$b,self=this,f=nil,n=nil;if(arguments.length>1)$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+arguments.length+" for 0..1)");if($eqeqeq($$$("Integer"),self))return $$$("Rational").$new(self,1);else if($truthy(self["$infinite?"]()))return $Kernel.$raise($$$("FloatDomainError"),"Infinity");else if($truthy(self["$nan?"]()))return $Kernel.$raise($$$("FloatDomainError"),"NaN");else if($truthy(eps==null)){$b=$$$("Math").$frexp(self),$a=$to_ary($b),f=
$a[0]==null?nil:$a[0],n=$a[1]==null?nil:$a[1],$b;f=$$$("Math").$ldexp(f,$$$($$$("Float"),"MANT_DIG")).$to_i();n=$rb_minus(n,$$$($$$("Float"),"MANT_DIG"));return $$$("Rational").$new($rb_times(2,f),1["$<<"]($rb_minus(1,n))).$rationalize($$$("Rational").$new(1,1["$<<"]($rb_minus(1,n))))}else return self.$to_r().$rationalize(eps)},-1);$def(self,"$remainder",function $$remainder(y){var self=this;return $rb_minus(self,$rb_times(y,$rb_divide(self,y).$truncate()))});$def(self,"$round",function $$round(ndigits){var $a,
$b,self=this,_=nil,exp=nil;if($eqeqeq($$$("Integer"),self)){if($truthy(ndigits==null))return self;if($eqeqeq($$$("Float"),ndigits)&&$truthy(ndigits["$infinite?"]()))$Kernel.$raise($$$("RangeError"),"Infinity");ndigits=$Opal["$coerce_to!"](ndigits,$$$("Integer"),"to_int");if($truthy($rb_lt(ndigits,$$$($$$("Integer"),"MIN"))))$Kernel.$raise($$$("RangeError"),"out of bounds");if($truthy(ndigits>=0))return self;ndigits=ndigits["$-@"]();if(.415241*ndigits-.125>self.$size())return 0;var f=Math.pow(10,ndigits),
x=Math.floor((Math.abs(self)+f/2)/f)*f;return self<0?-x:x}else{if($truthy(self["$nan?"]())&&$truthy(ndigits==null))$Kernel.$raise($$$("FloatDomainError"),"NaN");ndigits=$Opal["$coerce_to!"](ndigits||0,$$$("Integer"),"to_int");if($truthy($rb_le(ndigits,0)))if($truthy(self["$nan?"]()))$Kernel.$raise($$$("RangeError"),"NaN");else{if($truthy(self["$infinite?"]()))$Kernel.$raise($$$("FloatDomainError"),"Infinity")}else if($eqeq(ndigits,0))return Math.round(self);else if($truthy(self["$nan?"]())||$truthy(self["$infinite?"]()))return self;
$b=$$$("Math").$frexp(self),$a=$to_ary($b),_=$a[0]==null?nil:$a[0],exp=$a[1]==null?nil:$a[1],$b;if($truthy($rb_ge(ndigits,$rb_minus($rb_plus($$$($$$("Float"),"DIG"),2),$truthy($rb_gt(exp,0))?$rb_divide(exp,4):$rb_minus($rb_divide(exp,3),1)))))return self;if($truthy($rb_lt(ndigits,($truthy($rb_gt(exp,0))?$rb_plus($rb_divide(exp,3),1):$rb_divide(exp,4))["$-@"]())))return 0;return Math.round(self*Math.pow(10,ndigits))/Math.pow(10,ndigits)}},-1);$def(self,"$times",function $$times(){var block=$$times.$$p||
nil,self=this;$$times.$$p=null;if(!$truthy(block))return $send(self,"enum_for",["times"],function $$33(){var self=$$33.$$s==null?this:$$33.$$s;return self},{$$s:self});for(var i=0;i<self;i++)block(i);return self});$def(self,"$to_f",$return_self);$def(self,"$to_i",function $$to_i(){var self=this;return self<0?Math.ceil(self):Math.floor(self)});$def(self,"$to_r",function $$to_r(){var $a,$b,self=this,f=nil,e=nil;if($eqeqeq($$$("Integer"),self))return $$$("Rational").$new(self,1);else{$b=$$$("Math").$frexp(self),
$a=$to_ary($b),f=$a[0]==null?nil:$a[0],e=$a[1]==null?nil:$a[1],$b;f=$$$("Math").$ldexp(f,$$$($$$("Float"),"MANT_DIG")).$to_i();e=$rb_minus(e,$$$($$$("Float"),"MANT_DIG"));return $rb_times(f,$$$($$$("Float"),"RADIX")["$**"](e)).$to_r()}});$def(self,"$to_s",function $$to_s(base){var self=this;if(base==null)base=10;base=$Opal["$coerce_to!"](base,$$$("Integer"),"to_int");if($truthy($rb_lt(base,2))||$truthy($rb_gt(base,36)))$Kernel.$raise($$$("ArgumentError"),"invalid radix "+base);if($eqeq(self,0)&&$truthy(1/
self===-Infinity))return"-0.0";return self.toString(base)},-1);$def(self,"$truncate",function $$truncate(ndigits){var self=this;if(ndigits==null)ndigits=0;var f=self.$to_f();if(f%1===0&&ndigits>=0)return f;var factor=Math.pow(10,ndigits),result=parseInt(f*factor,10)/factor;if(f%1===0)result=Math.round(result);return result},-1);$def(self,"$digits",function $$digits(base){var self=this;if(base==null)base=10;if($rb_lt(self,0))$Kernel.$raise($$$($$$("Math"),"DomainError"),"out of domain");base=$Opal["$coerce_to!"](base,
$$$("Integer"),"to_int");if($truthy($rb_lt(base,2)))$Kernel.$raise($$$("ArgumentError"),"invalid radix "+base);if(self!=parseInt(self))$Kernel.$raise($$$("NoMethodError"),"undefined method `digits' for "+self.$inspect());var value=self,result=[];if(self==0)return[0];while(value!=0){result.push(value%base);value=parseInt(value/base,10)}return result},-1);$def(self,"$divmod",function $$divmod(other){var $yield=$$divmod.$$p||nil,self=this;$$divmod.$$p=null;if($truthy(self["$nan?"]())||$truthy(other["$nan?"]()))return $Kernel.$raise($$$("FloatDomainError"),
"NaN");else if($truthy(self["$infinite?"]()))return $Kernel.$raise($$$("FloatDomainError"),"Infinity");else return $send2(self,$find_super(self,"divmod",$$divmod,false,true),"divmod",[other],$yield)});$def(self,"$upto",function $$upto(stop){var block=$$upto.$$p||nil,self=this;$$upto.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["upto",stop],function $$34(){var self=$$34.$$s==null?this:$$34.$$s;if(!$eqeqeq($$$("Numeric"),stop))$Kernel.$raise($$$("ArgumentError"),"comparison of "+self.$class()+
" with "+stop.$class()+" failed");if($truthy($rb_lt(stop,self)))return 0;else return $rb_plus($rb_minus(stop,self),1)},{$$s:self});if(!stop.$$is_number)$Kernel.$raise($$$("ArgumentError"),"comparison of "+self.$class()+" with "+stop.$class()+" failed");for(var i=self;i<=stop;i++)block(i);return self});$def(self,"$zero?",function $Number_zero$ques$35(){var self=this;return self==0});$def(self,"$size",$return_val(4));$def(self,"$nan?",function $Number_nan$ques$36(){var self=this;return isNaN(self)});
$def(self,"$finite?",function $Number_finite$ques$37(){var self=this;return self!=Infinity&&self!=-Infinity&&!isNaN(self)});$def(self,"$infinite?",function $Number_infinite$ques$38(){var self=this;if(self==Infinity)return+1;else if(self==-Infinity)return-1;else return nil});$def(self,"$positive?",function $Number_positive$ques$39(){var self=this;return self!=0&&(self==Infinity||1/self>0)});$def(self,"$negative?",function $Number_negative$ques$40(){var self=this;return self==-Infinity||1/self<0});
function numberToUint8Array(num){var uint8array=new Uint8Array(8);(new DataView(uint8array.buffer)).setFloat64(0,num,true);return uint8array}function uint8ArrayToNumber(arr){return(new DataView(arr.buffer)).getFloat64(0,true)}function incrementNumberBit(num){var arr=numberToUint8Array(num);for(var i=0;i<arr.length;i++)if(arr[i]===255)arr[i]=0;else{arr[i]++;break}return uint8ArrayToNumber(arr)}function decrementNumberBit(num){var arr=numberToUint8Array(num);for(var i=0;i<arr.length;i++)if(arr[i]===
0)arr[i]=255;else{arr[i]--;break}return uint8ArrayToNumber(arr)}$def(self,"$next_float",function $$next_float(){var self=this;if($eqeq(self,$$$($$$("Float"),"INFINITY")))return $$$($$$("Float"),"INFINITY");if($truthy(self["$nan?"]()))return $$$($$$("Float"),"NAN");if($rb_ge(self,0))return incrementNumberBit(Math.abs(self));else return decrementNumberBit(self)});$def(self,"$prev_float",function $$prev_float(){var self=this;if($eqeq(self,$$$($$$("Float"),"INFINITY")["$-@"]()))return $$$($$$("Float"),
"INFINITY")["$-@"]();if($truthy(self["$nan?"]()))return $$$($$$("Float"),"NAN");if($rb_gt(self,0))return decrementNumberBit(self);else return-incrementNumberBit(Math.abs(self))});$alias(self,"arg","angle");$alias(self,"eql?","==");$alias(self,"fdiv","/");$alias(self,"inspect","to_s");$alias(self,"kind_of?","is_a?");$alias(self,"magnitude","abs");$alias(self,"modulo","%");$alias(self,"object_id","__id__");$alias(self,"phase","angle");$alias(self,"succ","next");return $alias(self,"to_int","to_i")})("::",
$$$("Numeric"),$nesting);$const_set("::","Fixnum",$$$("Number"));(function($base,$super,$parent_nesting){var self=$klass($base,$super,"Integer");var $nesting=[self].concat($parent_nesting);self.$$is_number_class=true;self.$$is_integer_class=true;(function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$allocate",function $$allocate(){var self=this;return $Kernel.$raise($$$("TypeError"),"allocator undefined for "+self.$name())});Opal.udef(self,"$"+
"new");$def(self,"$sqrt",function $$sqrt(n){n=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if(n<0)$Kernel.$raise($$$($$$("Math"),"DomainError"),'Numerical argument is out of domain - "isqrt"');return parseInt(Math.sqrt(n),10)});return $def(self,"$try_convert",function $$try_convert(object){var self=this;return $$("Opal")["$coerce_to?"](object,self,"to_int")})})(Opal.get_singleton_class(self),$nesting);$const_set(self,"MAX",Math.pow(2,30)-1);return $const_set(self,"MIN",-Math.pow(2,30))})("::",
$$$("Numeric"),$nesting);return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Float");var $nesting=[self].concat($parent_nesting);self.$$is_number_class=true;(function(self,$parent_nesting){$def(self,"$allocate",function $$allocate(){var self=this;return $Kernel.$raise($$$("TypeError"),"allocator undefined for "+self.$name())});Opal.udef(self,"$"+"new");return $def(self,"$===",function $eq_eq_eq$41(other){return!!other.$$is_number})})(Opal.get_singleton_class(self),$nesting);
$const_set(self,"INFINITY",Infinity);$const_set(self,"MAX",Number.MAX_VALUE);$const_set(self,"MIN",Number.MIN_VALUE);$const_set(self,"NAN",NaN);$const_set(self,"DIG",15);$const_set(self,"MANT_DIG",53);$const_set(self,"RADIX",2);return $const_set(self,"EPSILON",Number.EPSILON||2.220446049250313E-16)}("::",$$$("Numeric"),$nesting)};
Opal.modules["corelib/range"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$Kernel=Opal.Kernel,$def=Opal.def,$not=Opal.not,$send2=Opal.send2,$find_super=Opal.find_super,$rb_lt=Opal.rb_lt,$rb_le=Opal.rb_le,$send=Opal.send,$eqeq=Opal.eqeq,$eqeqeq=Opal.eqeqeq,$return_ivar=Opal.return_ivar,$rb_gt=Opal.rb_gt,$rb_minus=Opal.rb_minus,$Opal=Opal.Opal,$rb_divide=Opal.rb_divide,$rb_plus=Opal.rb_plus,$rb_times=Opal.rb_times,$rb_ge=Opal.rb_ge,$thrower=Opal.thrower,$alias=Opal.alias,self=Opal.top,
$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,include,attr_reader,raise,nil?,<=>,include?,!,<,<=,enum_for,size,upto,to_proc,respond_to?,class,succ,==,===,exclude_end?,eql?,begin,end,last,to_a,>,-@,-,to_i,coerce_to!,ceil,/,is_a?,new,loop,+,*,>=,each_with_index,%,step,bsearch,inspect,[],hash,cover?");self.$require("corelib/enumerable");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Range");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),
$proto=self.$$prototype;$proto.begin=$proto.end=$proto.excl=nil;self.$include($$$("Enumerable"));self.$$prototype.$$is_range=true;self.$attr_reader("begin","end");$def(self,"$initialize",function $$initialize(first,last,exclude){var self=this;if(exclude==null)exclude=false;if($truthy(self.begin))$Kernel.$raise($$$("NameError"),"'initialize' called twice");if(!($truthy(first["$<=>"](last))||$truthy(first["$nil?"]())||$truthy(last["$nil?"]())))$Kernel.$raise($$$("ArgumentError"),"bad value for range");
self.begin=first;self.end=last;return self.excl=exclude},-3);$def(self,"$===",function $Range_$eq_eq_eq$1(value){var self=this;return self["$include?"](value)});function is_infinite(self){if(self.begin===nil||self.end===nil||self.begin===-Infinity||self.end===Infinity||self.begin===Infinity||self.end===-Infinity)return true;return false}$def(self,"$count",function $$count(){var block=$$count.$$p||nil,self=this;$$count.$$p=null;if($not(block!==nil)&&$truthy(is_infinite(self)))return $$$($$$("Float"),
"INFINITY");return $send2(self,$find_super(self,"count",$$count,false,true),"count",[],block)});$def(self,"$to_a",function $$to_a(){var $yield=$$to_a.$$p||nil,self=this;$$to_a.$$p=null;if($truthy(is_infinite(self)))$Kernel.$raise($$$("TypeError"),"cannot convert endless range to an array");return $send2(self,$find_super(self,"to_a",$$to_a,false,true),"to_a",[],$yield)});$def(self,"$cover?",function $Range_cover$ques$2(value){var self=this,beg_cmp=nil,$ret_or_1=nil,$ret_or_2=nil,$ret_or_3=nil,end_cmp=
nil;beg_cmp=$truthy($ret_or_1=$truthy($ret_or_2=$truthy($ret_or_3=self.begin["$nil?"]())?-1:$ret_or_3)?$ret_or_2:self.begin["$<=>"](value))&&$ret_or_1;end_cmp=$truthy($ret_or_1=$truthy($ret_or_2=$truthy($ret_or_3=self.end["$nil?"]())?-1:$ret_or_3)?$ret_or_2:value["$<=>"](self.end))&&$ret_or_1;if($truthy($ret_or_1=$truthy($ret_or_2=$truthy(self.excl)?$truthy($ret_or_3=end_cmp)?$rb_lt(end_cmp,0):$ret_or_3:$truthy($ret_or_3=end_cmp)?$rb_le(end_cmp,0):$ret_or_3)?beg_cmp:$ret_or_2))return $rb_le(beg_cmp,
0);else return $ret_or_1});$def(self,"$each",function $$each(){var block=$$each.$$p||nil,self=this,current=nil,last=nil,$ret_or_1=nil;$$each.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["each"],function $$3(){var self=$$3.$$s==null?this:$$3.$$s;return self.$size()},{$$s:self});var i,limit;if(self.begin.$$is_number&&self.end.$$is_number){if(self.begin%1!==0||self.end%1!==0)$Kernel.$raise($$$("TypeError"),"can't iterate from Float");for(i=self.begin,limit=self.end+($truthy(self.excl)?0:
1);i<limit;i++)block(i);return self}if(self.begin.$$is_string&&self.end.$$is_string){$send(self.begin,"upto",[self.end,self.excl],block.$to_proc());return self}current=self.begin;last=self.end;if(!$truthy(current["$respond_to?"]("succ")))$Kernel.$raise($$$("TypeError"),"can't iterate from "+current.$class());while($truthy($truthy($ret_or_1=self.end["$nil?"]())?$ret_or_1:$rb_lt(current["$<=>"](last),0))){Opal.yield1(block,current);current=current.$succ()}if($not(self.excl)&&$eqeq(current,last))Opal.yield1(block,
current);return self});$def(self,"$eql?",function $Range_eql$ques$4(other){var self=this,$ret_or_1=nil,$ret_or_2=nil;if(!$eqeqeq($$$("Range"),other))return false;if($truthy($ret_or_1=$truthy($ret_or_2=self.excl["$==="](other["$exclude_end?"]()))?self.begin["$eql?"](other.$begin()):$ret_or_2))return self.end["$eql?"](other.$end());else return $ret_or_1});$def(self,"$exclude_end?",$return_ivar("excl"));$def(self,"$first",function $$first(n){var $yield=$$first.$$p||nil,self=this;$$first.$$p=null;if($truthy(self.begin["$nil?"]()))$Kernel.$raise($$$("RangeError"),
"cannot get the minimum of beginless range");if($truthy(n==null))return self.begin;return $send2(self,$find_super(self,"first",$$first,false,true),"first",[n],$yield)},-1);$def(self,"$last",function $$last(n){var self=this;if($truthy(self.end["$nil?"]()))$Kernel.$raise($$$("RangeError"),"cannot get the maximum of endless range");if($truthy(n==null))return self.end;return self.$to_a().$last(n)},-1);$def(self,"$max",function $$max(){var $yield=$$max.$$p||nil,self=this;$$max.$$p=null;if($truthy(self.end["$nil?"]()))return $Kernel.$raise($$$("RangeError"),
"cannot get the maximum of endless range");else if($yield!==nil)return $send2(self,$find_super(self,"max",$$max,false,true),"max",[],$yield);else if($not(self.begin["$nil?"]())&&($truthy($rb_gt(self.begin,self.end))||$truthy(self.excl)&&$eqeq(self.begin,self.end)))return nil;else return self.excl?self.end-1:self.end});$def(self,"$min",function $$min(){var $yield=$$min.$$p||nil,self=this;$$min.$$p=null;if($truthy(self.begin["$nil?"]()))return $Kernel.$raise($$$("RangeError"),"cannot get the minimum of beginless range");
else if($yield!==nil)return $send2(self,$find_super(self,"min",$$min,false,true),"min",[],$yield);else if($not(self.end["$nil?"]())&&($truthy($rb_gt(self.begin,self.end))||$truthy(self.excl)&&$eqeq(self.begin,self.end)))return nil;else return self.begin});$def(self,"$size",function $$size(){var self=this,infinity=nil,range_begin=nil,range_end=nil;infinity=$$$($$$("Float"),"INFINITY");if($eqeq(self.begin,infinity)&&$not(self.end["$nil?"]())||$eqeq(self.end,infinity["$-@"]())&&$not(self.begin["$nil?"]()))return 0;
if($truthy(is_infinite(self)))return infinity;if(!($eqeqeq($$$("Numeric"),self.begin)&&$eqeqeq($$$("Numeric"),self.end)))return nil;range_begin=self.begin;range_end=self.end;if($truthy(self.excl))range_end=$rb_minus(range_end,1);if($truthy($rb_lt(range_end,range_begin)))return 0;return(Math.abs(range_end-range_begin)+1).$to_i()});$def(self,"$step",function $$step(n){var $yield=$$step.$$p||nil,self=this,$ret_or_1=nil,i=nil;$$step.$$p=null;function coerceStepSize(){if(n==null)n=1;else if(!n.$$is_number)n=
$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");if(n<0)$Kernel.$raise($$$("ArgumentError"),"step can't be negative");else if(n===0)$Kernel.$raise($$$("ArgumentError"),"step can't be 0")}function enumeratorSize(){if(!self.begin["$respond_to?"]("succ"))return nil;if(self.begin.$$is_string&&self.end.$$is_string)return nil;if(n%1===0)return $rb_divide(self.$size(),n).$ceil();else{var begin=self.begin,end=self.end,abs=Math.abs,floor=Math.floor,err=(abs(begin)+abs(end)+abs(end-begin))/abs(n)*$$$($$$("Float"),
"EPSILON"),size;if(err>.5)err=.5;if(self.excl){size=floor((end-begin)/n-err);if(size*n+begin<end)size++}else size=floor((end-begin)/n+err)+1;return size}}if(!($yield!==nil))if(($truthy(self.begin["$is_a?"]($$("Numeric")))||$truthy(self.begin["$nil?"]()))&&($truthy(self.end["$is_a?"]($$("Numeric")))||$truthy(self.end["$nil?"]()))&&$not($truthy($ret_or_1=self.begin["$nil?"]())?self.end["$nil?"]():$ret_or_1))return $$$($$$("Enumerator"),"ArithmeticSequence").$new(self,n,"step");else return $send(self,
"enum_for",["step",n],function $$5(){coerceStepSize();return enumeratorSize()});coerceStepSize();if($truthy(self.begin.$$is_number&&self.end.$$is_number)){i=0;(function(){try{var $t_break=$thrower("break");return $send(self,"loop",[],function $$6(){var self=$$6.$$s==null?this:$$6.$$s,current=nil;if(self.begin==null)self.begin=nil;if(self.excl==null)self.excl=nil;if(self.end==null)self.end=nil;current=$rb_plus(self.begin,$rb_times(i,n));if($truthy(self.excl)){if($truthy($rb_ge(current,self.end)))$t_break.$throw()}else if($truthy($rb_gt(current,
self.end)))$t_break.$throw();Opal.yield1($yield,current);return i=$rb_plus(i,1)},{$$s:self})}catch($e){if($e===$t_break)return $e.$v;throw $e;}})()}else{if(self.begin.$$is_string&&self.end.$$is_string&&n%1!==0)$Kernel.$raise($$$("TypeError"),"no implicit conversion to float from string");$send(self,"each_with_index",[],function $$7(value,idx){if(value==null)value=nil;if(idx==null)idx=nil;if($eqeq(idx["$%"](n),0))return Opal.yield1($yield,value);else return nil})}return self},-1);$def(self,"$%",function $Range_$percent$8(n){var self=
this;if($truthy(self.begin["$is_a?"]($$("Numeric")))&&$truthy(self.end["$is_a?"]($$("Numeric"))))return $$$($$$("Enumerator"),"ArithmeticSequence").$new(self,n,"%");else return self.$step(n)});$def(self,"$bsearch",function $$bsearch(){var block=$$bsearch.$$p||nil,self=this;$$bsearch.$$p=null;if(!(block!==nil))return self.$enum_for("bsearch");if($truthy(is_infinite(self)&&(self.begin.$$is_number||self.end.$$is_number)))$Kernel.$raise($$$("NotImplementedError"),"Can't #bsearch an infinite range");if(!$truthy(self.begin.$$is_number&&
self.end.$$is_number))$Kernel.$raise($$$("TypeError"),"can't do binary search for "+self.begin.$class());return $send(self.$to_a(),"bsearch",[],block.$to_proc())});$def(self,"$to_s",function $$to_s(){var self=this,$ret_or_1=nil;return""+($truthy($ret_or_1=self.begin)?$ret_or_1:"")+($truthy(self.excl)?"...":"..")+($truthy($ret_or_1=self.end)?$ret_or_1:"")});$def(self,"$inspect",function $$inspect(){var self=this,$ret_or_1=nil;return""+($truthy($ret_or_1=self.begin)?self.begin.$inspect():$ret_or_1)+
($truthy(self.excl)?"...":"..")+($truthy($ret_or_1=self.end)?self.end.$inspect():$ret_or_1)});$def(self,"$marshal_load",function $$marshal_load(args){var self=this;self.begin=args["$[]"]("begin");self.end=args["$[]"]("end");return self.excl=args["$[]"]("excl")});$def(self,"$hash",function $$hash(){var self=this;return[self.begin,self.end,self.excl].$hash()});$alias(self,"==","eql?");$alias(self,"include?","cover?");return $alias(self,"member?","cover?")}("::",null,$nesting)};
Opal.modules["corelib/proc"]=function(Opal){var $slice=Opal.slice,$klass=Opal.klass,$truthy=Opal.truthy,$Kernel=Opal.Kernel,$defs=Opal.defs,$def=Opal.def,$send=Opal.send,$to_a=Opal.to_a,$return_self=Opal.return_self,$ensure_kwargs=Opal.ensure_kwargs,$Opal=Opal.Opal,$alias=Opal.alias,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("raise,proc,call,to_proc,new,source_location,coerce_to!,dup");return function($base,$super){var self=$klass($base,$super,"Proc");Opal.prop(self.$$prototype,"$$is_proc",true);Opal.prop(self.$$prototype,
"$$is_lambda",false);$defs(self,"$new",function $Proc_new$1(){var block=$Proc_new$1.$$p||nil;$Proc_new$1.$$p=null;if(!$truthy(block))$Kernel.$raise($$$("ArgumentError"),"tried to create a Proc object without a block");return block});$def(self,"$call",function $$call($a){var block=$$call.$$p||nil,$post_args,args,self=this;$$call.$$p=null;$post_args=$slice(arguments);args=$post_args;if(block!==nil)self.$$p=block;var result,$brk=self.$$brk,$ret=self.$$ret;if($brk||$ret&&self.$$is_lambda)try{if(self.$$is_lambda)result=
self.apply(null,args);else result=Opal.yieldX(self,args)}catch(err){if(err===$brk)return err.$v;else if(self.$$is_lambda&&err===$ret)return err.$v;else throw err;}else if(self.$$is_lambda)result=self.apply(null,args);else result=Opal.yieldX(self,args);return result},-1);$def(self,"$>>",function $Proc_$gt$gt$2(other){var $yield=$Proc_$gt$gt$2.$$p||nil,self=this;$Proc_$gt$gt$2.$$p=null;return $send($Kernel,"proc",[],function $$3($a){var block=$$3.$$p||nil,$post_args,args,self=$$3.$$s==null?this:$$3.$$s,
out=nil;$$3.$$p=null;$post_args=$slice(arguments);args=$post_args;out=$send(self,"call",$to_a(args),block.$to_proc());return other.$call(out)},{$$arity:-1,$$s:self})});$def(self,"$<<",function $Proc_$lt$lt$4(other){var $yield=$Proc_$lt$lt$4.$$p||nil,self=this;$Proc_$lt$lt$4.$$p=null;return $send($Kernel,"proc",[],function $$5($a){var block=$$5.$$p||nil,$post_args,args,self=$$5.$$s==null?this:$$5.$$s,out=nil;$$5.$$p=null;$post_args=$slice(arguments);args=$post_args;out=$send(other,"call",$to_a(args),
block.$to_proc());return self.$call(out)},{$$arity:-1,$$s:self})});$def(self,"$to_proc",$return_self);$def(self,"$lambda?",function $Proc_lambda$ques$6(){var self=this;return!!self.$$is_lambda});$def(self,"$arity",function $$arity(){var self=this;if(self.$$is_curried)return-1;else if(self.$$arity!=null)return self.$$arity;else return self.length});$def(self,"$source_location",function $$source_location(){var self=this,$ret_or_1=nil;if(self.$$is_curried)return nil;if($truthy($ret_or_1=self.$$source_location))return $ret_or_1;
else return nil});$def(self,"$binding",function $$binding(){var $a,self=this;if(self.$$is_curried)$Kernel.$raise($$$("ArgumentError"),"Can't create Binding");if($truthy(($a=$$$("::","Binding","skip_raise"))?"constant":nil))return $$$("Binding").$new(nil,[],self.$$s,self.$source_location());else return nil});$def(self,"$parameters",function $$parameters($kwargs){var lambda,self=this;$kwargs=$ensure_kwargs($kwargs);lambda=$kwargs.$$smap["lambda"];if(self.$$is_curried)return[["rest"]];else if(self.$$parameters)if(lambda==
null?self.$$is_lambda:lambda)return self.$$parameters;else{var result=[],i,length;for(i=0,length=self.$$parameters.length;i<length;i++){var parameter=self.$$parameters[i];if(parameter[0]==="req")parameter=["opt",parameter[1]];result.push(parameter)}return result}else return[]},-1);$def(self,"$curry",function $$curry(arity){var self=this;if(arity===undefined)arity=self.length;else{arity=$Opal["$coerce_to!"](arity,$$$("Integer"),"to_int");if(self.$$is_lambda&&arity!==self.length)$Kernel.$raise($$$("ArgumentError"),
"wrong number of arguments ("+arity+" for "+self.length+")")}function curried(){var args=$slice(arguments),length=args.length,result;if(length>arity&&self.$$is_lambda&&!self.$$is_curried)$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+length+" for "+arity+")");if(length>=arity)return self.$call.apply(self,args);result=function(){return curried.apply(null,args.concat($slice(arguments)))};result.$$is_lambda=self.$$is_lambda;result.$$is_curried=true;return result}curried.$$is_lambda=
self.$$is_lambda;curried.$$is_curried=true;return curried},-1);$def(self,"$dup",function $$dup(){var self=this;var original_proc=self.$$original_proc||self,proc=function(){return original_proc.apply(this,arguments)};for(var prop in self)if(self.hasOwnProperty(prop))proc[prop]=self[prop];return proc});$alias(self,"===","call");$alias(self,"clone","dup");$alias(self,"yield","call");return $alias(self,"[]","call")}("::",Function)};
Opal.modules["corelib/method"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$truthy=Opal.truthy,$slice=Opal.slice,$alias=Opal.alias,$Kernel=Opal.Kernel,$send=Opal.send,$to_a=Opal.to_a,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("attr_reader,arity,curry,>>,<<,new,class,join,source_location,call,raise,bind,to_proc");(function($base,$super){var self=$klass($base,$super,"Method");var $proto=self.$$prototype;$proto.method=$proto.receiver=$proto.owner=$proto.name=nil;self.$attr_reader("owner","receiver",
"name");$def(self,"$initialize",function $$initialize(receiver,owner,method,name){var self=this;self.receiver=receiver;self.owner=owner;self.name=name;return self.method=method});$def(self,"$arity",function $$arity(){var self=this;return self.method.$arity()});$def(self,"$parameters",function $$parameters(){var self=this;return self.method.$$parameters});$def(self,"$source_location",function $$source_location(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.method.$$source_location))return $ret_or_1;
else return["(eval)",0]});$def(self,"$comments",function $$comments(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.method.$$comments))return $ret_or_1;else return[]});$def(self,"$call",function $$call($a){var block=$$call.$$p||nil,$post_args,args,self=this;$$call.$$p=null;$post_args=$slice(arguments);args=$post_args;self.method.$$p=block;return self.method.apply(self.receiver,args)},-1);$def(self,"$curry",function $$curry(arity){var self=this;return self.method.$curry(arity)},-1);$def(self,
"$>>",function $Method_$gt$gt$1(other){var self=this;return self.method["$>>"](other)});$def(self,"$<<",function $Method_$lt$lt$2(other){var self=this;return self.method["$<<"](other)});$def(self,"$unbind",function $$unbind(){var self=this;return $$$("UnboundMethod").$new(self.receiver.$class(),self.owner,self.method,self.name)});$def(self,"$to_proc",function $$to_proc(){var self=this;var proc=self.$call.bind(self);proc.$$unbound=self.method;proc.$$is_lambda=true;proc.$$arity=self.method.$$arity==
null?self.method.length:self.method.$$arity;proc.$$parameters=self.method.$$parameters;return proc});$def(self,"$inspect",function $$inspect(){var self=this;return"#<"+self.$class()+": "+self.receiver.$class()+"#"+self.name+" (defined in "+self.owner+" in "+self.$source_location().$join(":")+")>"});$alias(self,"[]","call");return $alias(self,"===","call")})("::",null);return function($base,$super){var self=$klass($base,$super,"UnboundMethod");var $proto=self.$$prototype;$proto.method=$proto.owner=
$proto.name=$proto.source=nil;self.$attr_reader("source","owner","name");$def(self,"$initialize",function $$initialize(source,owner,method,name){var self=this;self.source=source;self.owner=owner;self.method=method;return self.name=name});$def(self,"$arity",function $$arity(){var self=this;return self.method.$arity()});$def(self,"$parameters",function $$parameters(){var self=this;return self.method.$$parameters});$def(self,"$source_location",function $$source_location(){var self=this,$ret_or_1=nil;
if($truthy($ret_or_1=self.method.$$source_location))return $ret_or_1;else return["(eval)",0]});$def(self,"$comments",function $$comments(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.method.$$comments))return $ret_or_1;else return[]});$def(self,"$bind",function $$bind(object){var self=this;if(self.owner.$$is_module||Opal.is_a(object,self.owner))return $$$("Method").$new(object,self.owner,self.method,self.name);else $Kernel.$raise($$$("TypeError"),"can't bind singleton method to a different class (expected "+
object+".kind_of?("+self.owner+" to be true)")});$def(self,"$bind_call",function $$bind_call(object,$a){var block=$$bind_call.$$p||nil,$post_args,args,self=this;$$bind_call.$$p=null;$post_args=$slice(arguments,1);args=$post_args;return $send(self.$bind(object),"call",$to_a(args),block.$to_proc())},-2);return $def(self,"$inspect",function $$inspect(){var self=this;return"#<"+self.$class()+": "+self.source+"#"+self.name+" (defined in "+self.owner+" in "+self.$source_location().$join(":")+")>"})}("::",
null)};
Opal.modules["corelib/variables"]=function(Opal){var $gvars=Opal.gvars,$const_set=Opal.const_set,$Object=Opal.Object,$hash2=Opal.hash2,nil=Opal.nil;Opal.add_stubs("new");$gvars["&"]=$gvars["~"]=$gvars["`"]=$gvars["'"]=nil;$gvars.LOADED_FEATURES=$gvars['"']=Opal.loaded_features;$gvars.LOAD_PATH=$gvars[":"]=[];$gvars["/"]="\n";$gvars[","]=nil;$const_set("::","ARGV",[]);$const_set("::","ARGF",$Object.$new());$const_set("::","ENV",$hash2([],{}));$gvars.VERBOSE=false;$gvars.DEBUG=false;return $gvars.SAFE=0};
Opal.modules["corelib/io"]=function(Opal){var $klass=Opal.klass,$const_set=Opal.const_set,$not=Opal.not,$truthy=Opal.truthy,$def=Opal.def,$return_ivar=Opal.return_ivar,$return_val=Opal.return_val,$slice=Opal.slice,$Kernel=Opal.Kernel,$gvars=Opal.gvars,$send=Opal.send,$to_a=Opal.to_a,$rb_plus=Opal.rb_plus,$neqeq=Opal.neqeq,$range=Opal.range,$hash2=Opal.hash2,$eqeq=Opal.eqeq,$to_ary=Opal.to_ary,$rb_gt=Opal.rb_gt,$assign_ivar_val=Opal.assign_ivar_val,$alias=Opal.alias,$a,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("attr_reader,attr_accessor,!,match?,include?,size,write,String,flatten,puts,sysread_noraise,+,!=,[],ord,getc,readchar,raise,gets,==,to_str,length,split,sub,sysread,>,to_a,each_line,enum_for,getbyte,closed_write?,closed_read?,each,eof,new,write_proc=,read_proc=");
(function($base,$super){var self=$klass($base,$super,"IO");var $proto=self.$$prototype;$proto.read_buffer=$proto.closed=nil;$const_set(self,"SEEK_SET",0);$const_set(self,"SEEK_CUR",1);$const_set(self,"SEEK_END",2);$const_set(self,"SEEK_DATA",3);$const_set(self,"SEEK_HOLE",4);$const_set(self,"READABLE",1);$const_set(self,"WRITABLE",4);self.$attr_reader("eof");self.$attr_accessor("read_proc","sync","tty","write_proc");$def(self,"$initialize",function $$initialize(fd,flags){var self=this;if(flags==null)flags=
"r";self.fd=fd;self.flags=flags;self.eof=false;if($truthy(flags["$include?"]("r"))&&$not(flags["$match?"](/[wa+]/)))return self.closed="write";else if($truthy(flags["$match?"](/[wa]/))&&$not(flags["$match?"](/[r+]/)))return self.closed="read";else return nil},-2);$def(self,"$fileno",$return_ivar("fd"));$def(self,"$tty?",function $IO_tty$ques$1(){var self=this;return self.tty==true});$def(self,"$write",function $$write(string){var self=this;self.write_proc(string);return string.$size()});$def(self,
"$flush",$return_val(nil));$def(self,"$<<",function $IO_$lt$lt$2(string){var self=this;self.$write(string);return self});$def(self,"$print",function $$print($a){var $post_args,args,self=this;if($gvars[","]==null)$gvars[","]=nil;$post_args=$slice(arguments);args=$post_args;for(var i=0,ii=args.length;i<ii;i++)args[i]=$Kernel.$String(args[i]);self.$write(args.join($gvars[","]));return nil},-1);$def(self,"$puts",function $$puts($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;
var line;if(args.length===0){self.$write("\n");return nil}else for(var i=0,ii=args.length;i<ii;i++)if(args[i].$$is_array){var ary=args[i].$flatten();if(ary.length>0)$send(self,"puts",$to_a(ary))}else{if(args[i].$$is_string)line=args[i].valueOf();else line=$Kernel.$String(args[i]);if(!line.endsWith("\n"))line+="\n";self.$write(line)}return nil},-1);$def(self,"$getc",function $$getc(){var self=this,$ret_or_1=nil,parts=nil,ret=nil;self.read_buffer=$truthy($ret_or_1=self.read_buffer)?$ret_or_1:"";parts=
"";do{self.read_buffer=$rb_plus(self.read_buffer,parts);if($neqeq(self.read_buffer,"")){ret=self.read_buffer["$[]"](0);self.read_buffer=self.read_buffer["$[]"]($range(1,-1,false));return ret}}while($truthy(parts=self.$sysread_noraise(1)));return nil});$def(self,"$getbyte",function $$getbyte(){var $a,self=this;return $a=self.$getc(),$a===nil||$a==null?nil:$a.$ord()});$def(self,"$readbyte",function $$readbyte(){var self=this;return self.$readchar().$ord()});$def(self,"$readchar",function $$readchar(){var self=
this,$ret_or_1=nil;if($truthy($ret_or_1=self.$getc()))return $ret_or_1;else return $Kernel.$raise($$$("EOFError"),"end of file reached")});$def(self,"$readline",function $$readline($a){var $post_args,args,self=this,$ret_or_1=nil;$post_args=$slice(arguments);args=$post_args;if($truthy($ret_or_1=$send(self,"gets",$to_a(args))))return $ret_or_1;else return $Kernel.$raise($$$("EOFError"),"end of file reached")},-1);$def(self,"$gets",function $$gets(sep,limit,opts){var $a,$b,self=this,orig_sep=nil,$ret_or_1=
nil,seplen=nil,data=nil,ret=nil,orig_buffer=nil;if($gvars["/"]==null)$gvars["/"]=nil;if(sep==null)sep=false;if(limit==null)limit=nil;if(opts==null)opts=$hash2([],{});if($truthy(sep.$$is_number)&&$not(limit))$a=[false,sep,limit],sep=$a[0],limit=$a[1],opts=$a[2],$a;if($truthy(sep.$$is_hash)&&$not(limit)&&$eqeq(opts,$hash2([],{})))$a=[false,nil,sep],sep=$a[0],limit=$a[1],opts=$a[2],$a;else if($truthy(limit.$$is_hash)&&$eqeq(opts,$hash2([],{})))$a=[sep,nil,limit],sep=$a[0],limit=$a[1],opts=$a[2],$a;orig_sep=
sep;if($eqeq(sep,false))sep=$gvars["/"];if($eqeq(sep,""))sep=/\r?\n\r?\n/;sep=$truthy($ret_or_1=sep)?$ret_or_1:"";if(!$eqeq(orig_sep,""))sep=sep.$to_str();seplen=$eqeq(orig_sep,"")?2:sep.$length();if($eqeq(sep," "))sep=/ /;self.read_buffer=$truthy($ret_or_1=self.read_buffer)?$ret_or_1:"";data="";ret=nil;do{self.read_buffer=$rb_plus(self.read_buffer,data);if($neqeq(sep,"")&&$truthy($truthy(sep.$$is_regexp)?self.read_buffer["$match?"](sep):self.read_buffer["$include?"](sep))){orig_buffer=self.read_buffer;
$b=self.read_buffer.$split(sep,2),$a=$to_ary($b),ret=$a[0]==null?nil:$a[0],self.read_buffer=$a[1]==null?nil:$a[1],$b;if($neqeq(ret,orig_buffer))ret=$rb_plus(ret,orig_buffer["$[]"](ret.$length(),seplen));break}}while($truthy(data=self.$sysread_noraise($eqeq(sep,"")?65536:1)));if(!$truthy(ret)){$a=[$truthy($ret_or_1=self.read_buffer)?$ret_or_1:"",""],ret=$a[0],self.read_buffer=$a[1],$a;if($eqeq(ret,""))ret=nil}if($truthy(ret)){if($truthy(limit)){ret=ret["$[]"](Opal.Range.$new(0,limit,true));self.read_buffer=
$rb_plus(ret["$[]"](Opal.Range.$new(limit,-1,false)),self.read_buffer)}if($truthy(opts["$[]"]("chomp")))ret=ret.$sub(/\r?\n$/,"");if($eqeq(orig_sep,""))ret=ret.$sub(/^[\r\n]+/,"")}if($eqeq(orig_sep,false))$gvars._=ret;return ret},-1);$def(self,"$sysread",function $$sysread(integer){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.read_proc(integer)))return $ret_or_1;else{self.eof=true;return $Kernel.$raise($$$("EOFError"),"end of file reached")}});$def(self,"$sysread_noraise",function $$sysread_noraise(integer){var self=
this;try{return self.$sysread(integer)}catch($err){if(Opal.rescue($err,[$$$("EOFError")]))try{return nil}finally{Opal.pop_exception()}else throw $err;}});$def(self,"$readpartial",function $$readpartial(integer){var $a,self=this,$ret_or_1=nil,part=nil,ret=nil;self.read_buffer=$truthy($ret_or_1=self.read_buffer)?$ret_or_1:"";part=self.$sysread(integer);$a=[$rb_plus(self.read_buffer,$truthy($ret_or_1=part)?$ret_or_1:""),""],ret=$a[0],self.read_buffer=$a[1],$a;if($eqeq(ret,""))ret=nil;return ret});$def(self,
"$read",function $$read(integer){var $a,self=this,$ret_or_1=nil,parts=nil,ret=nil;if(integer==null)integer=nil;self.read_buffer=$truthy($ret_or_1=self.read_buffer)?$ret_or_1:"";parts="";ret=nil;do{self.read_buffer=$rb_plus(self.read_buffer,parts);if($truthy(integer)&&$truthy($rb_gt(self.read_buffer.$length(),integer))){$a=[self.read_buffer["$[]"](Opal.Range.$new(0,integer,true)),self.read_buffer["$[]"](Opal.Range.$new(integer,-1,false))],ret=$a[0],self.read_buffer=$a[1],$a;return ret}}while($truthy(parts=
self.$sysread_noraise($truthy($ret_or_1=integer)?$ret_or_1:65536)));$a=[self.read_buffer,""],ret=$a[0],self.read_buffer=$a[1],$a;return ret},-1);$def(self,"$readlines",function $$readlines(separator){var self=this;if($gvars["/"]==null)$gvars["/"]=nil;if(separator==null)separator=$gvars["/"];return self.$each_line(separator).$to_a()},-1);$def(self,"$each",function $$each($a,$b){var block=$$each.$$p||nil,$post_args,sep,args,self=this,s=nil;if($gvars["/"]==null)$gvars["/"]=nil;$$each.$$p=null;$post_args=
$slice(arguments);if($post_args.length>0)sep=$post_args.shift();if(sep==null)sep=$gvars["/"];args=$post_args;if(!(block!==nil))return $send(self,"enum_for",["each",sep].concat($to_a(args)));while($truthy(s=$send(self,"gets",[sep].concat($to_a(args)))))Opal.yield1(block,s);return self},-1);$def(self,"$each_byte",function $$each_byte(){var block=$$each_byte.$$p||nil,self=this,s=nil;$$each_byte.$$p=null;if(!(block!==nil))return self.$enum_for("each_byte");while($truthy(s=self.$getbyte()))Opal.yield1(block,
s);return self});$def(self,"$each_char",function $$each_char(){var block=$$each_char.$$p||nil,self=this,s=nil;$$each_char.$$p=null;if(!(block!==nil))return self.$enum_for("each_char");while($truthy(s=self.$getc()))Opal.yield1(block,s);return self});$def(self,"$close",$assign_ivar_val("closed","both"));$def(self,"$close_read",function $$close_read(){var self=this;if($eqeq(self.closed,"write"))return self.closed="both";else return self.closed="read"});$def(self,"$close_write",function $$close_write(){var self=
this;if($eqeq(self.closed,"read"))return self.closed="both";else return self.closed="write"});$def(self,"$closed?",function $IO_closed$ques$3(){var self=this;return self.closed["$=="]("both")});$def(self,"$closed_read?",function $IO_closed_read$ques$4(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.closed["$=="]("read")))return $ret_or_1;else return self.closed["$=="]("both")});$def(self,"$closed_write?",function $IO_closed_write$ques$5(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.closed["$=="]("write")))return $ret_or_1;
else return self.closed["$=="]("both")});$def(self,"$check_writable",function $$check_writable(){var self=this;if($truthy(self["$closed_write?"]()))return $Kernel.$raise($$$("IOError"),"not opened for writing");else return nil});$def(self,"$check_readable",function $$check_readable(){var self=this;if($truthy(self["$closed_read?"]()))return $Kernel.$raise($$$("IOError"),"not opened for reading");else return nil});$alias(self,"each_line","each");return $alias(self,"eof?","eof")})("::",null);$const_set("::",
"STDIN",$gvars.stdin=$$$("IO").$new(0,"r"));$const_set("::","STDOUT",$gvars.stdout=$$$("IO").$new(1,"w"));$const_set("::","STDERR",$gvars.stderr=$$$("IO").$new(2,"w"));var console=Opal.global.console;$$$("STDOUT")["$write_proc="](typeof process==="object"&&typeof process.stdout==="object"?function(s){process.stdout.write(s)}:function(s){console.log(s)});$$$("STDERR")["$write_proc="](typeof process==="object"&&typeof process.stderr==="object"?function(s){process.stderr.write(s)}:function(s){console.warn(s)});
return $a=[function(s){var p=prompt();if(p!==null)return p+"\n";return nil}],$send($$$("STDIN"),"read_proc=",$a),$a[$a.length-1]};
Opal.modules["opal/regexp_anchors"]=function(Opal){var $module=Opal.module,$const_set=Opal.const_set,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("new");return function($base,$parent_nesting){var self=$module($base,"Opal");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$const_set(self,"REGEXP_START","^");$const_set(self,"REGEXP_END","$");$const_set(self,"FORBIDDEN_STARTING_IDENTIFIER_CHARS","\\u0001-\\u002F\\u003A-\\u0040\\u005B-\\u005E\\u0060\\u007B-\\u007F");$const_set(self,
"FORBIDDEN_ENDING_IDENTIFIER_CHARS","\\u0001-\\u0020\\u0022-\\u002F\\u003A-\\u003E\\u0040\\u005B-\\u005E\\u0060\\u007B-\\u007F");$const_set(self,"INLINE_IDENTIFIER_REGEXP",$$("Regexp").$new("[^"+$$$(self,"FORBIDDEN_STARTING_IDENTIFIER_CHARS")+"]*[^"+$$$(self,"FORBIDDEN_ENDING_IDENTIFIER_CHARS")+"]"));$const_set(self,"FORBIDDEN_CONST_NAME_CHARS","\\u0001-\\u0020\\u0021-\\u002F\\u003B-\\u003F\\u0040\\u005B-\\u005E\\u0060\\u007B-\\u007F");return $const_set(self,"CONST_NAME_REGEXP",$$("Regexp").$new(""+
$$$(self,"REGEXP_START")+"(::)?[A-Z][^"+$$$(self,"FORBIDDEN_CONST_NAME_CHARS")+"]*"+$$$(self,"REGEXP_END")))}($nesting[0],$nesting)};
Opal.modules["opal/mini"]=function(Opal){var $Object=Opal.Object,nil=Opal.nil;Opal.add_stubs("require");$Object.$require("opal/base");$Object.$require("corelib/nil");$Object.$require("corelib/boolean");$Object.$require("corelib/string");$Object.$require("corelib/comparable");$Object.$require("corelib/enumerable");$Object.$require("corelib/enumerator");$Object.$require("corelib/array");$Object.$require("corelib/hash");$Object.$require("corelib/number");$Object.$require("corelib/range");$Object.$require("corelib/proc");
$Object.$require("corelib/method");$Object.$require("corelib/regexp");$Object.$require("corelib/variables");$Object.$require("corelib/io");return $Object.$require("opal/regexp_anchors")};
Opal.modules["corelib/kernel/format"]=function(Opal){var $coerce_to=Opal.coerce_to,$module=Opal.module,$slice=Opal.slice,$truthy=Opal.truthy,$eqeq=Opal.eqeq,$Opal=Opal.Opal,$Kernel=Opal.Kernel,$gvars=Opal.gvars,$def=Opal.def,$alias=Opal.alias,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("respond_to?,[],==,length,coerce_to?,nil?,to_a,raise,to_int,fetch,Integer,Float,to_ary,to_str,inspect,to_s,format");return function($base){var self=$module($base,"Kernel");$def(self,"$format",function $$format(format_string,
$a){var $post_args,args,ary=nil;if($gvars.DEBUG==null)$gvars.DEBUG=nil;$post_args=$slice(arguments,1);args=$post_args;if($eqeq(args.$length(),1)&&$truthy(args["$[]"](0)["$respond_to?"]("to_ary"))){ary=$Opal["$coerce_to?"](args["$[]"](0),$$$("Array"),"to_ary");if(!$truthy(ary["$nil?"]()))args=ary.$to_a()}var result="",begin_slice=0,end_slice,i,len=format_string.length,arg,str,exponent,width,precision,tmp_num,hash_parameter_key,closing_brace_char,base_number,base_prefix,base_neg_zero_regex,base_neg_zero_digit,
next_arg,seq_arg_num=1,pos_arg_num=0,flags,FNONE=0,FSHARP=1,FMINUS=2,FPLUS=4,FZERO=8,FSPACE=16,FWIDTH=32,FPREC=64,FPREC0=128;function CHECK_FOR_FLAGS(){if(flags&FWIDTH)$Kernel.$raise($$$("ArgumentError"),"flag after width");if(flags&FPREC0)$Kernel.$raise($$$("ArgumentError"),"flag after precision")}function CHECK_FOR_WIDTH(){if(flags&FWIDTH)$Kernel.$raise($$$("ArgumentError"),"width given twice");if(flags&FPREC0)$Kernel.$raise($$$("ArgumentError"),"width after precision")}function GET_NTH_ARG(num){if(num>=
args.length)$Kernel.$raise($$$("ArgumentError"),"too few arguments");return args[num]}function GET_NEXT_ARG(){switch(pos_arg_num){case -1:$Kernel.$raise($$$("ArgumentError"),"unnumbered("+seq_arg_num+") mixed with numbered");case -2:$Kernel.$raise($$$("ArgumentError"),"unnumbered("+seq_arg_num+") mixed with named")}pos_arg_num=seq_arg_num++;return GET_NTH_ARG(pos_arg_num-1)}function GET_POS_ARG(num){if(pos_arg_num>0)$Kernel.$raise($$$("ArgumentError"),"numbered("+num+") after unnumbered("+pos_arg_num+
")");if(pos_arg_num===-2)$Kernel.$raise($$$("ArgumentError"),"numbered("+num+") after named");if(num<1)$Kernel.$raise($$$("ArgumentError"),"invalid index - "+num+"$");pos_arg_num=-1;return GET_NTH_ARG(num-1)}function GET_ARG(){return next_arg===undefined?GET_NEXT_ARG():next_arg}function READ_NUM(label){var num,str="";for(;;i++){if(i===len)$Kernel.$raise($$$("ArgumentError"),"malformed format string - %*[0-9]");if(format_string.charCodeAt(i)<48||format_string.charCodeAt(i)>57){i--;num=parseInt(str,
10)||0;if(num>2147483647)$Kernel.$raise($$$("ArgumentError"),""+label+" too big");return num}str+=format_string.charAt(i)}}function READ_NUM_AFTER_ASTER(label){var arg,num=READ_NUM(label);if(format_string.charAt(i+1)==="$"){i++;arg=GET_POS_ARG(num)}else arg=GET_NEXT_ARG();return arg.$to_int()}for(i=format_string.indexOf("%");i!==-1;i=format_string.indexOf("%",i)){str=undefined;flags=FNONE;width=-1;precision=-1;next_arg=undefined;end_slice=i;i++;switch(format_string.charAt(i)){case "%":begin_slice=
i;case "":case "\n":case "\x00":i++;continue}format_sequence:for(;i<len;i++)switch(format_string.charAt(i)){case " ":CHECK_FOR_FLAGS();flags|=FSPACE;continue format_sequence;case "#":CHECK_FOR_FLAGS();flags|=FSHARP;continue format_sequence;case "+":CHECK_FOR_FLAGS();flags|=FPLUS;continue format_sequence;case "-":CHECK_FOR_FLAGS();flags|=FMINUS;continue format_sequence;case "0":CHECK_FOR_FLAGS();flags|=FZERO;continue format_sequence;case "1":case "2":case "3":case "4":case "5":case "6":case "7":case "8":case "9":tmp_num=
READ_NUM("width");if(format_string.charAt(i+1)==="$"){if(i+2===len){str="%";i++;break format_sequence}if(next_arg!==undefined)$Kernel.$raise($$$("ArgumentError"),"value given twice - %"+tmp_num+"$");next_arg=GET_POS_ARG(tmp_num);i++}else{CHECK_FOR_WIDTH();flags|=FWIDTH;width=tmp_num}continue format_sequence;case "<":case "{":closing_brace_char=format_string.charAt(i)==="<"?">":"}";hash_parameter_key="";i++;for(;;i++){if(i===len)$Kernel.$raise($$$("ArgumentError"),"malformed name - unmatched parenthesis");
if(format_string.charAt(i)===closing_brace_char){if(pos_arg_num>0)$Kernel.$raise($$$("ArgumentError"),"named "+hash_parameter_key+" after unnumbered("+pos_arg_num+")");if(pos_arg_num===-1)$Kernel.$raise($$$("ArgumentError"),"named "+hash_parameter_key+" after numbered");pos_arg_num=-2;if(args[0]===undefined||!args[0].$$is_hash)$Kernel.$raise($$$("ArgumentError"),"one hash required");next_arg=args[0].$fetch(hash_parameter_key);if(closing_brace_char===">")continue format_sequence;else{str=next_arg.toString();
if(precision!==-1)str=str.slice(0,precision);if(flags&FMINUS)while(str.length<width)str=str+" ";else while(str.length<width)str=" "+str;break format_sequence}}hash_parameter_key+=format_string.charAt(i)}case "*":i++;CHECK_FOR_WIDTH();flags|=FWIDTH;width=READ_NUM_AFTER_ASTER("width");if(width<0){flags|=FMINUS;width=-width}continue format_sequence;case ".":if(flags&FPREC0)$Kernel.$raise($$$("ArgumentError"),"precision given twice");flags|=FPREC|FPREC0;precision=0;i++;if(format_string.charAt(i)==="*"){i++;
precision=READ_NUM_AFTER_ASTER("precision");if(precision<0)flags&=~FPREC;continue format_sequence}precision=READ_NUM("precision");continue format_sequence;case "d":case "i":case "u":arg=$Kernel.$Integer(GET_ARG());if(arg>=0){str=arg.toString();while(str.length<precision)str="0"+str;if(flags&FMINUS){if(flags&FPLUS||flags&FSPACE)str=(flags&FPLUS?"+":" ")+str;while(str.length<width)str=str+" "}else if(flags&FZERO&&precision===-1){while(str.length<width-(flags&FPLUS||flags&FSPACE?1:0))str="0"+str;if(flags&
FPLUS||flags&FSPACE)str=(flags&FPLUS?"+":" ")+str}else{if(flags&FPLUS||flags&FSPACE)str=(flags&FPLUS?"+":" ")+str;while(str.length<width)str=" "+str}}else{str=(-arg).toString();while(str.length<precision)str="0"+str;if(flags&FMINUS){str="-"+str;while(str.length<width)str=str+" "}else if(flags&FZERO&&precision===-1){while(str.length<width-1)str="0"+str;str="-"+str}else{str="-"+str;while(str.length<width)str=" "+str}}break format_sequence;case "b":case "B":case "o":case "x":case "X":switch(format_string.charAt(i)){case "b":case "B":base_number=
2;base_prefix="0b";base_neg_zero_regex=/^1+/;base_neg_zero_digit="1";break;case "o":base_number=8;base_prefix="0";base_neg_zero_regex=/^3?7+/;base_neg_zero_digit="7";break;case "x":case "X":base_number=16;base_prefix="0x";base_neg_zero_regex=/^f+/;base_neg_zero_digit="f";break}arg=$Kernel.$Integer(GET_ARG());if(arg>=0){str=arg.toString(base_number);while(str.length<precision)str="0"+str;if(flags&FMINUS){if(flags&FPLUS||flags&FSPACE)str=(flags&FPLUS?"+":" ")+str;if(flags&FSHARP&&arg!==0)str=base_prefix+
str;while(str.length<width)str=str+" "}else if(flags&FZERO&&precision===-1){while(str.length<width-(flags&FPLUS||flags&FSPACE?1:0)-(flags&FSHARP&&arg!==0?base_prefix.length:0))str="0"+str;if(flags&FSHARP&&arg!==0)str=base_prefix+str;if(flags&FPLUS||flags&FSPACE)str=(flags&FPLUS?"+":" ")+str}else{if(flags&FSHARP&&arg!==0)str=base_prefix+str;if(flags&FPLUS||flags&FSPACE)str=(flags&FPLUS?"+":" ")+str;while(str.length<width)str=" "+str}}else if(flags&FPLUS||flags&FSPACE){str=(-arg).toString(base_number);
while(str.length<precision)str="0"+str;if(flags&FMINUS){if(flags&FSHARP)str=base_prefix+str;str="-"+str;while(str.length<width)str=str+" "}else if(flags&FZERO&&precision===-1){while(str.length<width-1-(flags&FSHARP?2:0))str="0"+str;if(flags&FSHARP)str=base_prefix+str;str="-"+str}else{if(flags&FSHARP)str=base_prefix+str;str="-"+str;while(str.length<width)str=" "+str}}else{str=(arg>>>0).toString(base_number).replace(base_neg_zero_regex,base_neg_zero_digit);while(str.length<precision-2)str=base_neg_zero_digit+
str;if(flags&FMINUS){str=".."+str;if(flags&FSHARP)str=base_prefix+str;while(str.length<width)str=str+" "}else if(flags&FZERO&&precision===-1){while(str.length<width-2-(flags&FSHARP?base_prefix.length:0))str=base_neg_zero_digit+str;str=".."+str;if(flags&FSHARP)str=base_prefix+str}else{str=".."+str;if(flags&FSHARP)str=base_prefix+str;while(str.length<width)str=" "+str}}if(format_string.charAt(i)===format_string.charAt(i).toUpperCase())str=str.toUpperCase();break format_sequence;case "f":case "e":case "E":case "g":case "G":arg=
$Kernel.$Float(GET_ARG());if(arg>=0||isNaN(arg)){if(arg===Infinity)str="Inf";else switch(format_string.charAt(i)){case "f":str=arg.toFixed(precision===-1?6:precision);break;case "e":case "E":str=arg.toExponential(precision===-1?6:precision);break;case "g":case "G":str=arg.toExponential();exponent=parseInt(str.split("e")[1],10);if(!(exponent<-4||exponent>=(precision===-1?6:precision)))str=arg.toPrecision(precision===-1?flags&FSHARP?6:undefined:precision);break}if(flags&FMINUS){if(flags&FPLUS||flags&
FSPACE)str=(flags&FPLUS?"+":" ")+str;while(str.length<width)str=str+" "}else if(flags&FZERO&&arg!==Infinity&&!isNaN(arg)){while(str.length<width-(flags&FPLUS||flags&FSPACE?1:0))str="0"+str;if(flags&FPLUS||flags&FSPACE)str=(flags&FPLUS?"+":" ")+str}else{if(flags&FPLUS||flags&FSPACE)str=(flags&FPLUS?"+":" ")+str;while(str.length<width)str=" "+str}}else{if(arg===-Infinity)str="Inf";else switch(format_string.charAt(i)){case "f":str=(-arg).toFixed(precision===-1?6:precision);break;case "e":case "E":str=
(-arg).toExponential(precision===-1?6:precision);break;case "g":case "G":str=(-arg).toExponential();exponent=parseInt(str.split("e")[1],10);if(!(exponent<-4||exponent>=(precision===-1?6:precision)))str=(-arg).toPrecision(precision===-1?flags&FSHARP?6:undefined:precision);break}if(flags&FMINUS){str="-"+str;while(str.length<width)str=str+" "}else if(flags&FZERO&&arg!==-Infinity){while(str.length<width-1)str="0"+str;str="-"+str}else{str="-"+str;while(str.length<width)str=" "+str}}if(format_string.charAt(i)===
format_string.charAt(i).toUpperCase()&&arg!==Infinity&&arg!==-Infinity&&!isNaN(arg))str=str.toUpperCase();str=str.replace(/([eE][-+]?)([0-9])$/,"$10$2");break format_sequence;case "a":case "A":$Kernel.$raise($$$("NotImplementedError"),"`A` and `a` format field types are not implemented in Opal yet");case "c":arg=GET_ARG();if(arg["$respond_to?"]("to_ary"))arg=arg.$to_ary()[0];if(arg["$respond_to?"]("to_str"))str=arg.$to_str();else str=String.fromCharCode($coerce_to(arg,$$$("Integer"),"to_int"));if(str.length!==
1)$Kernel.$raise($$$("ArgumentError"),"%c requires a character");if(flags&FMINUS)while(str.length<width)str=str+" ";else while(str.length<width)str=" "+str;break format_sequence;case "p":str=GET_ARG().$inspect();if(precision!==-1)str=str.slice(0,precision);if(flags&FMINUS)while(str.length<width)str=str+" ";else while(str.length<width)str=" "+str;break format_sequence;case "s":str=GET_ARG().$to_s();if(precision!==-1)str=str.slice(0,precision);if(flags&FMINUS)while(str.length<width)str=str+" ";else while(str.length<
width)str=" "+str;break format_sequence;default:$Kernel.$raise($$$("ArgumentError"),"malformed format string - %"+format_string.charAt(i))}if(str===undefined)$Kernel.$raise($$$("ArgumentError"),"malformed format string - %");result+=format_string.slice(begin_slice,end_slice)+str;begin_slice=i+1}if($gvars.DEBUG&&pos_arg_num>=0&&seq_arg_num<args.length)$Kernel.$raise($$$("ArgumentError"),"too many arguments for format string");return result+format_string.slice(begin_slice)},-2);return $alias(self,"sprintf",
"format")}("::")};
Opal.modules["corelib/string/encoding"]=function(Opal){var $klass=Opal.klass,$hash2=Opal.hash2,$rb_plus=Opal.rb_plus,$truthy=Opal.truthy,$send=Opal.send,$defs=Opal.defs,$eqeq=Opal.eqeq,$def=Opal.def,$return_ivar=Opal.return_ivar,$return_val=Opal.return_val,$slice=Opal.slice,$Kernel=Opal.Kernel,$Opal=Opal.Opal,$rb_lt=Opal.rb_lt,$a,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,+,[],clone,initialize,new,instance_eval,to_proc,each,const_set,tr,==,default_external,attr_accessor,singleton_class,attr_reader,raise,register,length,bytes,force_encoding,dup,bytesize,enum_for,each_byte,to_a,each_char,each_codepoint,coerce_to!,find,<,default_external=");self.$require("corelib/string");
(function($base,$super){var self=$klass($base,$super,"Encoding");var $proto=self.$$prototype;$proto.name=$proto.dummy=nil;$defs(self,"$register",function $$register(name,options){var block=$$register.$$p||nil,self=this,names=nil,$ret_or_1=nil,ascii=nil,dummy=nil,encoding=nil,register=nil;$$register.$$p=null;if(options==null)options=$hash2([],{});names=$rb_plus([name],$truthy($ret_or_1=options["$[]"]("aliases"))?$ret_or_1:[]);ascii=$truthy($ret_or_1=options["$[]"]("ascii"))&&$ret_or_1;dummy=$truthy($ret_or_1=
options["$[]"]("dummy"))&&$ret_or_1;if($truthy(options["$[]"]("inherits"))){encoding=options["$[]"]("inherits").$clone();encoding.$initialize(name,names,ascii,dummy)}else encoding=self.$new(name,names,ascii,dummy);if(block!==nil)$send(encoding,"instance_eval",[],block.$to_proc());register=Opal.encodings;return $send(names,"each",[],function $$1(encoding_name){var self=$$1.$$s==null?this:$$1.$$s;if(encoding_name==null)encoding_name=nil;self.$const_set(encoding_name.$tr("-","_"),encoding);return register[encoding_name]=
encoding},{$$s:self})},-2);$defs(self,"$find",function $$find(name){var self=this;if($eqeq(name,"default_external"))return self.$default_external();return Opal.find_encoding(name)});self.$singleton_class().$attr_accessor("default_external");self.$attr_reader("name","names");$def(self,"$initialize",function $$initialize(name,names,ascii,dummy){var self=this;self.name=name;self.names=names;self.ascii=ascii;return self.dummy=dummy});$def(self,"$ascii_compatible?",$return_ivar("ascii"));$def(self,"$dummy?",
$return_ivar("dummy"));$def(self,"$binary?",$return_val(false));$def(self,"$to_s",$return_ivar("name"));$def(self,"$inspect",function $$inspect(){var self=this;return"#<Encoding:"+self.name+($truthy(self.dummy)?" (dummy)":nil)+">"});$def(self,"$charsize",function $$charsize(string){var len=0;for(var i=0,length=string.length;i<length;i++){var charcode=string.charCodeAt(i);if(!(charcode>=55296&&charcode<=56319))len++}return len});$def(self,"$each_char",function $$each_char(string){var block=$$each_char.$$p||
nil;$$each_char.$$p=null;var low_surrogate="";for(var i=0,length=string.length;i<length;i++){var charcode=string.charCodeAt(i);var chr=string.charAt(i);if(charcode>=56320&&charcode<=57343){low_surrogate=chr;continue}else if(charcode>=55296&&charcode<=56319)chr=low_surrogate+chr;if(string.encoding.name!="UTF-8"){chr=new String(chr);chr.encoding=string.encoding}Opal.yield1(block,chr)}});$def(self,"$each_byte",function $$each_byte($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;
return $Kernel.$raise($$$("NotImplementedError"))},-1);$def(self,"$bytesize",function $$bytesize($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return $Kernel.$raise($$$("NotImplementedError"))},-1);$klass("::",$$$("StandardError"),"EncodingError");return $klass("::",$$$("EncodingError"),"CompatibilityError"),nil})("::",null);$send($$$("Encoding"),"register",["UTF-8",$hash2(["aliases","ascii"],{"aliases":["CP65001"],"ascii":true})],function $$2(){var self=$$2.$$s==
null?this:$$2.$$s;$def(self,"$each_byte",function $$each_byte(string){var block=$$each_byte.$$p||nil;$$each_byte.$$p=null;var units=Infinity;var codePoint;var length=string.length;var leadSurrogate=null;for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);if(codePoint>55295&&codePoint<57344){if(!leadSurrogate){if(codePoint>56319){if((units-=3)>-1){Opal.yield1(block,239);Opal.yield1(block,191);Opal.yield1(block,189)}continue}else if(i+1===length){if((units-=3)>-1){Opal.yield1(block,239);Opal.yield1(block,
191);Opal.yield1(block,189)}continue}leadSurrogate=codePoint;continue}if(codePoint<56320){if((units-=3)>-1){Opal.yield1(block,239);Opal.yield1(block,191);Opal.yield1(block,189)}leadSurrogate=codePoint;continue}codePoint=(leadSurrogate-55296<<10|codePoint-56320)+65536}else if(leadSurrogate)if((units-=3)>-1){Opal.yield1(block,239);Opal.yield1(block,191);Opal.yield1(block,189)}leadSurrogate=null;if(codePoint<128){if((units-=1)<0)break;Opal.yield1(block,codePoint)}else if(codePoint<2048){if((units-=2)<
0)break;Opal.yield1(block,codePoint>>6|192);Opal.yield1(block,codePoint&63|128)}else if(codePoint<65536){if((units-=3)<0)break;Opal.yield1(block,codePoint>>12|224);Opal.yield1(block,codePoint>>6&63|128);Opal.yield1(block,codePoint&63|128)}else if(codePoint<1114112){if((units-=4)<0)break;Opal.yield1(block,codePoint>>18|240);Opal.yield1(block,codePoint>>12&63|128);Opal.yield1(block,codePoint>>6&63|128);Opal.yield1(block,codePoint&63|128)}else;}});return $def(self,"$bytesize",function $$bytesize(string){return string.$bytes().$length()})},
{$$s:self});$send($$$("Encoding"),"register",["UTF-16LE"],function $$3(){var self=$$3.$$s==null?this:$$3.$$s;$def(self,"$each_byte",function $$each_byte(string){var block=$$each_byte.$$p||nil;$$each_byte.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);Opal.yield1(block,code&255);Opal.yield1(block,code>>8)}});return $def(self,"$bytesize",function $$bytesize(string){return string.length*2})},{$$s:self});$send($$$("Encoding"),"register",["UTF-16BE",$hash2(["inherits"],
{"inherits":$$$($$$("Encoding"),"UTF_16LE")})],function $$4(){var self=$$4.$$s==null?this:$$4.$$s;return $def(self,"$each_byte",function $$each_byte(string){var block=$$each_byte.$$p||nil;$$each_byte.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);Opal.yield1(block,code>>8);Opal.yield1(block,code&255)}})},{$$s:self});$send($$$("Encoding"),"register",["UTF-32LE"],function $$5(){var self=$$5.$$s==null?this:$$5.$$s;$def(self,"$each_byte",function $$each_byte(string){var block=
$$each_byte.$$p||nil;$$each_byte.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);Opal.yield1(block,code&255);Opal.yield1(block,code>>8);Opal.yield1(block,0);Opal.yield1(block,0)}});return $def(self,"$bytesize",function $$bytesize(string){return string.length*4})},{$$s:self});$send($$$("Encoding"),"register",["UTF-32BE",$hash2(["inherits"],{"inherits":$$$($$$("Encoding"),"UTF_32LE")})],function $$6(){var self=$$6.$$s==null?this:$$6.$$s;return $def(self,"$each_byte",
function $$each_byte(string){var block=$$each_byte.$$p||nil;$$each_byte.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);Opal.yield1(block,0);Opal.yield1(block,0);Opal.yield1(block,code>>8);Opal.yield1(block,code&255)}})},{$$s:self});$send($$$("Encoding"),"register",["ASCII-8BIT",$hash2(["aliases","ascii"],{"aliases":["BINARY"],"ascii":true})],function $$7(){var self=$$7.$$s==null?this:$$7.$$s;$def(self,"$each_char",function $$each_char(string){var block=$$each_char.$$p||
nil;$$each_char.$$p=null;for(var i=0,length=string.length;i<length;i++){var chr=new String(string.charAt(i));chr.encoding=string.encoding;Opal.yield1(block,chr)}});$def(self,"$charsize",function $$charsize(string){return string.length});$def(self,"$each_byte",function $$each_byte(string){var block=$$each_byte.$$p||nil;$$each_byte.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);Opal.yield1(block,code&255)}});$def(self,"$bytesize",function $$bytesize(string){return string.length});
return $def(self,"$binary?",$return_val(true))},{$$s:self});$$$("Encoding").$register("ISO-8859-1",$hash2(["aliases","ascii","inherits"],{"aliases":["ISO8859-1"],"ascii":true,"inherits":$$$($$$("Encoding"),"ASCII_8BIT")}));$$$("Encoding").$register("US-ASCII",$hash2(["aliases","ascii","inherits"],{"aliases":["ASCII"],"ascii":true,"inherits":$$$($$$("Encoding"),"ASCII_8BIT")}));(function($base,$super){var self=$klass($base,$super,"String");var $proto=self.$$prototype;$proto.internal_encoding=$proto.bytes=
$proto.encoding=nil;self.$attr_reader("encoding");self.$attr_reader("internal_encoding");Opal.prop(String.prototype,"bytes",nil);Opal.prop(String.prototype,"encoding",$$$($$$("Encoding"),"UTF_8"));Opal.prop(String.prototype,"internal_encoding",$$$($$$("Encoding"),"UTF_8"));$def(self,"$b",function $$b(){var self=this;return self.$dup().$force_encoding("binary")});$def(self,"$bytesize",function $$bytesize(){var self=this;return self.internal_encoding.$bytesize(self)});$def(self,"$each_byte",function $$each_byte(){var block=
$$each_byte.$$p||nil,self=this;$$each_byte.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["each_byte"],function $$8(){var self=$$8.$$s==null?this:$$8.$$s;return self.$bytesize()},{$$s:self});$send(self.internal_encoding,"each_byte",[self],block.$to_proc());return self});$def(self,"$bytes",function $$bytes(){var self=this,$ret_or_1=nil;if(typeof self==="string")return(new String(self)).$each_byte().$to_a();self.bytes=$truthy($ret_or_1=self.bytes)?$ret_or_1:self.$each_byte().$to_a();return self.bytes.$dup()});
$def(self,"$each_char",function $$each_char(){var block=$$each_char.$$p||nil,self=this;$$each_char.$$p=null;if(!(block!==nil))return $send(self,"enum_for",["each_char"],function $$9(){var self=$$9.$$s==null?this:$$9.$$s;return self.$length()},{$$s:self});$send(self.encoding,"each_char",[self],block.$to_proc());return self});$def(self,"$chars",function $$chars(){var block=$$chars.$$p||nil,self=this;$$chars.$$p=null;if(!$truthy(block))return self.$each_char().$to_a();return $send(self,"each_char",[],
block.$to_proc())});$def(self,"$each_codepoint",function $$each_codepoint(){var block=$$each_codepoint.$$p||nil,self=this;$$each_codepoint.$$p=null;if(!(block!==nil))return self.$enum_for("each_codepoint");for(var i=0,length=self.length;i<length;i++)Opal.yield1(block,self.codePointAt(i));return self});$def(self,"$codepoints",function $$codepoints(){var block=$$codepoints.$$p||nil,self=this;$$codepoints.$$p=null;if(block!==nil)return $send(self,"each_codepoint",[],block.$to_proc());return self.$each_codepoint().$to_a()});
$def(self,"$encode",function $$encode(encoding){var self=this;return Opal.enc(self,encoding)});$def(self,"$force_encoding",function $$force_encoding(encoding){var self=this;var str=self;if(encoding===str.encoding)return str;encoding=$Opal["$coerce_to!"](encoding,$$$("String"),"to_s");encoding=$$$("Encoding").$find(encoding);if(encoding===str.encoding)return str;str=Opal.set_encoding(str,encoding);return str});$def(self,"$getbyte",function $$getbyte(idx){var self=this,string_bytes=nil;string_bytes=
self.$bytes();idx=$Opal["$coerce_to!"](idx,$$$("Integer"),"to_int");if($truthy($rb_lt(string_bytes.$length(),idx)))return nil;return string_bytes["$[]"](idx)});$def(self,"$initialize_copy",function $$initialize_copy(other){return"\n"+"      self.encoding = other.encoding;\n"+"      self.internal_encoding = other.internal_encoding;\n"+"    "});return $def(self,"$valid_encoding?",$return_val(true))})("::",null);return $a=[$$$($$("Encoding"),"UTF_8")],$send($$$("Encoding"),"default_external=",$a),$a[$a.length-
1]};
Opal.modules["corelib/math"]=function(Opal){var $type_error=Opal.type_error,$module=Opal.module,$const_set=Opal.const_set,$Class=Opal.Class,$slice=Opal.slice,$Kernel=Opal.Kernel,$defs=Opal.defs,$truthy=Opal.truthy,$send=Opal.send,$def=Opal.def,$rb_minus=Opal.rb_minus,$eqeqeq=Opal.eqeqeq,$rb_divide=Opal.rb_divide,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("new,raise,Float,Integer,module_function,each,define_method,checked,float!,===,gamma,-,integer!,/,infinite?");return function($base,$parent_nesting){var self=
$module($base,"Math");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$const_set(self,"E",Math.E);$const_set(self,"PI",Math.PI);$const_set(self,"DomainError",$Class.$new($$$("StandardError")));$defs(self,"$checked",function $$checked(method,$a){var $post_args,args;$post_args=$slice(arguments,1);args=$post_args;if(isNaN(args[0])||args.length==2&&isNaN(args[1]))return NaN;var result=Math[method].apply(null,args);if(isNaN(result))$Kernel.$raise($$("DomainError"),'Numerical argument is out of domain - "'+
method+'"');return result},-2);$defs(self,"$float!",function $Math_float$excl$1(value){try{return $Kernel.$Float(value)}catch($err){if(Opal.rescue($err,[$$$("ArgumentError")]))try{return $Kernel.$raise($type_error(value,$$$("Float")))}finally{Opal.pop_exception()}else throw $err;}});$defs(self,"$integer!",function $Math_integer$excl$2(value){try{return $Kernel.$Integer(value)}catch($err){if(Opal.rescue($err,[$$$("ArgumentError")]))try{return $Kernel.$raise($type_error(value,$$$("Integer")))}finally{Opal.pop_exception()}else throw $err;
}});self.$module_function();if(!$truthy(typeof Math.erf!=="undefined"))Opal.prop(Math,"erf",function(x){var A1=.254829592,A2=-.284496736,A3=1.421413741,A4=-1.453152027,A5=1.061405429,P=.3275911;var sign=1;if(x<0)sign=-1;x=Math.abs(x);var t=1/(1+P*x);var y=1-((((A5*t+A4)*t+A3)*t+A2)*t+A1)*t*Math.exp(-x*x);return sign*y});if(!$truthy(typeof Math.erfc!=="undefined"))Opal.prop(Math,"erfc",function(x){var z=Math.abs(x),t=1/(.5*z+1);var A1=t*.17087277+-.82215223,A2=t*A1+1.48851587,A3=t*A2+-1.13520398,A4=
t*A3+.27886807,A5=t*A4+-.18628806,A6=t*A5+.09678418,A7=t*A6+.37409196,A8=t*A7+1.00002368,A9=t*A8,A10=-z*z-1.26551223+A9;var a=t*Math.exp(A10);if(x<0)return 2-a;else return a});$send(["acos","acosh","asin","asinh","atan","atanh","cbrt","cos","cosh","erf","erfc","exp","sin","sinh","sqrt","tanh"],"each",[],function $Math$3(method){var self=$Math$3.$$s==null?this:$Math$3.$$s;if(method==null)method=nil;return $send(self,"define_method",[method],function $$4(x){if(x==null)x=nil;return $$$("Math").$checked(method,
$$$("Math")["$float!"](x))})},{$$s:self});$def(self,"$atan2",function $$atan2(y,x){return $$$("Math").$checked("atan2",$$$("Math")["$float!"](y),$$$("Math")["$float!"](x))});$def(self,"$hypot",function $$hypot(x,y){return $$$("Math").$checked("hypot",$$$("Math")["$float!"](x),$$$("Math")["$float!"](y))});$def(self,"$frexp",function $$frexp(x){x=$$("Math")["$float!"](x);if(isNaN(x))return[NaN,0];var ex=Math.floor(Math.log(Math.abs(x))/Math.log(2))+1,frac=x/Math.pow(2,ex);return[frac,ex]});$def(self,
"$gamma",function $$gamma(n){n=$$("Math")["$float!"](n);var i,t,x,value,result,twoN,threeN,fourN,fiveN;var G=4.7421875;var P=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3.399464998481189E-5,4.652362892704858E-5,-9.837447530487956E-5,1.580887032249125E-4,-2.1026444172410488E-4,2.1743961811521265E-4,-1.643181065367639E-4,8.441822398385275E-5,-2.6190838401581408E-5,3.6899182659531625E-6];if(isNaN(n))return NaN;if(n===0&&1/n<0)return-Infinity;if(n===-1||
n===-Infinity)$Kernel.$raise($$("DomainError"),'Numerical argument is out of domain - "gamma"');if($$("Integer")["$==="](n)){if(n<=0)return isFinite(n)?Infinity:NaN;if(n>171)return Infinity;value=n-2;result=n-1;while(value>1){result*=value;value--}if(result==0)result=1;return result}if(n<.5)return Math.PI/(Math.sin(Math.PI*n)*$$$("Math").$gamma($rb_minus(1,n)));if(n>=171.35)return Infinity;if(n>85){twoN=n*n;threeN=twoN*n;fourN=threeN*n;fiveN=fourN*n;return Math.sqrt(2*Math.PI/n)*Math.pow(n/Math.E,
n)*(1+1/(12*n)+1/(288*twoN)-139/(51840*threeN)-571/(2488320*fourN)+163879/(209018880*fiveN)+5246819/(75246796800*fiveN*n))}n-=1;x=P[0];for(i=1;i<P.length;++i)x+=P[i]/(n+i);t=n+G+.5;return Math.sqrt(2*Math.PI)*Math.pow(t,n+.5)*Math.exp(-t)*x});$def(self,"$ldexp",function $$ldexp(mantissa,exponent){mantissa=$$("Math")["$float!"](mantissa);exponent=$$("Math")["$integer!"](exponent);if(isNaN(exponent))$Kernel.$raise($$$("RangeError"),"float NaN out of range of integer");return mantissa*Math.pow(2,exponent)});
$def(self,"$lgamma",function $$lgamma(n){if(n==-1)return[Infinity,1];else return[Math.log(Math.abs($$$("Math").$gamma(n))),$$$("Math").$gamma(n)<0?-1:1]});$def(self,"$log",function $$log(x,base){if($eqeqeq($$$("String"),x))$Kernel.$raise($type_error(x,$$$("Float")));if($truthy(base==null))return $$$("Math").$checked("log",$$$("Math")["$float!"](x));else{if($eqeqeq($$$("String"),base))$Kernel.$raise($type_error(base,$$$("Float")));return $rb_divide($$$("Math").$checked("log",$$$("Math")["$float!"](x)),
$$$("Math").$checked("log",$$$("Math")["$float!"](base)))}},-2);$def(self,"$log10",function $$log10(x){if($eqeqeq($$$("String"),x))$Kernel.$raise($type_error(x,$$$("Float")));return $$$("Math").$checked("log10",$$$("Math")["$float!"](x))});$def(self,"$log2",function $$log2(x){if($eqeqeq($$$("String"),x))$Kernel.$raise($type_error(x,$$$("Float")));return $$$("Math").$checked("log2",$$$("Math")["$float!"](x))});return $def(self,"$tan",function $$tan(x){x=$$$("Math")["$float!"](x);if($truthy(x["$infinite?"]()))return $$$($$$("Float"),
"NAN");return $$$("Math").$checked("tan",$$$("Math")["$float!"](x))})}("::",$nesting)};
Opal.modules["corelib/complex/base"]=function(Opal){var $module=Opal.module,$truthy=Opal.truthy,$def=Opal.def,$klass=Opal.klass,$nesting=[],nil=Opal.nil;Opal.add_stubs("new,from_string");(function($base,$parent_nesting){var self=$module($base,"Kernel");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$Complex",function $$Complex(real,imag){if(imag==null)imag=nil;if($truthy(imag))return $$("Complex").$new(real,imag);else return $$("Complex").$new(real,0)},-2)})("::",
$nesting);return function($base,$super,$parent_nesting){var self=$klass($base,$super,"String");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$to_c",function $$to_c(){var self=this;return $$("Complex").$from_string(self)})}("::",null,$nesting)};
Opal.modules["corelib/complex"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$eqeqeq=Opal.eqeqeq,$Kernel=Opal.Kernel,$defs=Opal.defs,$rb_times=Opal.rb_times,$def=Opal.def,$rb_plus=Opal.rb_plus,$rb_minus=Opal.rb_minus,$rb_divide=Opal.rb_divide,$eqeq=Opal.eqeq,$to_ary=Opal.to_ary,$rb_gt=Opal.rb_gt,$neqeq=Opal.neqeq,$return_val=Opal.return_val,$const_set=Opal.const_set,$alias=Opal.alias,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,real?,===,raise,new,*,cos,sin,attr_reader,freeze,class,==,real,imag,Complex,-@,+,__coerced__,-,nan?,/,conj,abs2,quo,polar,exp,log,>,!=,divmod,**,hypot,atan2,lcm,denominator,finite?,infinite?,numerator,abs,arg,rationalize,to_f,to_i,to_r,inspect,zero?,positive?,Rational,rect,angle");
self.$require("corelib/numeric");self.$require("corelib/complex/base");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Complex");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.real=$proto.imag=nil;$defs(self,"$rect",function $$rect(real,imag){var self=this;if(imag==null)imag=0;if(!($eqeqeq($$$("Numeric"),real)&&$truthy(real["$real?"]())&&$eqeqeq($$$("Numeric"),imag)&&$truthy(imag["$real?"]())))$Kernel.$raise($$$("TypeError"),
"not a real");return self.$new(real,imag)},-2);$defs(self,"$polar",function $$polar(r,theta){var self=this;if(theta==null)theta=0;if(!($eqeqeq($$$("Numeric"),r)&&$truthy(r["$real?"]())&&$eqeqeq($$$("Numeric"),theta)&&$truthy(theta["$real?"]())))$Kernel.$raise($$$("TypeError"),"not a real");return self.$new($rb_times(r,$$$("Math").$cos(theta)),$rb_times(r,$$$("Math").$sin(theta)))},-2);self.$attr_reader("real","imag");$def(self,"$initialize",function $$initialize(real,imag){var self=this;if(imag==
null)imag=0;self.real=real;self.imag=imag;return self.$freeze()},-2);$def(self,"$coerce",function $$coerce(other){var self=this;if($eqeqeq($$$("Complex"),other))return[other,self];else if($eqeqeq($$$("Numeric"),other)&&$truthy(other["$real?"]()))return[$$$("Complex").$new(other,0),self];else return $Kernel.$raise($$$("TypeError"),""+other.$class()+" can't be coerced into Complex")});$def(self,"$==",function $Complex_$eq_eq$1(other){var self=this,$ret_or_1=nil;if($eqeqeq($$$("Complex"),other))if($truthy($ret_or_1=
self.real["$=="](other.$real())))return self.imag["$=="](other.$imag());else return $ret_or_1;else if($eqeqeq($$$("Numeric"),other)&&$truthy(other["$real?"]()))if($truthy($ret_or_1=self.real["$=="](other)))return self.imag["$=="](0);else return $ret_or_1;else return other["$=="](self)});$def(self,"$-@",function $Complex_$minus$$2(){var self=this;return $Kernel.$Complex(self.real["$-@"](),self.imag["$-@"]())});$def(self,"$+",function $Complex_$plus$3(other){var self=this;if($eqeqeq($$$("Complex"),
other))return $Kernel.$Complex($rb_plus(self.real,other.$real()),$rb_plus(self.imag,other.$imag()));else if($eqeqeq($$$("Numeric"),other)&&$truthy(other["$real?"]()))return $Kernel.$Complex($rb_plus(self.real,other),self.imag);else return self.$__coerced__("+",other)});$def(self,"$-",function $Complex_$minus$4(other){var self=this;if($eqeqeq($$$("Complex"),other))return $Kernel.$Complex($rb_minus(self.real,other.$real()),$rb_minus(self.imag,other.$imag()));else if($eqeqeq($$$("Numeric"),other)&&$truthy(other["$real?"]()))return $Kernel.$Complex($rb_minus(self.real,
other),self.imag);else return self.$__coerced__("-",other)});$def(self,"$*",function $Complex_$$5(other){var self=this;if($eqeqeq($$$("Complex"),other))return $Kernel.$Complex($rb_minus($rb_times(self.real,other.$real()),$rb_times(self.imag,other.$imag())),$rb_plus($rb_times(self.real,other.$imag()),$rb_times(self.imag,other.$real())));else if($eqeqeq($$$("Numeric"),other)&&$truthy(other["$real?"]()))return $Kernel.$Complex($rb_times(self.real,other),$rb_times(self.imag,other));else return self.$__coerced__("*",
other)});$def(self,"$/",function $Complex_$slash$6(other){var self=this;if($eqeqeq($$$("Complex"),other))if($eqeqeq($$$("Number"),self.real)&&$truthy(self.real["$nan?"]())||$eqeqeq($$$("Number"),self.imag)&&$truthy(self.imag["$nan?"]())||$eqeqeq($$$("Number"),other.$real())&&$truthy(other.$real()["$nan?"]())||$eqeqeq($$$("Number"),other.$imag())&&$truthy(other.$imag()["$nan?"]()))return $$$("Complex").$new($$$($$$("Float"),"NAN"),$$$($$$("Float"),"NAN"));else return $rb_divide($rb_times(self,other.$conj()),
other.$abs2());else if($eqeqeq($$$("Numeric"),other)&&$truthy(other["$real?"]()))return $Kernel.$Complex(self.real.$quo(other),self.imag.$quo(other));else return self.$__coerced__("/",other)});$def(self,"$**",function $Complex_$$$7(other){var $a,$b,self=this,r=nil,theta=nil,ore=nil,oim=nil,nr=nil,ntheta=nil,x=nil,z=nil,n=nil,div=nil,mod=nil;if($eqeq(other,0))return $$$("Complex").$new(1,0);if($eqeqeq($$$("Complex"),other)){$b=self.$polar(),$a=$to_ary($b),r=$a[0]==null?nil:$a[0],theta=$a[1]==null?
nil:$a[1],$b;ore=other.$real();oim=other.$imag();nr=$$$("Math").$exp($rb_minus($rb_times(ore,$$$("Math").$log(r)),$rb_times(oim,theta)));ntheta=$rb_plus($rb_times(theta,ore),$rb_times(oim,$$$("Math").$log(r)));return $$$("Complex").$polar(nr,ntheta)}else if($eqeqeq($$$("Integer"),other))if($truthy($rb_gt(other,0))){x=self;z=x;n=$rb_minus(other,1);while($neqeq(n,0)){$b=n.$divmod(2),$a=$to_ary($b),div=$a[0]==null?nil:$a[0],mod=$a[1]==null?nil:$a[1],$b;while($eqeq(mod,0)){x=$Kernel.$Complex($rb_minus($rb_times(x.$real(),
x.$real()),$rb_times(x.$imag(),x.$imag())),$rb_times($rb_times(2,x.$real()),x.$imag()));n=div;$b=n.$divmod(2),$a=$to_ary($b),div=$a[0]==null?nil:$a[0],mod=$a[1]==null?nil:$a[1],$b}z=$rb_times(z,x);n=$rb_minus(n,1)}return z}else return $rb_divide($$$("Rational").$new(1,1),self)["$**"](other["$-@"]());else if($eqeqeq($$$("Float"),other)||$eqeqeq($$$("Rational"),other)){$b=self.$polar(),$a=$to_ary($b),r=$a[0]==null?nil:$a[0],theta=$a[1]==null?nil:$a[1],$b;return $$$("Complex").$polar(r["$**"](other),
$rb_times(theta,other))}else return self.$__coerced__("**",other)});$def(self,"$abs",function $$abs(){var self=this;return $$$("Math").$hypot(self.real,self.imag)});$def(self,"$abs2",function $$abs2(){var self=this;return $rb_plus($rb_times(self.real,self.real),$rb_times(self.imag,self.imag))});$def(self,"$angle",function $$angle(){var self=this;return $$$("Math").$atan2(self.imag,self.real)});$def(self,"$conj",function $$conj(){var self=this;return $Kernel.$Complex(self.real,self.imag["$-@"]())});
$def(self,"$denominator",function $$denominator(){var self=this;return self.real.$denominator().$lcm(self.imag.$denominator())});$def(self,"$eql?",function $Complex_eql$ques$8(other){var self=this,$ret_or_1=nil,$ret_or_2=nil;if($truthy($ret_or_1=$truthy($ret_or_2=$$("Complex")["$==="](other))?self.real.$class()["$=="](self.imag.$class()):$ret_or_2))return self["$=="](other);else return $ret_or_1});$def(self,"$fdiv",function $$fdiv(other){var self=this;if(!$eqeqeq($$$("Numeric"),other))$Kernel.$raise($$$("TypeError"),
""+other.$class()+" can't be coerced into Complex");return $rb_divide(self,other)});$def(self,"$finite?",function $Complex_finite$ques$9(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.real["$finite?"]()))return self.imag["$finite?"]();else return $ret_or_1});$def(self,"$hash",function $$hash(){var self=this;return"Complex:"+self.real+":"+self.imag});$def(self,"$infinite?",function $Complex_infinite$ques$10(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.real["$infinite?"]()))return $ret_or_1;
else return self.imag["$infinite?"]()});$def(self,"$inspect",function $$inspect(){var self=this;return"("+self+")"});$def(self,"$numerator",function $$numerator(){var self=this,d=nil;d=self.$denominator();return $Kernel.$Complex($rb_times(self.real.$numerator(),$rb_divide(d,self.real.$denominator())),$rb_times(self.imag.$numerator(),$rb_divide(d,self.imag.$denominator())))});$def(self,"$polar",function $$polar(){var self=this;return[self.$abs(),self.$arg()]});$def(self,"$rationalize",function $$rationalize(eps){var self=
this;if(arguments.length>1)$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+arguments.length+" for 0..1)");if($neqeq(self.imag,0))$Kernel.$raise($$$("RangeError"),"can't convert "+self+" into Rational");return self.$real().$rationalize(eps)},-1);$def(self,"$real?",$return_val(false));$def(self,"$rect",function $$rect(){var self=this;return[self.real,self.imag]});$def(self,"$to_f",function $$to_f(){var self=this;if(!$eqeq(self.imag,0))$Kernel.$raise($$$("RangeError"),"can't convert "+
self+" into Float");return self.real.$to_f()});$def(self,"$to_i",function $$to_i(){var self=this;if(!$eqeq(self.imag,0))$Kernel.$raise($$$("RangeError"),"can't convert "+self+" into Integer");return self.real.$to_i()});$def(self,"$to_r",function $$to_r(){var self=this;if(!$eqeq(self.imag,0))$Kernel.$raise($$$("RangeError"),"can't convert "+self+" into Rational");return self.real.$to_r()});$def(self,"$to_s",function $$to_s(){var self=this,result=nil;result=self.real.$inspect();result=$rb_plus(result,
$eqeqeq($$$("Number"),self.imag)&&$truthy(self.imag["$nan?"]())||$truthy(self.imag["$positive?"]())||$truthy(self.imag["$zero?"]())?"+":"-");result=$rb_plus(result,self.imag.$abs().$inspect());if($eqeqeq($$$("Number"),self.imag)&&($truthy(self.imag["$nan?"]())||$truthy(self.imag["$infinite?"]())))result=$rb_plus(result,"*");return $rb_plus(result,"i")});$const_set($nesting[0],"I",self.$new(0,1));$defs(self,"$from_string",function $$from_string(str){var re=/[+-]?[\d_]+(\.[\d_]+)?(e\d+)?/,match=str.match(re),
real,imag,denominator;function isFloat(){return re.test(str)}function cutFloat(){var match=str.match(re);var number=match[0];str=str.slice(number.length);return number.replace(/_/g,"")}function cutNumber(){if(isFloat()){var numerator=parseFloat(cutFloat());if(str[0]==="/"){str=str.slice(1);if(isFloat()){var denominator=parseFloat(cutFloat());return $Kernel.$Rational(numerator,denominator)}else{str="/"+str;return numerator}}else return numerator}else return null}real=cutNumber();if(!real){if(str[0]===
"i")return $Kernel.$Complex(0,1);if(str[0]==="-"&&str[1]==="i")return $Kernel.$Complex(0,-1);if(str[0]==="+"&&str[1]==="i")return $Kernel.$Complex(0,1);return $Kernel.$Complex(0,0)}imag=cutNumber();if(!imag)if(str[0]==="i")return $Kernel.$Complex(0,real);else return $Kernel.$Complex(real,0);else return $Kernel.$Complex(real,imag)});(function(self,$parent_nesting){return $alias(self,"rectangular","rect")})(Opal.get_singleton_class(self),$nesting);$alias(self,"arg","angle");$alias(self,"conjugate",
"conj");$alias(self,"divide","/");$alias(self,"imaginary","imag");$alias(self,"magnitude","abs");$alias(self,"phase","arg");$alias(self,"quo","/");$alias(self,"rectangular","rect");Opal.udef(self,"$"+"negative?");Opal.udef(self,"$"+"positive?");Opal.udef(self,"$"+"step");return nil}("::",$$$("Numeric"),$nesting)};
Opal.modules["corelib/rational/base"]=function(Opal){var $module=Opal.module,$def=Opal.def,$klass=Opal.klass,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("convert,from_string");(function($base){var self=$module($base,"Kernel");return $def(self,"$Rational",function $$Rational(numerator,denominator){if(denominator==null)denominator=1;return $$$("Rational").$convert(numerator,denominator)},-2)})("::");return function($base,$super){var self=$klass($base,$super,"String");return $def(self,"$to_r",function $$to_r(){var self=
this;return $$$("Rational").$from_string(self)})}("::",null)};
Opal.modules["corelib/rational"]=function(Opal){var $klass=Opal.klass,$eqeq=Opal.eqeq,$Kernel=Opal.Kernel,$truthy=Opal.truthy,$rb_lt=Opal.rb_lt,$rb_divide=Opal.rb_divide,$defs=Opal.defs,$eqeqeq=Opal.eqeqeq,$not=Opal.not,$Opal=Opal.Opal,$def=Opal.def,$return_ivar=Opal.return_ivar,$rb_minus=Opal.rb_minus,$rb_times=Opal.rb_times,$rb_plus=Opal.rb_plus,$rb_gt=Opal.rb_gt,$rb_le=Opal.rb_le,$return_self=Opal.return_self,$alias=Opal.alias,self=Opal.top,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,to_i,==,raise,<,-@,new,gcd,/,nil?,===,reduce,to_r,!,equal?,coerce_to!,freeze,to_f,numerator,denominator,<=>,-,*,__coerced__,+,Rational,>,**,abs,ceil,with_precision,floor,<=,truncate,send");
self.$require("corelib/numeric");self.$require("corelib/rational/base");return function($base,$super){var self=$klass($base,$super,"Rational");var $proto=self.$$prototype;$proto.num=$proto.den=nil;$defs(self,"$reduce",function $$reduce(num,den){var self=this,gcd=nil;num=num.$to_i();den=den.$to_i();if($eqeq(den,0))$Kernel.$raise($$$("ZeroDivisionError"),"divided by 0");else if($truthy($rb_lt(den,0))){num=num["$-@"]();den=den["$-@"]()}else if($eqeq(den,1))return self.$new(num,den);gcd=num.$gcd(den);
return self.$new($rb_divide(num,gcd),$rb_divide(den,gcd))});$defs(self,"$convert",function $$convert(num,den){var self=this;if($truthy(num["$nil?"]())||$truthy(den["$nil?"]()))$Kernel.$raise($$$("TypeError"),"cannot convert nil into Rational");if($eqeqeq($$$("Integer"),num)&&$eqeqeq($$$("Integer"),den))return self.$reduce(num,den);if($eqeqeq($$$("Float"),num)||$eqeqeq($$$("String"),num)||$eqeqeq($$$("Complex"),num))num=num.$to_r();if($eqeqeq($$$("Float"),den)||$eqeqeq($$$("String"),den)||$eqeqeq($$$("Complex"),
den))den=den.$to_r();if($truthy(den["$equal?"](1))&&$not($$$("Integer")["$==="](num)))return $Opal["$coerce_to!"](num,$$$("Rational"),"to_r");else if($eqeqeq($$$("Numeric"),num)&&$eqeqeq($$$("Numeric"),den))return $rb_divide(num,den);else return self.$reduce(num,den)});$def(self,"$initialize",function $$initialize(num,den){var self=this;self.num=num;self.den=den;return self.$freeze()});$def(self,"$numerator",$return_ivar("num"));$def(self,"$denominator",$return_ivar("den"));$def(self,"$coerce",function $$coerce(other){var self=
this,$ret_or_1=nil;if($eqeqeq($$$("Rational"),$ret_or_1=other))return[other,self];else if($eqeqeq($$$("Integer"),$ret_or_1))return[other.$to_r(),self];else if($eqeqeq($$$("Float"),$ret_or_1))return[other,self.$to_f()];else return nil});$def(self,"$==",function $Rational_$eq_eq$1(other){var self=this,$ret_or_1=nil,$ret_or_2=nil;if($eqeqeq($$$("Rational"),$ret_or_1=other))if($truthy($ret_or_2=self.num["$=="](other.$numerator())))return self.den["$=="](other.$denominator());else return $ret_or_2;else if($eqeqeq($$$("Integer"),
$ret_or_1))if($truthy($ret_or_2=self.num["$=="](other)))return self.den["$=="](1);else return $ret_or_2;else if($eqeqeq($$$("Float"),$ret_or_1))return self.$to_f()["$=="](other);else return other["$=="](self)});$def(self,"$<=>",function $Rational_$lt_eq_gt$2(other){var self=this,$ret_or_1=nil;if($eqeqeq($$$("Rational"),$ret_or_1=other))return $rb_minus($rb_times(self.num,other.$denominator()),$rb_times(self.den,other.$numerator()))["$<=>"](0);else if($eqeqeq($$$("Integer"),$ret_or_1))return $rb_minus(self.num,
$rb_times(self.den,other))["$<=>"](0);else if($eqeqeq($$$("Float"),$ret_or_1))return self.$to_f()["$<=>"](other);else return self.$__coerced__("<=>",other)});$def(self,"$+",function $Rational_$plus$3(other){var self=this,$ret_or_1=nil,num=nil,den=nil;if($eqeqeq($$$("Rational"),$ret_or_1=other)){num=$rb_plus($rb_times(self.num,other.$denominator()),$rb_times(self.den,other.$numerator()));den=$rb_times(self.den,other.$denominator());return $Kernel.$Rational(num,den)}else if($eqeqeq($$$("Integer"),$ret_or_1))return $Kernel.$Rational($rb_plus(self.num,
$rb_times(other,self.den)),self.den);else if($eqeqeq($$$("Float"),$ret_or_1))return $rb_plus(self.$to_f(),other);else return self.$__coerced__("+",other)});$def(self,"$-",function $Rational_$minus$4(other){var self=this,$ret_or_1=nil,num=nil,den=nil;if($eqeqeq($$$("Rational"),$ret_or_1=other)){num=$rb_minus($rb_times(self.num,other.$denominator()),$rb_times(self.den,other.$numerator()));den=$rb_times(self.den,other.$denominator());return $Kernel.$Rational(num,den)}else if($eqeqeq($$$("Integer"),$ret_or_1))return $Kernel.$Rational($rb_minus(self.num,
$rb_times(other,self.den)),self.den);else if($eqeqeq($$$("Float"),$ret_or_1))return $rb_minus(self.$to_f(),other);else return self.$__coerced__("-",other)});$def(self,"$*",function $Rational_$$5(other){var self=this,$ret_or_1=nil,num=nil,den=nil;if($eqeqeq($$$("Rational"),$ret_or_1=other)){num=$rb_times(self.num,other.$numerator());den=$rb_times(self.den,other.$denominator());return $Kernel.$Rational(num,den)}else if($eqeqeq($$$("Integer"),$ret_or_1))return $Kernel.$Rational($rb_times(self.num,other),
self.den);else if($eqeqeq($$$("Float"),$ret_or_1))return $rb_times(self.$to_f(),other);else return self.$__coerced__("*",other)});$def(self,"$/",function $Rational_$slash$6(other){var self=this,$ret_or_1=nil,num=nil,den=nil;if($eqeqeq($$$("Rational"),$ret_or_1=other)){num=$rb_times(self.num,other.$denominator());den=$rb_times(self.den,other.$numerator());return $Kernel.$Rational(num,den)}else if($eqeqeq($$$("Integer"),$ret_or_1))if($eqeq(other,0))return $rb_divide(self.$to_f(),0);else return $Kernel.$Rational(self.num,
$rb_times(self.den,other));else if($eqeqeq($$$("Float"),$ret_or_1))return $rb_divide(self.$to_f(),other);else return self.$__coerced__("/",other)});$def(self,"$**",function $Rational_$$$7(other){var self=this,$ret_or_1=nil;if($eqeqeq($$$("Integer"),$ret_or_1=other))if($eqeq(self,0)&&$truthy($rb_lt(other,0)))return $$$($$$("Float"),"INFINITY");else if($truthy($rb_gt(other,0)))return $Kernel.$Rational(self.num["$**"](other),self.den["$**"](other));else if($truthy($rb_lt(other,0)))return $Kernel.$Rational(self.den["$**"](other["$-@"]()),
self.num["$**"](other["$-@"]()));else return $Kernel.$Rational(1,1);else if($eqeqeq($$$("Float"),$ret_or_1))return self.$to_f()["$**"](other);else if($eqeqeq($$$("Rational"),$ret_or_1))if($eqeq(other,0))return $Kernel.$Rational(1,1);else if($eqeq(other.$denominator(),1))if($truthy($rb_lt(other,0)))return $Kernel.$Rational(self.den["$**"](other.$numerator().$abs()),self.num["$**"](other.$numerator().$abs()));else return $Kernel.$Rational(self.num["$**"](other.$numerator()),self.den["$**"](other.$numerator()));
else if($eqeq(self,0)&&$truthy($rb_lt(other,0)))return $Kernel.$raise($$$("ZeroDivisionError"),"divided by 0");else return self.$to_f()["$**"](other);else return self.$__coerced__("**",other)});$def(self,"$abs",function $$abs(){var self=this;return $Kernel.$Rational(self.num.$abs(),self.den.$abs())});$def(self,"$ceil",function $$ceil(precision){var self=this;if(precision==null)precision=0;if($eqeq(precision,0))return $rb_divide(self.num["$-@"](),self.den)["$-@"]().$ceil();else return self.$with_precision("ceil",
precision)},-1);$def(self,"$floor",function $$floor(precision){var self=this;if(precision==null)precision=0;if($eqeq(precision,0))return $rb_divide(self.num["$-@"](),self.den)["$-@"]().$floor();else return self.$with_precision("floor",precision)},-1);$def(self,"$hash",function $$hash(){var self=this;return"Rational:"+self.num+":"+self.den});$def(self,"$inspect",function $$inspect(){var self=this;return"("+self+")"});$def(self,"$rationalize",function $$rationalize(eps){var self=this;if(arguments.length>
1)$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments ("+arguments.length+" for 0..1)");if(eps==null)return self;var e=eps.$abs(),a=$rb_minus(self,e),b=$rb_plus(self,e);var p0=0,p1=1,q0=1,q1=0,p2,q2;var c,k,t;while(true){c=a.$ceil();if($rb_le(c,b))break;k=c-1;p2=k*p1+p0;q2=k*q1+q0;t=$rb_divide(1,$rb_minus(b,k));b=$rb_divide(1,$rb_minus(a,k));a=t;p0=p1;q0=q1;p1=p2;q1=q2}return $Kernel.$Rational(c*p1+p0,c*q1+q0)},-1);$def(self,"$round",function $$round(precision){var self=this,num=nil,den=
nil,approx=nil;if(precision==null)precision=0;if(!$eqeq(precision,0))return self.$with_precision("round",precision);if($eqeq(self.num,0))return 0;if($eqeq(self.den,1))return self.num;num=$rb_plus($rb_times(self.num.$abs(),2),self.den);den=$rb_times(self.den,2);approx=$rb_divide(num,den).$truncate();if($truthy($rb_lt(self.num,0)))return approx["$-@"]();else return approx},-1);$def(self,"$to_f",function $$to_f(){var self=this;return $rb_divide(self.num,self.den)});$def(self,"$to_i",function $$to_i(){var self=
this;return self.$truncate()});$def(self,"$to_r",$return_self);$def(self,"$to_s",function $$to_s(){var self=this;return""+self.num+"/"+self.den});$def(self,"$truncate",function $$truncate(precision){var self=this;if(precision==null)precision=0;if($eqeq(precision,0))if($truthy($rb_lt(self.num,0)))return self.$ceil();else return self.$floor();else return self.$with_precision("truncate",precision)},-1);$def(self,"$with_precision",function $$with_precision(method,precision){var self=this,p=nil,s=nil;
if(!$eqeqeq($$$("Integer"),precision))$Kernel.$raise($$$("TypeError"),"not an Integer");p=10["$**"](precision);s=$rb_times(self,p);if($truthy($rb_lt(precision,1)))return $rb_divide(s.$send(method),p).$to_i();else return $Kernel.$Rational(s.$send(method),p)});$defs(self,"$from_string",function $$from_string(string){var str=string.trimLeft(),re=/^[+-]?[\d_]+(\.[\d_]+)?/,match=str.match(re),numerator,denominator;function isFloat(){return re.test(str)}function cutFloat(){var match=str.match(re);var number=
match[0];str=str.slice(number.length);return number.replace(/_/g,"")}if(isFloat()){numerator=parseFloat(cutFloat());if(str[0]==="/"){str=str.slice(1);if(isFloat()){denominator=parseFloat(cutFloat());return $Kernel.$Rational(numerator,denominator)}else return $Kernel.$Rational(numerator,1)}else return $Kernel.$Rational(numerator,1)}else return $Kernel.$Rational(0,1)});$alias(self,"divide","/");return $alias(self,"quo","/")}("::",$$$("Numeric"))};
Opal.modules["corelib/time"]=function(Opal){var $slice=Opal.slice,$deny_frozen_access=Opal.deny_frozen_access,$klass=Opal.klass,$Kernel=Opal.Kernel,$Opal=Opal.Opal,$defs=Opal.defs,$eqeqeq=Opal.eqeqeq,$def=Opal.def,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,$rb_lt=Opal.rb_lt,$send=Opal.send,$rb_plus=Opal.rb_plus,$rb_divide=Opal.rb_divide,$rb_minus=Opal.rb_minus,$range=Opal.range,$neqeq=Opal.neqeq,$rb_le=Opal.rb_le,$eqeq=Opal.eqeq,$alias=Opal.alias,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,include,===,raise,coerce_to!,respond_to?,to_str,to_i,_parse_offset,new,<=>,to_f,nil?,>,<,strftime,each,define_method,year,month,day,+,round,/,-,copy_instance_variables,initialize_dup,is_a?,zero?,wday,utc?,mon,yday,hour,min,sec,rjust,ljust,zone,to_s,[],cweek_cyear,jd,to_date,format,isdst,!=,<=,==,ceil,local,gm,asctime,getgm,gmt_offset,inspect,usec,gmtime,gmt?");
self.$require("corelib/comparable");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Time");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$$("Comparable"));var days_of_week=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],short_days=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],short_months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],long_months=["January","February","March","April",
"May","June","July","August","September","October","November","December"];$defs(self,"$at",function $$at(seconds,frac){var result;if($$$("Time")["$==="](seconds)){if(frac!==undefined)$Kernel.$raise($$$("TypeError"),"can't convert Time into an exact number");result=new Date(seconds.getTime());result.timezone=seconds.timezone;return result}if(!seconds.$$is_number)seconds=$Opal["$coerce_to!"](seconds,$$$("Integer"),"to_int");if(frac===undefined)return new Date(seconds*1E3);if(!frac.$$is_number)frac=
$Opal["$coerce_to!"](frac,$$$("Integer"),"to_int");return new Date(seconds*1E3+frac/1E3)},-2);function time_params(year,month,day,hour,min,sec){if(year.$$is_string)year=parseInt(year,10);else year=$Opal["$coerce_to!"](year,$$$("Integer"),"to_int");if(month===nil)month=1;else if(!month.$$is_number)if(month["$respond_to?"]("to_str")){month=month.$to_str();switch(month.toLowerCase()){case "jan":month=1;break;case "feb":month=2;break;case "mar":month=3;break;case "apr":month=4;break;case "may":month=
5;break;case "jun":month=6;break;case "jul":month=7;break;case "aug":month=8;break;case "sep":month=9;break;case "oct":month=10;break;case "nov":month=11;break;case "dec":month=12;break;default:month=month.$to_i()}}else month=$Opal["$coerce_to!"](month,$$$("Integer"),"to_int");if(month<1||month>12)$Kernel.$raise($$$("ArgumentError"),"month out of range: "+month);month=month-1;if(day===nil)day=1;else if(day.$$is_string)day=parseInt(day,10);else day=$Opal["$coerce_to!"](day,$$$("Integer"),"to_int");
if(day<1||day>31)$Kernel.$raise($$$("ArgumentError"),"day out of range: "+day);if(hour===nil)hour=0;else if(hour.$$is_string)hour=parseInt(hour,10);else hour=$Opal["$coerce_to!"](hour,$$$("Integer"),"to_int");if(hour<0||hour>24)$Kernel.$raise($$$("ArgumentError"),"hour out of range: "+hour);if(min===nil)min=0;else if(min.$$is_string)min=parseInt(min,10);else min=$Opal["$coerce_to!"](min,$$$("Integer"),"to_int");if(min<0||min>59)$Kernel.$raise($$$("ArgumentError"),"min out of range: "+min);if(sec===
nil)sec=0;else if(!sec.$$is_number)if(sec.$$is_string)sec=parseInt(sec,10);else sec=$Opal["$coerce_to!"](sec,$$$("Integer"),"to_int");if(sec<0||sec>60)$Kernel.$raise($$$("ArgumentError"),"sec out of range: "+sec);return[year,month,day,hour,min,sec]}$defs(self,"$new",function $Time_new$1(year,month,day,hour,min,sec,utc_offset){var self=this;if(month==null)month=nil;if(day==null)day=nil;if(hour==null)hour=nil;if(min==null)min=nil;if(sec==null)sec=nil;if(utc_offset==null)utc_offset=nil;var args,result,
timezone,utc_date;if(year===undefined)return new Date;args=time_params(year,month,day,hour,min,sec);year=args[0];month=args[1];day=args[2];hour=args[3];min=args[4];sec=args[5];if(utc_offset===nil){result=new Date(year,month,day,hour,min,0,sec*1E3);if(year<100)result.setFullYear(year);return result}timezone=self.$_parse_offset(utc_offset);utc_date=new Date(Date.UTC(year,month,day,hour,min,0,sec*1E3));if(year<100)utc_date.setUTCFullYear(year);result=new Date(utc_date.getTime()-timezone*36E5);result.timezone=
timezone;return result},-1);$defs(self,"$_parse_offset",function $$_parse_offset(utc_offset){var timezone;if(utc_offset.$$is_string)if(utc_offset=="UTC")timezone=0;else if(/^[+-]\d\d:[0-5]\d$/.test(utc_offset)){var sign,hours,minutes;sign=utc_offset[0];hours=+(utc_offset[1]+utc_offset[2]);minutes=+(utc_offset[4]+utc_offset[5]);timezone=(sign=="-"?-1:1)*(hours+minutes/60)}else $Kernel.$raise($$$("ArgumentError"),'"+HH:MM", "-HH:MM", "UTC" expected for utc_offset: '+utc_offset);else if(utc_offset.$$is_number)timezone=
utc_offset/3600;else $Kernel.$raise($$$("ArgumentError"),"Opal doesn't support other types for a timezone argument than Integer and String");return timezone});$defs(self,"$local",function $$local(year,month,day,hour,min,sec,millisecond,_dummy1,_dummy2,_dummy3){if(month==null)month=nil;if(day==null)day=nil;if(hour==null)hour=nil;if(min==null)min=nil;if(sec==null)sec=nil;if(millisecond==null)millisecond=nil;if(_dummy1==null)_dummy1=nil;if(_dummy2==null)_dummy2=nil;if(_dummy3==null)_dummy3=nil;var args,
result;if(arguments.length===10){args=$slice(arguments);year=args[5];month=args[4];day=args[3];hour=args[2];min=args[1];sec=args[0]}args=time_params(year,month,day,hour,min,sec);year=args[0];month=args[1];day=args[2];hour=args[3];min=args[4];sec=args[5];result=new Date(year,month,day,hour,min,0,sec*1E3);if(year<100)result.setFullYear(year);return result},-2);$defs(self,"$gm",function $$gm(year,month,day,hour,min,sec,millisecond,_dummy1,_dummy2,_dummy3){if(month==null)month=nil;if(day==null)day=nil;
if(hour==null)hour=nil;if(min==null)min=nil;if(sec==null)sec=nil;if(millisecond==null)millisecond=nil;if(_dummy1==null)_dummy1=nil;if(_dummy2==null)_dummy2=nil;if(_dummy3==null)_dummy3=nil;var args,result;if(arguments.length===10){args=$slice(arguments);year=args[5];month=args[4];day=args[3];hour=args[2];min=args[1];sec=args[0]}args=time_params(year,month,day,hour,min,sec);year=args[0];month=args[1];day=args[2];hour=args[3];min=args[4];sec=args[5];result=new Date(Date.UTC(year,month,day,hour,min,
0,sec*1E3));if(year<100)result.setUTCFullYear(year);result.timezone=0;return result},-2);$defs(self,"$now",function $$now(){var self=this;return self.$new()});$def(self,"$+",function $Time_$plus$2(other){var self=this;if($eqeqeq($$$("Time"),other))$Kernel.$raise($$$("TypeError"),"time + time?");if(!other.$$is_number)other=$Opal["$coerce_to!"](other,$$$("Integer"),"to_int");var result=new Date(self.getTime()+other*1E3);result.timezone=self.timezone;return result});$def(self,"$-",function $Time_$minus$3(other){var self=
this;if($eqeqeq($$$("Time"),other))return(self.getTime()-other.getTime())/1E3;if(!other.$$is_number)other=$Opal["$coerce_to!"](other,$$$("Integer"),"to_int");var result=new Date(self.getTime()-other*1E3);result.timezone=self.timezone;return result});$def(self,"$<=>",function $Time_$lt_eq_gt$4(other){var self=this,r=nil;if($eqeqeq($$$("Time"),other))return self.$to_f()["$<=>"](other.$to_f());else{r=other["$<=>"](self);if($truthy(r["$nil?"]()))return nil;else if($truthy($rb_gt(r,0)))return-1;else if($truthy($rb_lt(r,
0)))return 1;else return 0}});$def(self,"$==",function $Time_$eq_eq$5(other){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=$$$("Time")["$==="](other)))return self.$to_f()===other.$to_f();else return $ret_or_1});$def(self,"$asctime",function $$asctime(){var self=this;return self.$strftime("%a %b %e %H:%M:%S %Y")});$send([["year","getFullYear","getUTCFullYear"],["mon","getMonth","getUTCMonth",1],["wday","getDay","getUTCDay"],["day","getDate","getUTCDate"],["hour","getHours","getUTCHours"],["min",
"getMinutes","getUTCMinutes"],["sec","getSeconds","getUTCSeconds"]],"each",[],function $Time$6(method,getter,utcgetter,difference){var self=$Time$6.$$s==null?this:$Time$6.$$s;if(method==null)method=nil;if(getter==null)getter=nil;if(utcgetter==null)utcgetter=nil;if(difference==null)difference=0;return $send(self,"define_method",[method],function $$7(){var self=$$7.$$s==null?this:$$7.$$s;return difference+(self.timezone!=null?(new Date(self.getTime()+self.timezone*36E5))[utcgetter]():self[getter]())},
{$$s:self})},{$$arity:-4,$$s:self});$def(self,"$yday",function $$yday(){var self=this,start_of_year=nil,start_of_day=nil,one_day=nil;start_of_year=$$("Time").$new(self.$year()).$to_i();start_of_day=$$("Time").$new(self.$year(),self.$month(),self.$day()).$to_i();one_day=86400;return $rb_plus($rb_divide($rb_minus(start_of_day,start_of_year),one_day).$round(),1)});$def(self,"$isdst",function $$isdst(){var self=this;var jan=new Date(self.getFullYear(),0,1),jul=new Date(self.getFullYear(),6,1);return self.getTimezoneOffset()<
Math.max(jan.getTimezoneOffset(),jul.getTimezoneOffset())});$def(self,"$dup",function $$dup(){var self=this,copy=nil;copy=new Date(self.getTime());copy.$copy_instance_variables(self);copy.$initialize_dup(self);return copy});$def(self,"$eql?",function $Time_eql$ques$8(other){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=other["$is_a?"]($$$("Time"))))return self["$<=>"](other)["$zero?"]();else return $ret_or_1});$send([["sunday?",0],["monday?",1],["tuesday?",2],["wednesday?",3],["thursday?",4],["friday?",
5],["saturday?",6]],"each",[],function $Time$9(method,weekday){var self=$Time$9.$$s==null?this:$Time$9.$$s;if(method==null)method=nil;if(weekday==null)weekday=nil;return $send(self,"define_method",[method],function $$10(){var self=$$10.$$s==null?this:$$10.$$s;return self.$wday()===weekday},{$$s:self})},{$$s:self});$def(self,"$hash",function $$hash(){var self=this;return"Time:"+self.getTime()});$def(self,"$inspect",function $$inspect(){var self=this;if($truthy(self["$utc?"]()))return self.$strftime("%Y-%m-%d %H:%M:%S UTC");
else return self.$strftime("%Y-%m-%d %H:%M:%S %z")});$def(self,"$succ",function $$succ(){var self=this;var result=new Date(self.getTime()+1E3);result.timezone=self.timezone;return result});$def(self,"$usec",function $$usec(){var self=this;return self.getMilliseconds()*1E3});$def(self,"$zone",function $$zone(){var self=this;if(self.timezone===0)return"UTC";else if(self.timezone!=null)return nil;var string=self.toString(),result;if(string.indexOf("(")==-1)result=string.match(/[A-Z]{3,4}/)[0];else result=
string.match(/\((.+)\)(?:\s|$)/)[1];if(result=="GMT"&&/(GMT\W*\d{4})/.test(string))return RegExp.$1;else return result});$def(self,"$getgm",function $$getgm(){var self=this;var result=new Date(self.getTime());result.timezone=0;return result});$def(self,"$gmtime",function $$gmtime(){var self=this;if(self.timezone!==0){$deny_frozen_access(self);self.timezone=0}return self});$def(self,"$gmt?",function $Time_gmt$ques$11(){var self=this;return self.timezone===0});$def(self,"$gmt_offset",function $$gmt_offset(){var self=
this;return self.timezone!=null?self.timezone*60:-self.getTimezoneOffset()*60});$def(self,"$strftime",function $$strftime(format){var self=this;return format.replace(/%([\-_#^0]*:{0,2})(\d+)?([EO]*)(.)/g,function(full,flags,width,_,conv){var result="",jd,c,s,zero=flags.indexOf("0")!==-1,pad=flags.indexOf("-")===-1,blank=flags.indexOf("_")!==-1,upcase=flags.indexOf("^")!==-1,invert=flags.indexOf("#")!==-1,colons=(flags.match(":")||[]).length;width=parseInt(width,10);if(zero&&blank)if(flags.indexOf("0")<
flags.indexOf("_"))zero=false;else blank=false;switch(conv){case "Y":result+=self.$year();break;case "C":zero=!blank;result+=Math.round(self.$year()/100);break;case "y":zero=!blank;result+=self.$year()%100;break;case "m":zero=!blank;result+=self.$mon();break;case "B":result+=long_months[self.$mon()-1];break;case "b":case "h":blank=!zero;result+=short_months[self.$mon()-1];break;case "d":zero=!blank;result+=self.$day();break;case "e":blank=!zero;result+=self.$day();break;case "j":zero=!blank;width=
isNaN(width)?3:width;result+=self.$yday();break;case "H":zero=!blank;result+=self.$hour();break;case "k":blank=!zero;result+=self.$hour();break;case "I":zero=!blank;result+=self.$hour()%12||12;break;case "l":blank=!zero;result+=self.$hour()%12||12;break;case "P":result+=self.$hour()>=12?"pm":"am";break;case "p":result+=self.$hour()>=12?"PM":"AM";break;case "M":zero=!blank;result+=self.$min();break;case "S":zero=!blank;result+=self.$sec();break;case "L":zero=!blank;width=isNaN(width)?3:width;result+=
self.getMilliseconds();break;case "N":width=isNaN(width)?9:width;result+=self.getMilliseconds().toString().$rjust(3,"0");result=result.$ljust(width,"0");break;case "z":var offset=self.timezone==null?self.getTimezoneOffset():-self.timezone*60,hours=Math.floor(Math.abs(offset)/60),minutes=Math.abs(offset)%60;result+=offset<0?"+":"-";result+=hours<10?"0":"";result+=hours;if(colons>0)result+=":";result+=minutes<10?"0":"";result+=minutes;if(colons>1)result+=":00";break;case "Z":result+=self.$zone();break;
case "A":result+=days_of_week[self.$wday()];break;case "a":result+=short_days[self.$wday()];break;case "u":result+=self.$wday()+1;break;case "w":result+=self.$wday();break;case "V":result+=self.$cweek_cyear()["$[]"](0).$to_s().$rjust(2,"0");break;case "G":result+=self.$cweek_cyear()["$[]"](1);break;case "g":result+=self.$cweek_cyear()["$[]"](1)["$[]"]($range(-2,-1,false));break;case "s":result+=self.$to_i();break;case "n":result+="\n";break;case "t":result+="\t";break;case "%":result+="%";break;case "c":result+=
self.$strftime("%a %b %e %T %Y");break;case "D":case "x":result+=self.$strftime("%m/%d/%y");break;case "F":result+=self.$strftime("%Y-%m-%d");break;case "v":result+=self.$strftime("%e-%^b-%4Y");break;case "r":result+=self.$strftime("%I:%M:%S %p");break;case "R":result+=self.$strftime("%H:%M");break;case "T":case "X":result+=self.$strftime("%H:%M:%S");break;case "J":jd=self.$to_date().$jd();if(jd<2405160){result+=self.$strftime("%Y-%m-%d");break}else if(jd<2419614)c="M",s=1867;else if(jd<2424875)c=
"T",s=1911;else if(jd<2447535)c="S",s=1925;else if(jd<2458605)c="H",s=1988;else c="R",s=2018;result+=self.$format("%c%02d",c,$rb_minus(self.$year(),s));result+=self.$strftime("-%m-%d");break;default:return full}if(upcase)result=result.toUpperCase();if(invert)result=result.replace(/[A-Z]/,function(c){c.toLowerCase()}).replace(/[a-z]/,function(c){c.toUpperCase()});if(pad&&(zero||blank))result=result.$rjust(isNaN(width)?2:width,blank?" ":"0");return result})});$def(self,"$to_a",function $$to_a(){var self=
this;return[self.$sec(),self.$min(),self.$hour(),self.$day(),self.$month(),self.$year(),self.$wday(),self.$yday(),self.$isdst(),self.$zone()]});$def(self,"$to_f",function $$to_f(){var self=this;return self.getTime()/1E3});$def(self,"$to_i",function $$to_i(){var self=this;return parseInt(self.getTime()/1E3,10)});$def(self,"$cweek_cyear",function $$cweek_cyear(){var self=this,jan01=nil,jan01_wday=nil,first_monday=nil,year=nil,offset=nil,week=nil,dec31=nil,dec31_wday=nil;jan01=$$$("Time").$new(self.$year(),
1,1);jan01_wday=jan01.$wday();first_monday=0;year=self.$year();if($truthy($rb_le(jan01_wday,4))&&$neqeq(jan01_wday,0))offset=$rb_minus(jan01_wday,1);else{offset=$rb_minus($rb_minus(jan01_wday,7),1);if($eqeq(offset,-8))offset=-1}week=$rb_divide($rb_plus(self.$yday(),offset),7).$ceil();if($truthy($rb_le(week,0)))return $$$("Time").$new($rb_minus(self.$year(),1),12,31).$cweek_cyear();else if($eqeq(week,53)){dec31=$$$("Time").$new(self.$year(),12,31);dec31_wday=dec31.$wday();if($truthy($rb_le(dec31_wday,
3))&&$neqeq(dec31_wday,0)){week=1;year=$rb_plus(year,1)}}return[week,year]});(function(self,$parent_nesting){$alias(self,"mktime","local");return $alias(self,"utc","gm")})(Opal.get_singleton_class(self),$nesting);$alias(self,"ctime","asctime");$alias(self,"dst?","isdst");$alias(self,"getutc","getgm");$alias(self,"gmtoff","gmt_offset");$alias(self,"mday","day");$alias(self,"month","mon");$alias(self,"to_s","inspect");$alias(self,"tv_sec","to_i");$alias(self,"tv_usec","usec");$alias(self,"utc","gmtime");
$alias(self,"utc?","gmt?");return $alias(self,"utc_offset","gmt_offset")}("::",Date,$nesting)};
Opal.modules["corelib/struct"]=function(Opal){var $klass=Opal.klass,$slice=Opal.slice,$extract_kwargs=Opal.extract_kwargs,$ensure_kwargs=Opal.ensure_kwargs,$truthy=Opal.truthy,$neqeq=Opal.neqeq,$eqeq=Opal.eqeq,$Opal=Opal.Opal,$send=Opal.send,$Class=Opal.Class,$to_a=Opal.to_a,$def=Opal.def,$defs=Opal.defs,$Kernel=Opal.Kernel,$hash2=Opal.hash2,$rb_gt=Opal.rb_gt,$rb_minus=Opal.rb_minus,$eqeqeq=Opal.eqeqeq,$rb_lt=Opal.rb_lt,$rb_ge=Opal.rb_ge,$rb_plus=Opal.rb_plus,$alias=Opal.alias,self=Opal.top,$nesting=
[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,include,!=,upcase,[],==,class,unshift,const_name!,map,coerce_to!,new,each,define_struct_attribute,allocate,initialize,alias_method,module_eval,to_proc,const_set,raise,<<,members,define_method,instance_eval,last,>,length,-,keys,any?,join,[]=,each_with_index,hash,===,<,-@,size,>=,include?,to_sym,instance_of?,__id__,eql?,enum_for,+,name,each_pair,inspect,to_h,args,each_with_object,flatten,to_a,respond_to?,dig");self.$require("corelib/enumerable");
return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Struct");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$$("Enumerable"));$defs(self,"$new",function $Struct_new$1(const_name,$a,$b){var block=$Struct_new$1.$$p||nil,$post_args,$kwargs,args,keyword_init,self=this,klass=nil;$Struct_new$1.$$p=null;$post_args=$slice(arguments,1);$kwargs=$extract_kwargs($post_args);$kwargs=$ensure_kwargs($kwargs);args=$post_args;keyword_init=$kwargs.$$smap["keyword_init"];
if(keyword_init==null)keyword_init=false;if($truthy(const_name))if($eqeq(const_name.$class(),$$$("String"))&&$neqeq(const_name["$[]"](0).$upcase(),const_name["$[]"](0))){args.$unshift(const_name);const_name=nil}else try{const_name=$Opal["$const_name!"](const_name)}catch($err){if(Opal.rescue($err,[$$$("TypeError"),$$$("NameError")]))try{args.$unshift(const_name);const_name=nil}finally{Opal.pop_exception()}else throw $err;}$send(args,"map",[],function $$2(arg){if(arg==null)arg=nil;return $Opal["$coerce_to!"](arg,
$$$("String"),"to_str")});klass=$send($Class,"new",[self],function $$3(){var self=$$3.$$s==null?this:$$3.$$s;$send(args,"each",[],function $$4(arg){var self=$$4.$$s==null?this:$$4.$$s;if(arg==null)arg=nil;return self.$define_struct_attribute(arg)},{$$s:self});return function(self,$parent_nesting){$def(self,"$new",function $new$5($a){var $post_args,args,self=this,instance=nil;$post_args=$slice(arguments);args=$post_args;instance=self.$allocate();instance.$$data={};$send(instance,"initialize",$to_a(args));
return instance},-1);return self.$alias_method("[]","new")}(Opal.get_singleton_class(self),$nesting)},{$$s:self});if($truthy(block))$send(klass,"module_eval",[],block.$to_proc());klass.$$keyword_init=keyword_init;if($truthy(const_name))$$$("Struct").$const_set(const_name,klass);return klass},-2);$defs(self,"$define_struct_attribute",function $$define_struct_attribute(name){var self=this;if($eqeq(self,$$$("Struct")))$Kernel.$raise($$$("ArgumentError"),"you cannot define attributes to the Struct class");
self.$members()["$<<"](name);$send(self,"define_method",[name],function $$6(){var self=$$6.$$s==null?this:$$6.$$s;return self.$$data[name]},{$$s:self});return $send(self,"define_method",[""+name+"="],function $$7(value){var self=$$7.$$s==null?this:$$7.$$s;if(value==null)value=nil;return self.$$data[name]=value},{$$s:self})});$defs(self,"$members",function $$members(){var self=this,$ret_or_1=nil;if(self.members==null)self.members=nil;if($eqeq(self,$$$("Struct")))$Kernel.$raise($$$("ArgumentError"),
"the Struct class has no members");return self.members=$truthy($ret_or_1=self.members)?$ret_or_1:[]});$defs(self,"$inherited",function $$inherited(klass){var self=this,members=nil;if(self.members==null)self.members=nil;members=self.members;return $send(klass,"instance_eval",[],function $$8(){var self=$$8.$$s==null?this:$$8.$$s;return self.members=members},{$$s:self})});$def(self,"$initialize",function $$initialize($a){var $post_args,args,self=this,kwargs=nil,$ret_or_1=nil,extra=nil;$post_args=$slice(arguments);
args=$post_args;if($truthy(self.$class().$$keyword_init)){kwargs=$truthy($ret_or_1=args.$last())?$ret_or_1:$hash2([],{});if($truthy($rb_gt(args.$length(),1))||$truthy(args.length===1&&!kwargs.$$is_hash))$Kernel.$raise($$$("ArgumentError"),"wrong number of arguments (given "+args.$length()+", expected 0)");extra=$rb_minus(kwargs.$keys(),self.$class().$members());if($truthy(extra["$any?"]()))$Kernel.$raise($$$("ArgumentError"),"unknown keywords: "+extra.$join(", "));return $send(self.$class().$members(),
"each",[],function $$9(name){var $b,self=$$9.$$s==null?this:$$9.$$s;if(name==null)name=nil;return $b=[name,kwargs["$[]"](name)],$send(self,"[]=",$b),$b[$b.length-1]},{$$s:self})}else{if($truthy($rb_gt(args.$length(),self.$class().$members().$length())))$Kernel.$raise($$$("ArgumentError"),"struct size differs");return $send(self.$class().$members(),"each_with_index",[],function $$10(name,index){var $b,self=$$10.$$s==null?this:$$10.$$s;if(name==null)name=nil;if(index==null)index=nil;return $b=[name,
args["$[]"](index)],$send(self,"[]=",$b),$b[$b.length-1]},{$$s:self})}},-1);$def(self,"$initialize_copy",function $$initialize_copy(from){var self=this;self.$$data={};var keys=Object.keys(from.$$data),i,max,name;for(i=0,max=keys.length;i<max;i++){name=keys[i];self.$$data[name]=from.$$data[name]}});$defs(self,"$keyword_init?",function $Struct_keyword_init$ques$11(){var self=this;return self.$$keyword_init});$def(self,"$members",function $$members(){var self=this;return self.$class().$members()});$def(self,
"$hash",function $$hash(){var self=this;return $$("Hash").$new(self.$$data).$hash()});$def(self,"$[]",function $Struct_$$$12(name){var self=this;if($eqeqeq($$$("Integer"),name)){if($truthy($rb_lt(name,self.$class().$members().$size()["$-@"]())))$Kernel.$raise($$$("IndexError"),"offset "+name+" too small for struct(size:"+self.$class().$members().$size()+")");if($truthy($rb_ge(name,self.$class().$members().$size())))$Kernel.$raise($$$("IndexError"),"offset "+name+" too large for struct(size:"+self.$class().$members().$size()+
")");name=self.$class().$members()["$[]"](name)}else if($eqeqeq($$$("String"),name)){if(!self.$$data.hasOwnProperty(name))$Kernel.$raise($$$("NameError").$new("no member '"+name+"' in struct",name))}else $Kernel.$raise($$$("TypeError"),"no implicit conversion of "+name.$class()+" into Integer");name=$Opal["$coerce_to!"](name,$$$("String"),"to_str");return self.$$data[name]});$def(self,"$[]=",function $Struct_$$$eq$13(name,value){var self=this;if($eqeqeq($$$("Integer"),name)){if($truthy($rb_lt(name,
self.$class().$members().$size()["$-@"]())))$Kernel.$raise($$$("IndexError"),"offset "+name+" too small for struct(size:"+self.$class().$members().$size()+")");if($truthy($rb_ge(name,self.$class().$members().$size())))$Kernel.$raise($$$("IndexError"),"offset "+name+" too large for struct(size:"+self.$class().$members().$size()+")");name=self.$class().$members()["$[]"](name)}else if($eqeqeq($$$("String"),name)){if(!$truthy(self.$class().$members()["$include?"](name.$to_sym())))$Kernel.$raise($$$("NameError").$new("no member '"+
name+"' in struct",name))}else $Kernel.$raise($$$("TypeError"),"no implicit conversion of "+name.$class()+" into Integer");name=$Opal["$coerce_to!"](name,$$$("String"),"to_str");return self.$$data[name]=value});$def(self,"$==",function $Struct_$eq_eq$14(other){var self=this;if(!$truthy(other["$instance_of?"](self.$class())))return false;var recursed1={},recursed2={};function _eqeq(struct,other){var key,a,b;recursed1[struct.$__id__()]=true;recursed2[other.$__id__()]=true;for(key in struct.$$data){a=
struct.$$data[key];b=other.$$data[key];if($$$("Struct")["$==="](a)){if(!recursed1.hasOwnProperty(a.$__id__())||!recursed2.hasOwnProperty(b.$__id__()))if(!_eqeq(a,b))return false}else if(!a["$=="](b))return false}return true}return _eqeq(self,other)});$def(self,"$eql?",function $Struct_eql$ques$15(other){var self=this;if(!$truthy(other["$instance_of?"](self.$class())))return false;var recursed1={},recursed2={};function _eqeq(struct,other){var key,a,b;recursed1[struct.$__id__()]=true;recursed2[other.$__id__()]=
true;for(key in struct.$$data){a=struct.$$data[key];b=other.$$data[key];if($$$("Struct")["$==="](a)){if(!recursed1.hasOwnProperty(a.$__id__())||!recursed2.hasOwnProperty(b.$__id__()))if(!_eqeq(a,b))return false}else if(!a["$eql?"](b))return false}return true}return _eqeq(self,other)});$def(self,"$each",function $$each(){var $yield=$$each.$$p||nil,self=this;$$each.$$p=null;if(!($yield!==nil))return $send(self,"enum_for",["each"],function $$16(){var self=$$16.$$s==null?this:$$16.$$s;return self.$size()},
{$$s:self});$send(self.$class().$members(),"each",[],function $$17(name){var self=$$17.$$s==null?this:$$17.$$s;if(name==null)name=nil;return Opal.yield1($yield,self["$[]"](name))},{$$s:self});return self});$def(self,"$each_pair",function $$each_pair(){var $yield=$$each_pair.$$p||nil,self=this;$$each_pair.$$p=null;if(!($yield!==nil))return $send(self,"enum_for",["each_pair"],function $$18(){var self=$$18.$$s==null?this:$$18.$$s;return self.$size()},{$$s:self});$send(self.$class().$members(),"each",
[],function $$19(name){var self=$$19.$$s==null?this:$$19.$$s;if(name==null)name=nil;return Opal.yield1($yield,[name,self["$[]"](name)])},{$$s:self});return self});$def(self,"$length",function $$length(){var self=this;return self.$class().$members().$length()});$def(self,"$to_a",function $$to_a(){var self=this;return $send(self.$class().$members(),"map",[],function $$20(name){var self=$$20.$$s==null?this:$$20.$$s;if(name==null)name=nil;return self["$[]"](name)},{$$s:self})});var inspect_stack=[];$def(self,
"$inspect",function $$inspect(){var self=this,result=nil,pushed=nil;return function(){try{result="#<struct ";if($truthy(inspect_stack["$include?"](self.$__id__())))return $rb_plus(result,":...>");else{inspect_stack["$<<"](self.$__id__());pushed=true;if($eqeqeq($$$("Struct"),self)&&$truthy(self.$class().$name()))result=$rb_plus(result,""+self.$class()+" ");result=$rb_plus(result,$send(self.$each_pair(),"map",[],function $$21(name,value){if(name==null)name=nil;if(value==null)value=nil;return""+name+
"="+$$("Opal").$inspect(value)}).$join(", "));result=$rb_plus(result,">");return result}}finally{$truthy(pushed)?inspect_stack.pop():nil}}()});$def(self,"$to_h",function $$to_h(){var block=$$to_h.$$p||nil,self=this;$$to_h.$$p=null;if(block!==nil)return $send($send(self,"map",[],block.$to_proc()),"to_h",$to_a(self.$args()));return $send(self.$class().$members(),"each_with_object",[$hash2([],{})],function $$22(name,h){var $a,self=$$22.$$s==null?this:$$22.$$s;if(name==null)name=nil;if(h==null)h=nil;
return $a=[name,self["$[]"](name)],$send(h,"[]=",$a),$a[$a.length-1]},{$$s:self})});$def(self,"$values_at",function $$values_at($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;args=$send(args,"map",[],function $$23(arg){if(arg==null)arg=nil;return arg.$$is_range?arg.$to_a():arg}).$flatten();var result=[];for(var i=0,len=args.length;i<len;i++){if(!args[i].$$is_number)$Kernel.$raise($$$("TypeError"),"no implicit conversion of "+args[i].$class()+" into Integer");result.push(self["$[]"](args[i]))}return result},
-1);$def(self,"$dig",function $$dig(key,$a){var $post_args,keys,self=this,item=nil;$post_args=$slice(arguments,1);keys=$post_args;item=$truthy(key.$$is_string&&self.$$data.hasOwnProperty(key))?self.$$data[key]||nil:nil;if(item===nil||keys.length===0)return item;if(!$truthy(item["$respond_to?"]("dig")))$Kernel.$raise($$$("TypeError"),""+item.$class()+" does not have #dig method");return $send(item,"dig",$to_a(keys))},-2);$alias(self,"size","length");$alias(self,"to_s","inspect");return $alias(self,
"values","to_a")}("::",null,$nesting)};
Opal.modules["corelib/set"]=function(Opal){var $freeze=Opal.freeze,$klass=Opal.klass,$slice=Opal.slice,$defs=Opal.defs,$hash2=Opal.hash2,$truthy=Opal.truthy,$eqeqeq=Opal.eqeqeq,$Kernel=Opal.Kernel,$send=Opal.send,$def=Opal.def,$eqeq=Opal.eqeq,$rb_lt=Opal.rb_lt,$rb_le=Opal.rb_le,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("include,new,nil?,===,raise,each,add,merge,class,respond_to?,subtract,dup,join,to_a,equal?,instance_of?,==,instance_variable_get,size,is_a?,all?,include?,[]=,enum_for,[],<<,replace,compare_by_identity,name,compare_by_identity?,delete,select,frozen?,freeze,reject,delete_if,to_proc,keep_if,each_key,empty?,eql?,instance_eval,clear,<,<=,any?,!,intersect?,keys,|,proper_subset?,subset?,proper_superset?,superset?,-,select!,collect!");return function($base,
$super,$parent_nesting){var self=$klass($base,$super,"Set");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$ret_or_1=nil,$proto=self.$$prototype;$proto.hash=nil;self.$include($$$("Enumerable"));$defs(self,"$[]",function $Set_$$$1($a){var $post_args,ary,self=this;$post_args=$slice(arguments);ary=$post_args;return self.$new(ary)},-1);$def(self,"$initialize",function $$initialize(enum$){var block=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;if(enum$==null)enum$=nil;self.hash=
$hash2([],{});if($truthy(enum$["$nil?"]()))return nil;if(!$eqeqeq($$$("Enumerable"),enum$))$Kernel.$raise($$$("ArgumentError"),"value must be enumerable");if($truthy(block))return $send(enum$,"each",[],function $$2(item){var self=$$2.$$s==null?this:$$2.$$s;if(item==null)item=nil;return self.$add(Opal.yield1(block,item))},{$$s:self});else return self.$merge(enum$)},-1);$def(self,"$dup",function $$dup(){var self=this,result=nil;result=self.$class().$new();return result.$merge(self)});$def(self,"$-",
function $Set_$minus$3(enum$){var self=this;if(!$truthy(enum$["$respond_to?"]("each")))$Kernel.$raise($$$("ArgumentError"),"value must be enumerable");return self.$dup().$subtract(enum$)});$def(self,"$inspect",function $$inspect(){var self=this;return"#<Set: {"+self.$to_a().$join(",")+"}>"});$def(self,"$==",function $Set_$eq_eq$4(other){var self=this;if($truthy(self["$equal?"](other)))return true;else if($truthy(other["$instance_of?"](self.$class())))return self.hash["$=="](other.$instance_variable_get("@hash"));
else if($truthy(other["$is_a?"]($$$("Set")))&&$eqeq(self.$size(),other.$size()))return $send(other,"all?",[],function $$5(o){var self=$$5.$$s==null?this:$$5.$$s;if(self.hash==null)self.hash=nil;if(o==null)o=nil;return self.hash["$include?"](o)},{$$s:self});else return false});$def(self,"$add",function $$add(o){var self=this;self.hash["$[]="](o,true);return self});$def(self,"$classify",function $$classify(){var block=$$classify.$$p||nil,self=this,result=nil;$$classify.$$p=null;if(!(block!==nil))return self.$enum_for("classify");
result=$send($$$("Hash"),"new",[],function $$6(h,k){var $a,self=$$6.$$s==null?this:$$6.$$s;if(h==null)h=nil;if(k==null)k=nil;return $a=[k,self.$class().$new()],$send(h,"[]=",$a),$a[$a.length-1]},{$$s:self});$send(self,"each",[],function $$7(item){if(item==null)item=nil;return result["$[]"](Opal.yield1(block,item)).$add(item)});return result});$def(self,"$collect!",function $Set_collect$excl$8(){var block=$Set_collect$excl$8.$$p||nil,self=this,result=nil;$Set_collect$excl$8.$$p=null;if(!(block!==nil))return self.$enum_for("collect!");
result=self.$class().$new();$send(self,"each",[],function $$9(item){if(item==null)item=nil;return result["$<<"](Opal.yield1(block,item))});return self.$replace(result)});$def(self,"$compare_by_identity",function $$compare_by_identity(){var self=this;if($truthy(self.hash["$respond_to?"]("compare_by_identity"))){self.hash.$compare_by_identity();return self}else return self.$raise($$("NotImplementedError"),""+self.$class().$name()+"#"+"compare_by_identity"+" is not implemented")});$def(self,"$compare_by_identity?",
function $Set_compare_by_identity$ques$10(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self.hash["$respond_to?"]("compare_by_identity?")))return self.hash["$compare_by_identity?"]();else return $ret_or_1});$def(self,"$delete",function $Set_delete$11(o){var self=this;self.hash.$delete(o);return self});$def(self,"$delete?",function $Set_delete$ques$12(o){var self=this;if($truthy(self["$include?"](o))){self.$delete(o);return self}else return nil});$def(self,"$delete_if",function $$delete_if(){var $yield=
$$delete_if.$$p||nil,self=this;$$delete_if.$$p=null;if(!($yield!==nil))return self.$enum_for("delete_if");$send($send(self,"select",[],function $$13(o){if(o==null)o=nil;return Opal.yield1($yield,o)}),"each",[],function $$14(o){var self=$$14.$$s==null?this:$$14.$$s;if(self.hash==null)self.hash=nil;if(o==null)o=nil;return self.hash.$delete(o)},{$$s:self});return self});$def(self,"$freeze",function $$freeze(){var self=this;if($truthy(self["$frozen?"]()))return self;self.hash.$freeze();return $freeze(self)});
$def(self,"$keep_if",function $$keep_if(){var $yield=$$keep_if.$$p||nil,self=this;$$keep_if.$$p=null;if(!($yield!==nil))return self.$enum_for("keep_if");$send($send(self,"reject",[],function $$15(o){if(o==null)o=nil;return Opal.yield1($yield,o)}),"each",[],function $$16(o){var self=$$16.$$s==null?this:$$16.$$s;if(self.hash==null)self.hash=nil;if(o==null)o=nil;return self.hash.$delete(o)},{$$s:self});return self});$def(self,"$reject!",function $Set_reject$excl$17(){var block=$Set_reject$excl$17.$$p||
nil,self=this,before=nil;$Set_reject$excl$17.$$p=null;if(!(block!==nil))return self.$enum_for("reject!");before=self.$size();$send(self,"delete_if",[],block.$to_proc());if($eqeq(self.$size(),before))return nil;else return self});$def(self,"$select!",function $Set_select$excl$18(){var block=$Set_select$excl$18.$$p||nil,self=this,before=nil;$Set_select$excl$18.$$p=null;if(!(block!==nil))return self.$enum_for("select!");before=self.$size();$send(self,"keep_if",[],block.$to_proc());if($eqeq(self.$size(),
before))return nil;else return self});$def(self,"$add?",function $Set_add$ques$19(o){var self=this;if($truthy(self["$include?"](o)))return nil;else return self.$add(o)});$def(self,"$each",function $$each(){var block=$$each.$$p||nil,self=this;$$each.$$p=null;if(!(block!==nil))return self.$enum_for("each");$send(self.hash,"each_key",[],block.$to_proc());return self});$def(self,"$empty?",function $Set_empty$ques$20(){var self=this;return self.hash["$empty?"]()});$def(self,"$eql?",function $Set_eql$ques$21(other){var self=
this;return self.hash["$eql?"]($send(other,"instance_eval",[],function $$22(){var self=$$22.$$s==null?this:$$22.$$s;if(self.hash==null)self.hash=nil;return self.hash},{$$s:self}))});$def(self,"$clear",function $$clear(){var self=this;self.hash.$clear();return self});$def(self,"$include?",function $Set_include$ques$23(o){var self=this;return self.hash["$include?"](o)});$def(self,"$merge",function $$merge(enum$){var self=this;$send(enum$,"each",[],function $$24(item){var self=$$24.$$s==null?this:$$24.$$s;
if(item==null)item=nil;return self.$add(item)},{$$s:self});return self});$def(self,"$replace",function $$replace(enum$){var self=this;self.$clear();self.$merge(enum$);return self});$def(self,"$size",function $$size(){var self=this;return self.hash.$size()});$def(self,"$subtract",function $$subtract(enum$){var self=this;$send(enum$,"each",[],function $$25(item){var self=$$25.$$s==null?this:$$25.$$s;if(item==null)item=nil;return self.$delete(item)},{$$s:self});return self});$def(self,"$|",function $Set_$$26(enum$){var self=
this;if(!$truthy(enum$["$respond_to?"]("each")))$Kernel.$raise($$$("ArgumentError"),"value must be enumerable");return self.$dup().$merge(enum$)});function is_set(set){$truthy($ret_or_1=set["$is_a?"]($$$("Set")))?$ret_or_1:$Kernel.$raise($$$("ArgumentError"),"value must be a set")}$def(self,"$superset?",function $Set_superset$ques$27(set){var self=this;is_set(set);if($truthy($rb_lt(self.$size(),set.$size())))return false;return $send(set,"all?",[],function $$28(o){var self=$$28.$$s==null?this:$$28.$$s;
if(o==null)o=nil;return self["$include?"](o)},{$$s:self})});$def(self,"$proper_superset?",function $Set_proper_superset$ques$29(set){var self=this;is_set(set);if($truthy($rb_le(self.$size(),set.$size())))return false;return $send(set,"all?",[],function $$30(o){var self=$$30.$$s==null?this:$$30.$$s;if(o==null)o=nil;return self["$include?"](o)},{$$s:self})});$def(self,"$subset?",function $Set_subset$ques$31(set){var self=this;is_set(set);if($truthy($rb_lt(set.$size(),self.$size())))return false;return $send(self,
"all?",[],function $$32(o){if(o==null)o=nil;return set["$include?"](o)})});$def(self,"$proper_subset?",function $Set_proper_subset$ques$33(set){var self=this;is_set(set);if($truthy($rb_le(set.$size(),self.$size())))return false;return $send(self,"all?",[],function $$34(o){if(o==null)o=nil;return set["$include?"](o)})});$def(self,"$intersect?",function $Set_intersect$ques$35(set){var self=this;is_set(set);if($truthy($rb_lt(self.$size(),set.$size())))return $send(self,"any?",[],function $$36(o){if(o==
null)o=nil;return set["$include?"](o)});else return $send(set,"any?",[],function $$37(o){var self=$$37.$$s==null?this:$$37.$$s;if(o==null)o=nil;return self["$include?"](o)},{$$s:self})});$def(self,"$disjoint?",function $Set_disjoint$ques$38(set){var self=this;return self["$intersect?"](set)["$!"]()});$def(self,"$to_a",function $$to_a(){var self=this;return self.hash.$keys()});$alias(self,"+","|");$alias(self,"<","proper_subset?");$alias(self,"<<","add");$alias(self,"<=","subset?");$alias(self,">",
"proper_superset?");$alias(self,">=","superset?");$alias(self,"difference","-");$alias(self,"filter!","select!");$alias(self,"length","size");$alias(self,"map!","collect!");$alias(self,"member?","include?");return $alias(self,"union","|")}("::",null,$nesting)};
Opal.modules["corelib/dir"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$truthy=Opal.truthy,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("[],pwd");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Dir");var $nesting=[self].concat($parent_nesting);return function(self,$parent_nesting){$def(self,"$chdir",function $$chdir(dir){var $yield=$$chdir.$$p||nil,prev_cwd=nil;$$chdir.$$p=null;return function(){try{prev_cwd=Opal.current_dir;Opal.current_dir=
dir;return Opal.yieldX($yield,[])}finally{Opal.current_dir=prev_cwd}}()});$def(self,"$pwd",function $$pwd(){return Opal.current_dir||"."});$def(self,"$home",function $$home(){var $ret_or_1=nil;if($truthy($ret_or_1=$$$("ENV")["$[]"]("HOME")))return $ret_or_1;else return"."});return $alias(self,"getwd","pwd")}(Opal.get_singleton_class(self),$nesting)}("::",null,$nesting)};
Opal.modules["corelib/file"]=function(Opal){var $truthy=Opal.truthy,$klass=Opal.klass,$const_set=Opal.const_set,$Opal=Opal.Opal,$regexp=Opal.regexp,$rb_plus=Opal.rb_plus,$def=Opal.def,$Kernel=Opal.Kernel,$eqeq=Opal.eqeq,$rb_lt=Opal.rb_lt,$rb_minus=Opal.rb_minus,$range=Opal.range,$send=Opal.send,$slice=Opal.slice,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("respond_to?,to_path,coerce_to!,pwd,split,sub,+,unshift,join,home,raise,start_with?,absolute_path,==,<,dirname,-,basename,empty?,rindex,[],length,nil?,gsub,find,=~,map,each_with_index,flatten,reject,to_proc,end_with?,expand_path,exist?");
return function($base,$super,$parent_nesting){var self=$klass($base,$super,"File");var $nesting=[self].concat($parent_nesting),windows_root_rx=nil;$const_set($nesting[0],"Separator",$const_set($nesting[0],"SEPARATOR","/"));$const_set($nesting[0],"ALT_SEPARATOR",nil);$const_set($nesting[0],"PATH_SEPARATOR",":");$const_set($nesting[0],"FNM_SYSCASE",0);windows_root_rx=/^[a-zA-Z]:(?:\\|\/)/;return function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,
"$absolute_path",function $$absolute_path(path,basedir){var sep=nil,sep_chars=nil,new_parts=nil,$ret_or_1=nil,path_abs=nil,basedir_abs=nil,parts=nil,leading_sep=nil,abs=nil,new_path=nil;if(basedir==null)basedir=nil;sep=$$("SEPARATOR");sep_chars=$sep_chars();new_parts=[];path=$truthy(path["$respond_to?"]("to_path"))?path.$to_path():path;path=$Opal["$coerce_to!"](path,$$$("String"),"to_str");basedir=$truthy($ret_or_1=basedir)?$ret_or_1:$$$("Dir").$pwd();path_abs=path.substr(0,sep.length)===sep||windows_root_rx.test(path);
basedir_abs=basedir.substr(0,sep.length)===sep||windows_root_rx.test(basedir);if($truthy(path_abs)){parts=path.$split($regexp(["[",sep_chars,"]"]));leading_sep=windows_root_rx.test(path)?"":path.$sub($regexp(["^([",sep_chars,"]+).*$"]),"\\1");abs=true}else{parts=$rb_plus(basedir.$split($regexp(["[",sep_chars,"]"])),path.$split($regexp(["[",sep_chars,"]"])));leading_sep=windows_root_rx.test(basedir)?"":basedir.$sub($regexp(["^([",sep_chars,"]+).*$"]),"\\1");abs=basedir_abs}var part;for(var i=0,ii=
parts.length;i<ii;i++){part=parts[i];if(part===nil||part===""&&(new_parts.length===0||abs)||part==="."&&(new_parts.length===0||abs))continue;if(part==="..")new_parts.pop();else new_parts.push(part)}if(!abs&&parts[0]!==".")new_parts.$unshift(".");new_path=new_parts.$join(sep);if($truthy(abs))new_path=$rb_plus(leading_sep,new_path);return new_path},-2);$def(self,"$expand_path",function $$expand_path(path,basedir){var self=this,sep=nil,sep_chars=nil,home=nil,leading_sep=nil,home_path_regexp=nil;if(basedir==
null)basedir=nil;sep=$$("SEPARATOR");sep_chars=$sep_chars();if($truthy(path[0]==="~"||basedir&&basedir[0]==="~")){home=$$("Dir").$home();if(!$truthy(home))$Kernel.$raise($$$("ArgumentError"),"couldn't find HOME environment -- expanding `~'");leading_sep=windows_root_rx.test(home)?"":home.$sub($regexp(["^([",sep_chars,"]+).*$"]),"\\1");if(!$truthy(home["$start_with?"](leading_sep)))$Kernel.$raise($$$("ArgumentError"),"non-absolute home");home=$rb_plus(home,sep);home_path_regexp=$regexp(["^\\~(?:",
sep,"|$)"]);path=path.$sub(home_path_regexp,home);if($truthy(basedir))basedir=basedir.$sub(home_path_regexp,home)}return self.$absolute_path(path,basedir)},-2);function $coerce_to_path(path){if($truthy(path["$respond_to?"]("to_path")))path=path.$to_path();path=$Opal["$coerce_to!"](path,$$$("String"),"to_str");return path}function $sep_chars(){if($$("ALT_SEPARATOR")===nil)return Opal.escape_regexp($$("SEPARATOR"));else return Opal.escape_regexp($rb_plus($$("SEPARATOR"),$$("ALT_SEPARATOR")))}$def(self,
"$dirname",function $$dirname(path,level){var self=this,sep_chars=nil;if(level==null)level=1;if($eqeq(level,0))return path;if($truthy($rb_lt(level,0)))$Kernel.$raise($$$("ArgumentError"),"level can't be negative");sep_chars=$sep_chars();path=$coerce_to_path(path);var absolute=path.match(new RegExp("^["+sep_chars+"]")),out;path=path.replace(new RegExp("["+sep_chars+"]+$"),"");path=path.replace(new RegExp("[^"+sep_chars+"]+$"),"");path=path.replace(new RegExp("["+sep_chars+"]+$"),"");if(path==="")out=
absolute?"/":".";else out=path;if(level==1)return out;else return self.$dirname(out,$rb_minus(level,1))},-2);$def(self,"$basename",function $$basename(name,suffix){var sep_chars=nil;if(suffix==null)suffix=nil;sep_chars=$sep_chars();name=$coerce_to_path(name);if(name.length==0)return name;if(suffix!==nil)suffix=$Opal["$coerce_to!"](suffix,$$$("String"),"to_str");else suffix=null;name=name.replace(new RegExp("(.)["+sep_chars+"]*$"),"$1");name=name.replace(new RegExp("^(?:.*["+sep_chars+"])?([^"+sep_chars+
"]+)$"),"$1");if(suffix===".*")name=name.replace(/\.[^\.]+$/,"");else if(suffix!==null){suffix=Opal.escape_regexp(suffix);name=name.replace(new RegExp(""+suffix+"$"),"")}return name},-2);$def(self,"$extname",function $$extname(path){var self=this,filename=nil,last_dot_idx=nil;path=$coerce_to_path(path);filename=self.$basename(path);if($truthy(filename["$empty?"]()))return"";last_dot_idx=filename["$[]"]($range(1,-1,false)).$rindex(".");if($truthy(last_dot_idx["$nil?"]())||$eqeq($rb_plus(last_dot_idx,
1),$rb_minus(filename.$length(),1)))return"";else return filename["$[]"](Opal.Range.$new($rb_plus(last_dot_idx,1),-1,false))});$def(self,"$exist?",function $exist$ques$1(path){return Opal.modules[path]!=null});$def(self,"$directory?",function $directory$ques$2(path){var files=nil;files=[];for(var key in Opal.modules)files.push(key);path=path.$gsub($regexp(["(^.",$$("SEPARATOR"),"+|",$$("SEPARATOR"),"+$)"]));return $send(files,"find",[],function $$3(f){if(f==null)f=nil;return f["$=~"]($regexp(["^",
path]))})});$def(self,"$join",function $$join($a){var $post_args,paths,result=nil;$post_args=$slice(arguments);paths=$post_args;if($truthy(paths["$empty?"]()))return"";result="";paths=$send(paths.$flatten().$each_with_index(),"map",[],function $$4(item,index){if(item==null)item=nil;if(index==null)index=nil;if($eqeq(index,0)&&$truthy(item["$empty?"]()))return $$("SEPARATOR");else if($eqeq(paths.$length(),$rb_plus(index,1))&&$truthy(item["$empty?"]()))return $$("SEPARATOR");else return item});paths=
$send(paths,"reject",[],"empty?".$to_proc());$send(paths,"each_with_index",[],function $$5(item,index){var next_item=nil;if(item==null)item=nil;if(index==null)index=nil;next_item=paths["$[]"]($rb_plus(index,1));if($truthy(next_item["$nil?"]()))return result=""+result+item;else{if($truthy(item["$end_with?"]($$("SEPARATOR")))&&$truthy(next_item["$start_with?"]($$("SEPARATOR"))))item=item.$sub($regexp([$$("SEPARATOR"),"+$"]),"");return result=$truthy(item["$end_with?"]($$("SEPARATOR")))||$truthy(next_item["$start_with?"]($$("SEPARATOR")))?
""+result+item:""+result+item+$$("SEPARATOR")}});return result},-1);$def(self,"$split",function $$split(path){return path.$split($$("SEPARATOR"))});$alias(self,"realpath","expand_path");return $alias(self,"exists?","exist?")}(Opal.get_singleton_class(self),$nesting)}("::",$$$("IO"),$nesting)};
Opal.modules["corelib/process/base"]=function(Opal){var $klass=Opal.klass,$slice=Opal.slice,$defs=Opal.defs,$return_val=Opal.return_val,nil=Opal.nil;(function($base,$super){var self=$klass($base,$super,"Signal");return $defs(self,"$trap",function $$trap($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return nil},-1)})("::",null);return function($base,$super){var self=$klass($base,$super,"GC");return $defs(self,"$start",$return_val(nil))}("::",null)};
Opal.modules["corelib/process"]=function(Opal){var $module=Opal.module,$defs=Opal.defs,$truthy=Opal.truthy,$return_val=Opal.return_val,$Kernel=Opal.Kernel,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("const_set,size,<<,__register_clock__,to_f,now,new,[],raise");return function($base){var self=$module($base,"Process");var monotonic=nil;self.__clocks__=[];$defs(self,"$__register_clock__",function $$__register_clock__(name,func){var self=this;if(self.__clocks__==null)self.__clocks__=nil;self.$const_set(name,
self.__clocks__.$size());return self.__clocks__["$<<"](func)});self.$__register_clock__("CLOCK_REALTIME",function(){return Date.now()});monotonic=false;if(Opal.global.performance)monotonic=function(){return performance.now()};else if(Opal.global.process&&process.hrtime){var hrtime_base=process.hrtime();monotonic=function(){var hrtime=process.hrtime(hrtime_base);var us=hrtime[1]/1E3|0;return hrtime[0]*1E3+us/1E3}}if($truthy(monotonic))self.$__register_clock__("CLOCK_MONOTONIC",monotonic);$defs(self,
"$pid",$return_val(0));$defs(self,"$times",function $$times(){var t=nil;t=$$$("Time").$now().$to_f();return $$$($$$("Benchmark"),"Tms").$new(t,t,t,t,t)});return $defs(self,"$clock_gettime",function $$clock_gettime(clock_id,unit){var self=this,$ret_or_1=nil,clock=nil;if(self.__clocks__==null)self.__clocks__=nil;if(unit==null)unit="float_second";if($truthy($ret_or_1=clock=self.__clocks__["$[]"](clock_id)))$ret_or_1;else $Kernel.$raise($$$($$$("Errno"),"EINVAL"),"clock_gettime("+clock_id+") "+self.__clocks__["$[]"](clock_id));
var ms=clock();switch(unit){case "float_second":return ms/1E3;case "float_millisecond":return ms/1;case "float_microsecond":return ms*1E3;case "second":return ms/1E3|0;case "millisecond":return ms/1|0;case "microsecond":return ms*1E3|0;case "nanosecond":return ms*1E6|0;default:$Kernel.$raise($$$("ArgumentError"),"unexpected unit: "+unit)}},-2)}("::")};
Opal.modules["corelib/random/formatter"]=function(Opal){var $klass=Opal.klass,$module=Opal.module,$def=Opal.def,$range=Opal.range,$send=Opal.send,$rb_divide=Opal.rb_divide,$Kernel=Opal.Kernel,$Opal=Opal.Opal,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("_verify_count,bytes,encode,strict_encode64,random_bytes,urlsafe_encode64,split,hex,[]=,[],map,to_proc,join,times,<<,|,ord,/,abs,random_float,raise,coerce_to!,flatten,new,random_number,length,include,extend");return function($base,$super,$parent_nesting){var self=
$klass($base,$super,"Random");var $nesting=[self].concat($parent_nesting);(function($base,$parent_nesting){var self=$module($base,"Formatter");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$hex",function $$hex(count){var self=this;if(count==null)count=nil;count=$$$("Random").$_verify_count(count);var bytes=self.$bytes(count);var out="";for(var i=0;i<count;i++)out+=bytes.charCodeAt(i).toString(16).padStart(2,"0");return out.$encode("US-ASCII")},-1);$def(self,"$random_bytes",
function $$random_bytes(count){var self=this;if(count==null)count=nil;return self.$bytes(count)},-1);$def(self,"$base64",function $$base64(count){var self=this;if(count==null)count=nil;return $$$("Base64").$strict_encode64(self.$random_bytes(count)).$encode("US-ASCII")},-1);$def(self,"$urlsafe_base64",function $$urlsafe_base64(count,padding){var self=this;if(count==null)count=nil;if(padding==null)padding=false;return $$$("Base64").$urlsafe_encode64(self.$random_bytes(count),padding).$encode("US-ASCII")},
-1);$def(self,"$uuid",function $$uuid(){var self=this,str=nil;str=self.$hex(16).$split("");str["$[]="](12,"4");str["$[]="](16,(parseInt(str["$[]"](16),16)&3|8).toString(16));str=[str["$[]"]($range(0,8,true)),str["$[]"]($range(8,12,true)),str["$[]"]($range(12,16,true)),str["$[]"]($range(16,20,true)),str["$[]"]($range(20,32,true))];str=$send(str,"map",[],"join".$to_proc());return str.$join("-")});$def(self,"$random_float",function $$random_float(){var self=this,bs=nil,num=nil;bs=self.$bytes(4);num=
0;$send(4,"times",[],function $$1(i){if(i==null)i=nil;num=num["$<<"](8);return num=num["$|"](bs["$[]"](i).$ord())});return $rb_divide(num.$abs(),2147483647)});$def(self,"$random_number",function $$random_number(limit){var self=this;function randomFloat(){return self.$random_float()}function randomInt(max){return Math.floor(randomFloat()*max)}function randomRange(){var min=limit.begin,max=limit.end;if(min===nil||max===nil)return nil;var length=max-min;if(length<0)return nil;if(length===0)return min;
if(max%1===0&&min%1===0&&!limit.excl)length++;return randomInt(length)+min}if(limit==null)return randomFloat();else if(limit.$$is_range)return randomRange();else if(limit.$$is_number){if(limit<=0)$Kernel.$raise($$$("ArgumentError"),"invalid argument - "+limit);if(limit%1===0)return randomInt(limit);else return randomFloat()*limit}else{limit=$Opal["$coerce_to!"](limit,$$$("Integer"),"to_int");if(limit<=0)$Kernel.$raise($$$("ArgumentError"),"invalid argument - "+limit);return randomInt(limit)}},-1);
return $def(self,"$alphanumeric",function $$alphanumeric(count){var self=this,map=nil;if(count==null)count=nil;count=$$("Random").$_verify_count(count);map=$send([$range("0","9",false),$range("a","z",false),$range("A","Z",false)],"map",[],"to_a".$to_proc()).$flatten();return $send($$$("Array"),"new",[count],function $$2(i){var self=$$2.$$s==null?this:$$2.$$s;if(i==null)i=nil;return map["$[]"](self.$random_number(map.$length()))},{$$s:self}).$join()},-1)})(self,$nesting);self.$include($$$($$$("Random"),
"Formatter"));return self.$extend($$$($$$("Random"),"Formatter"))}("::",null,$nesting)};
Opal.modules["corelib/random/mersenne_twister"]=function(Opal){var $klass=Opal.klass,$const_set=Opal.const_set,$send=Opal.send,nil=Opal.nil,$$$=Opal.$$$,mersenne_twister=nil;Opal.add_stubs("generator=");mersenne_twister=function(){var N=624;var M=397;var MATRIX_A=2567483615;var UMASK=2147483648;var LMASK=2147483647;var MIXBITS=function(u,v){return u&UMASK|v&LMASK};var TWIST=function(u,v){return MIXBITS(u,v)>>>1^(v&1?MATRIX_A:0)};function init(s){var mt={left:0,next:N,state:new Array(N)};init_genrand(mt,
s);return mt}function init_genrand(mt,s){var j,i;mt.state[0]=s>>>0;for(j=1;j<N;j++){mt.state[j]=1812433253*(mt.state[j-1]^mt.state[j-1]>>30>>>0)+j;mt.state[j]&=4294967295}mt.left=1;mt.next=N}function next_state(mt){var p=0,_p=mt.state;var j;mt.left=N;mt.next=0;for(j=N-M+1;--j;p++)_p[p]=_p[p+M]^TWIST(_p[p+0],_p[p+1]);for(j=M;--j;p++)_p[p]=_p[p+(M-N)]^TWIST(_p[p+0],_p[p+1]);_p[p]=_p[p+(M-N)]^TWIST(_p[p+0],_p[0])}function genrand_int32(mt){var y;if(--mt.left<=0)next_state(mt);y=mt.state[mt.next++];y^=
y>>>11;y^=y<<7&2636928640;y^=y<<15&4022730752;y^=y>>>18;return y>>>0}function int_pair_to_real_exclusive(a,b){a>>>=5;b>>>=6;return(a*67108864+b)*(1/9007199254740992)}function genrand_real(mt){var a=genrand_int32(mt),b=genrand_int32(mt);return int_pair_to_real_exclusive(a,b)}return{genrand_real:genrand_real,init:init}}();return function($base,$super){var self=$klass($base,$super,"Random");var $a;var MAX_INT=Number.MAX_SAFE_INTEGER||Math.pow(2,53)-1;$const_set(self,"MERSENNE_TWISTER_GENERATOR",{new_seed:function(){return Math.round(Math.random()*
MAX_INT)},reseed:function(seed){return mersenne_twister.init(seed)},rand:function(mt){return mersenne_twister.genrand_real(mt)}});return $a=[$$$(self,"MERSENNE_TWISTER_GENERATOR")],$send(self,"generator=",$a),$a[$a.length-1]}("::",null)};
Opal.modules["corelib/random"]=function(Opal){var $truthy=Opal.truthy,$klass=Opal.klass,$Kernel=Opal.Kernel,$defs=Opal.defs,$Opal=Opal.Opal,$def=Opal.def,$eqeqeq=Opal.eqeqeq,$send=Opal.send,self=Opal.top,nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,attr_reader,to_int,raise,new_seed,coerce_to!,reseed,rand,seed,bytes,===,==,state,_verify_count,encode,join,new,chr,random_number,random_float,const_defined?,const_set");self.$require("corelib/random/formatter");(function($base,$super){var self=$klass($base,
$super,"Random");self.$attr_reader("seed","state");$defs(self,"$_verify_count",function $$_verify_count(count){if(!$truthy(count))count=16;if(typeof count!=="number")count=count.$to_int();if(count<0)$Kernel.$raise($$$("ArgumentError"),"negative string size (or size too big)");count=Math.floor(count);return count});$def(self,"$initialize",function $$initialize(seed){var self=this;if(seed==null)seed=$$$("Random").$new_seed();seed=$Opal["$coerce_to!"](seed,$$$("Integer"),"to_int");self.state=seed;return self.$reseed(seed)},
-1);$def(self,"$reseed",function $$reseed(seed){var self=this;self.seed=seed;return self.$rng=Opal.$$rand.reseed(seed)});$defs(self,"$new_seed",function $$new_seed(){return Opal.$$rand.new_seed()});$defs(self,"$rand",function $$rand(limit){var self=this;return $$$(self,"DEFAULT").$rand(limit)},-1);$defs(self,"$srand",function $$srand(n){var self=this,previous_seed=nil;if(n==null)n=$$$("Random").$new_seed();n=$Opal["$coerce_to!"](n,$$$("Integer"),"to_int");previous_seed=$$$(self,"DEFAULT").$seed();
$$$(self,"DEFAULT").$reseed(n);return previous_seed},-1);$defs(self,"$urandom",function $$urandom(size){return $$$("SecureRandom").$bytes(size)});$def(self,"$==",function $Random_$eq_eq$1(other){var self=this,$ret_or_1=nil;if(!$eqeqeq($$$("Random"),other))return false;if($truthy($ret_or_1=self.$seed()["$=="](other.$seed())))return self.$state()["$=="](other.$state());else return $ret_or_1});$def(self,"$bytes",function $$bytes(length){var self=this;length=$$$("Random").$_verify_count(length);return $send($$$("Array"),
"new",[length],function $$2(){var self=$$2.$$s==null?this:$$2.$$s;return self.$rand(255).$chr()},{$$s:self}).$join().$encode("ASCII-8BIT")});$defs(self,"$bytes",function $$bytes(length){var self=this;return $$$(self,"DEFAULT").$bytes(length)});$def(self,"$rand",function $$rand(limit){var self=this;return self.$random_number(limit)},-1);$def(self,"$random_float",function $$random_float(){var self=this;self.state++;return Opal.$$rand.rand(self.$rng)});$defs(self,"$random_float",function $$random_float(){var self=
this;return $$$(self,"DEFAULT").$random_float()});return $defs(self,"$generator=",function $Random_generator$eq$3(generator){var self=this;Opal.$$rand=generator;if($truthy(self["$const_defined?"]("DEFAULT")))return $$$(self,"DEFAULT").$reseed();else return self.$const_set("DEFAULT",self.$new(self.$new_seed()))})})("::",null);return self.$require("corelib/random/mersenne_twister")};
Opal.modules["corelib/unsupported"]=function(Opal){var $Kernel=Opal.Kernel,$klass=Opal.klass,$send=Opal.send,$slice=Opal.slice,$module=Opal.module,$def=Opal.def,$return_val=Opal.return_val,$alias=Opal.alias,$defs=Opal.defs,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("raise,warn,each,define_method,%,public,private_method_defined?,private_class_method,instance_method,instance_methods,method_defined?,private_methods");var warnings={};function handle_unsupported_feature(message){switch(Opal.config.unsupported_features_severity){case "error":$Kernel.$raise($$$("NotImplementedError"),
message);break;case "warning":warn(message);break;default:}}function warn(string){if(warnings[string])return;warnings[string]=true;self.$warn(string)}(function($base,$super){var self=$klass($base,$super,"String");var ERROR="String#%s not supported. Mutable String methods are not supported in Opal.";return $send(["<<","capitalize!","chomp!","chop!","downcase!","gsub!","lstrip!","next!","reverse!","slice!","squeeze!","strip!","sub!","succ!","swapcase!","tr!","tr_s!","upcase!","prepend","[]=","clear",
"encode!","unicode_normalize!"],"each",[],function $String$1(method_name){var self=$String$1.$$s==null?this:$String$1.$$s;if(method_name==null)method_name=nil;return $send(self,"define_method",[method_name],function $$2($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;return $Kernel.$raise($$$("NotImplementedError"),ERROR["$%"](method_name))},-1)},{$$s:self})})("::",null);(function($base){var self=$module($base,"Kernel");var ERROR="Object tainting is not supported by Opal";
$def(self,"$taint",function $$taint(){var self=this;handle_unsupported_feature(ERROR);return self});$def(self,"$untaint",function $$untaint(){var self=this;handle_unsupported_feature(ERROR);return self});return $def(self,"$tainted?",function $Kernel_tainted$ques$3(){handle_unsupported_feature(ERROR);return false})})("::");(function($base,$super){var self=$klass($base,$super,"Module");$def(self,"$public",function $Module_public$4($a){var $post_args,methods,self=this;$post_args=$slice(arguments);methods=
$post_args;if(methods.length===0){self.$$module_function=false;return nil}return methods.length===1?methods[0]:methods},-1);$def(self,"$private_class_method",function $$private_class_method($a){var $post_args,methods;$post_args=$slice(arguments);methods=$post_args;return methods.length===1?methods[0]:methods},-1);$def(self,"$private_method_defined?",$return_val(false));$def(self,"$private_constant",function $$private_constant($a){var $post_args,$fwd_rest;$post_args=$slice(arguments);$fwd_rest=$post_args;
return nil},-1);$alias(self,"nesting","public");$alias(self,"private","public");$alias(self,"protected","public");$alias(self,"protected_method_defined?","private_method_defined?");$alias(self,"public_class_method","private_class_method");$alias(self,"public_instance_method","instance_method");$alias(self,"public_instance_methods","instance_methods");return $alias(self,"public_method_defined?","method_defined?")})("::",null);(function($base){var self=$module($base,"Kernel");$def(self,"$private_methods",
function $$private_methods($a){var $post_args,methods;$post_args=$slice(arguments);methods=$post_args;return[]},-1);$alias(self,"protected_methods","private_methods");$alias(self,"private_instance_methods","private_methods");return $alias(self,"protected_instance_methods","private_methods")})("::");(function($base,$parent_nesting){var self=$module($base,"Kernel");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$eval",function $Kernel_eval$5($a){var $post_args,$fwd_rest;
$post_args=$slice(arguments);$fwd_rest=$post_args;return $Kernel.$raise($$$("NotImplementedError"),"To use Kernel#eval, you must first require 'opal-parser'. "+("See https://github.com/opal/opal/blob/"+$$("RUBY_ENGINE_VERSION")+"/docs/opal_parser.md for details."))},-1)})("::",$nesting);$defs(self,"$public",function $public$6($a){var $post_args,methods;$post_args=$slice(arguments);methods=$post_args;return methods.length===1?methods[0]:methods},-1);return $defs(self,"$private",function $private$7($a){var $post_args,
methods;$post_args=$slice(arguments);methods=$post_args;return methods.length===1?methods[0]:methods},-1)};
Opal.modules["corelib/binding"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,$slice=Opal.slice,$send=Opal.send,$to_a=Opal.to_a,$Kernel=Opal.Kernel,$return_ivar=Opal.return_ivar,$eqeq=Opal.eqeq,$thrower=Opal.thrower,$module=Opal.module,$const_set=Opal.const_set,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("js_eval,call,raise,inspect,include?,==,receiver,eval,attr_reader,new");(function($base,$super){var self=$klass($base,$super,"Binding");var $proto=
self.$$prototype;$proto.jseval=$proto.scope_variables=nil;$def(self,"$initialize",function $$initialize(jseval,scope_variables,receiver,source_location){var $a,self=this;if(scope_variables==null)scope_variables=[];if(source_location==null)source_location=nil;$a=[jseval,scope_variables,receiver,source_location],self.jseval=$a[0],self.scope_variables=$a[1],self.receiver=$a[2],self.source_location=$a[3],$a;if($truthy(typeof receiver!==undefined))return nil;else return receiver=self.$js_eval("self")},
-2);$def(self,"$js_eval",function $$js_eval($a){var $post_args,args,self=this;$post_args=$slice(arguments);args=$post_args;if($truthy(self.jseval))return $send(self.jseval,"call",$to_a(args));else return $Kernel.$raise("Evaluation on a Proc#binding is not supported")},-1);$def(self,"$local_variable_get",function $$local_variable_get(symbol){var self=this;try{return self.$js_eval(symbol)}catch($err){if(Opal.rescue($err,[$$$("Exception")]))try{return $Kernel.$raise($$$("NameError"),"local variable `"+
symbol+"' is not defined for "+self.$inspect())}finally{Opal.pop_exception()}else throw $err;}});$def(self,"$local_variable_set",function $$local_variable_set(symbol,value){var self=this;Opal.Binding.tmp_value=value;self.$js_eval(""+symbol+" = Opal.Binding.tmp_value");delete Opal.Binding.tmp_value;return value});$def(self,"$local_variables",$return_ivar("scope_variables"));$def(self,"$local_variable_defined?",function $Binding_local_variable_defined$ques$1(value){var self=this;return self.scope_variables["$include?"](value)});
$def(self,"$eval",function $Binding_eval$2(str,file,line){try{var $t_eval_return=$thrower("eval_return");var self=this;if(file==null)file=nil;if(line==null)line=nil;if($eqeq(str,"self"))return self.$receiver();return $Kernel.$eval(str,self,file,line)}catch($e){if($e===Opal.t_eval_return)return $e.$v;throw $e;}},-2);return self.$attr_reader("receiver","source_location")})("::",null);(function($base){var self=$module($base,"Kernel");return $def(self,"$binding",function $$binding(){return $Kernel.$raise("Opal doesn't support dynamic calls to binding")})})("::");
return $const_set($nesting[0],"TOPLEVEL_BINDING",$$$("Binding").$new(function(js){return(new Function("self","return "+js))(self)},[],self,["<main>",0]))};
Opal.modules["corelib/irb"]=function(Opal){var $module=Opal.module,$truthy=Opal.truthy,$Kernel=Opal.Kernel,$defs=Opal.defs,$hash=Opal.hash,$gvars=Opal.gvars,$lambda=Opal.lambda,$send=Opal.send,$rb_plus=Opal.rb_plus,$const_set=Opal.const_set,$klass=Opal.klass,$def=Opal.def,$Opal=Opal.Opal,$range=Opal.range,$eqeq=Opal.eqeq,$thrower=Opal.thrower,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("include?,raise,attr_accessor,singleton_class,output=,browser?,each,dup,write_proc=,proc,+,output,join,last,split,end_with?,call,write_proc,tty=,read_proc,read_proc=,freeze,new,string,ensure_loaded,prepare_console,loop,print,gets,puts,start_with?,[],==,silence,message,empty?,warnings,warn,full_message,eval_and_print,irb");
(function($base,$parent_nesting){var self=$module($base,"Opal");var $nesting=[self].concat($parent_nesting);return function($base,$parent_nesting){var self=$module($base,"IRB");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$defs(self,"$ensure_loaded",function $$ensure_loaded(library){var version=nil,url=nil;if($truthy(Opal.loaded_features["$include?"](library)))return nil;version=$truthy($$("RUBY_ENGINE_VERSION")["$include?"]("dev"))?"master":$$("RUBY_ENGINE_VERSION");url="https://cdn.opalrb.com/opal/"+
version+"/"+library+".js";var libcode;if(typeof XMLHttpRequest!=="undefined"){var r=new XMLHttpRequest;r.open("GET",url,false);r.send("");libcode=r.responseText}else $Kernel.$raise("You need to provision "+library+" yourself in this environment");(new Function("Opal",libcode))(Opal);Opal.require(library);if($truthy(Opal.loaded_features["$include?"](library)))return nil;else return $Kernel.$raise("Could not load "+library+" for some reason")});self.$singleton_class().$attr_accessor("output");$defs(self,
"$prepare_console",function $$prepare_console(){var block=$$prepare_console.$$p||nil,$a,self=this,original=nil,original_read_proc=nil;if($gvars.stdout==null)$gvars.stdout=nil;if($gvars.stderr==null)$gvars.stderr=nil;if($gvars.stdin==null)$gvars.stdin=nil;$$prepare_console.$$p=null;return function(){try{self["$output="]("");original=$hash($gvars.stdout,$lambda(function $$1(i){if(i==null)i=nil;return $gvars.stdout=i}),$gvars.stderr,$lambda(function $$2(i){if(i==null)i=nil;return $gvars.stderr=i}));
if($truthy(self["$browser?"]())){$send(original,"each",[],function $$3(pipe,pipe_setter){var self=$$3.$$s==null?this:$$3.$$s,new_pipe=nil;if(pipe==null)pipe=nil;if(pipe_setter==null)pipe_setter=nil;new_pipe=pipe.$dup();new_pipe["$write_proc="]($send(self,"proc",[],function $$4(str){var self=$$4.$$s==null?this:$$4.$$s;if(str==null)str=nil;self["$output="]($rb_plus(self.$output(),str));self["$output="](self.$output().$split("\n").$last(30).$join("\n"));if($truthy(str["$end_with?"]("\n")))self["$output="]($rb_plus(self.$output(),
"\n"));return pipe.$write_proc().$call(str)},{$$s:self}));new_pipe["$tty="](false);return pipe_setter.$call(new_pipe)},{$$s:self});original_read_proc=$gvars.stdin.$read_proc();$gvars.stdin["$read_proc="](function(s){var p=prompt(self.$output());if(p!==null)return p+"\n";return nil})}return Opal.yieldX(block,[])}finally{$send(original,"each",[],function $$5(pipe,pipe_setter){if(pipe==null)pipe=nil;if(pipe_setter==null)pipe_setter=nil;return pipe_setter.$call(pipe)}),$a=[original_read_proc],$send($gvars.stdin,
"read_proc=",$a),$a[$a.length-1],$a=[""],$send(self,"output=",$a),$a[$a.length-1]}}()});$defs(self,"$browser?",function $IRB_browser$ques$6(){return typeof document!=="undefined"&&typeof prompt!=="undefined"});$const_set($nesting[0],"LINEBREAKS",["unexpected token $end","unterminated string meets end of file"].$freeze());return function($base,$super){var self=$klass($base,$super,"Silencer");var $proto=self.$$prototype;$proto.collector=$proto.stderr=nil;$def(self,"$initialize",function $$initialize(){var self=
this;if($gvars.stderr==null)$gvars.stderr=nil;return self.stderr=$gvars.stderr});$def(self,"$silence",function $$silence(){var $yield=$$silence.$$p||nil,self=this;$$silence.$$p=null;return function(){try{self.collector=$$$("StringIO").$new();$gvars.stderr=self.collector;return Opal.yieldX($yield,[])}finally{$gvars.stderr=self.stderr}}()});return $def(self,"$warnings",function $$warnings(){var self=this;return self.collector.$string()})}($nesting[0],null)}($nesting[0],$nesting)})($nesting[0],$nesting);
(function($base,$super,$parent_nesting){var self=$klass($base,$super,"Binding");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$irb",function $$irb(){try{var $t_return=$thrower("return");var self=this,silencer=nil;$$$($Opal,"IRB").$ensure_loaded("opal-replutils");silencer=$$$($$$($Opal,"IRB"),"Silencer").$new();return $send($$$($Opal,"IRB"),"prepare_console",[],function $$7(){var self=$$7.$$s==null?this:$$7.$$s;return function(){try{var $t_break=$thrower("break");
return $send(self,"loop",[],function $$8(){var self=$$8.$$s==null?this:$$8.$$s,line=nil,code=nil,mode=nil,js_code=nil,e=nil;self.$print(">> ");line=self.$gets();if(!$truthy(line))$t_break.$throw();code="";if($truthy($$$($Opal,"IRB")["$browser?"]()))self.$puts(line);if($truthy(line["$start_with?"]("ls "))){code=line["$[]"]($range(3,-1,false));mode="ls"}else if($eqeq(line,"ls\n")){code="self";mode="ls"}else if($truthy(line["$start_with?"]("show "))){code=line["$[]"]($range(5,-1,false));mode="show"}else{code=
line;mode="inspect"}js_code=nil;do{try{$send(silencer,"silence",[],function $$9(){return js_code=Opal.compile(code,{irb:true})})}catch($err){if(Opal.rescue($err,[$$("SyntaxError")])){e=$err;try{if($truthy($$$($$$($Opal,"IRB"),"LINEBREAKS")["$include?"](e.$message()))){self.$print(".. ");line=self.$gets();if(!$truthy(line))$t_return.$throw();if($truthy($$$($Opal,"IRB")["$browser?"]()))self.$puts(line);code=$rb_plus(code,line);continue}else if($truthy(silencer.$warnings()["$empty?"]()))self.$warn(e.$full_message());
else self.$warn(silencer.$warnings())}finally{Opal.pop_exception()}}else throw $err;}break}while(1);if($eqeq(mode,"show")){self.$puts(js_code);$t_return.$throw()}return self.$puts($$$("REPLUtils").$eval_and_print(js_code,mode,false,self))},{$$s:self,$$ret:$t_return})}catch($e){if($e===$t_break)return $e.$v;throw $e;}}()},{$$s:self})}catch($e){if($e===$t_return)return $e.$v;throw $e;}})})("::",null,$nesting);Opal.irb=function(fun){$$$("Binding").$new(fun).$irb()};Opal.load_parser=function(){Opal.Opal.IRB.$ensure_loaded("opal-parser")};
if(typeof Opal.eval==="undefined")Opal.eval=function(str){Opal.load_parser();return Opal.eval(str)};if(typeof Opal.compile==="undefined")Opal.compile=function(str,options){Opal.load_parser();return Opal.compile(str,options)}};
Opal.modules["opal"]=function(Opal){var $Object=Opal.Object,nil=Opal.nil;Opal.add_stubs("require,autoload");$Object.$require("opal/base");$Object.$require("opal/mini");$Object.$require("corelib/kernel/format");$Object.$require("corelib/string/encoding");$Object.$autoload("Math","corelib/math");$Object.$require("corelib/complex/base");$Object.$autoload("Complex","corelib/complex");$Object.$require("corelib/rational/base");$Object.$autoload("Rational","corelib/rational");$Object.$require("corelib/time");
$Object.$autoload("Struct","corelib/struct");$Object.$autoload("Set","corelib/set");$Object.$autoload("Dir","corelib/dir");$Object.$autoload("File","corelib/file");$Object.$require("corelib/process/base");$Object.$autoload("Process","corelib/process");$Object.$autoload("Random","corelib/random");$Object.$require("corelib/unsupported");$Object.$require("corelib/binding");return $Object.$require("corelib/irb")};Opal.load_normalized("opal");
Opal.modules["shared/constants/bytecode_constants"]=function(Opal){var $module=Opal.module,$const_set=Opal.const_set,$nesting=[],nil=Opal.nil;return function($base,$parent_nesting){var self=$module($base,"BytecodeConstants");var $nesting=[self].concat($parent_nesting);$const_set($nesting[0],"NOP",0);$const_set($nesting[0],"BINARY_OP",1);$const_set($nesting[0],"BINARY_OP_ADD",2);$const_set($nesting[0],"BINARY_OP_AND",3);$const_set($nesting[0],"BINARY_OP_AT",4);$const_set($nesting[0],"BINARY_OP_DIV",
5);$const_set($nesting[0],"BINARY_OP_EQ",6);$const_set($nesting[0],"BINARY_OP_GE",7);$const_set($nesting[0],"BINARY_OP_GT",8);$const_set($nesting[0],"BINARY_OP_IDIV",9);$const_set($nesting[0],"BINARY_OP_LE",10);$const_set($nesting[0],"BINARY_OP_LT",11);$const_set($nesting[0],"BINARY_OP_MINUS",12);$const_set($nesting[0],"BINARY_OP_MOD",13);$const_set($nesting[0],"BINARY_OP_NEQ",14);$const_set($nesting[0],"BINARY_OP_OR",15);$const_set($nesting[0],"BINARY_OP_STAR",16);$const_set($nesting[0],"BUILD_CLASS",
17);$const_set($nesting[0],"BUILD_DICTIONARY",18);$const_set($nesting[0],"BUILD_ELLIPSIS",19);$const_set($nesting[0],"BUILD_LIST",20);$const_set($nesting[0],"BUILD_SLICE",21);$const_set($nesting[0],"CALL",22);$const_set($nesting[0],"CALL_PRIMITIVE",23);$const_set($nesting[0],"CLEAR_TEMP",24);$const_set($nesting[0],"COMPARE_OP",25);$const_set($nesting[0],"DUP",26);$const_set($nesting[0],"GET_AT",27);$const_set($nesting[0],"ITER_IS_EOF",28);$const_set($nesting[0],"ITER_NEXT",29);$const_set($nesting[0],
"ITER_RESET",30);$const_set($nesting[0],"JUMP_IF_FALSE",31);$const_set($nesting[0],"JUMP_IF_TRUE",32);$const_set($nesting[0],"JUMP_TO",33);$const_set($nesting[0],"LIST_EXTEND",34);$const_set($nesting[0],"LOAD_ATTR",35);$const_set($nesting[0],"LOAD_BLOCK",36);$const_set($nesting[0],"LOAD_CLASS_VARIABLE",37);$const_set($nesting[0],"LOAD_CONST",38);$const_set($nesting[0],"LOAD_GLOBAL",39);$const_set($nesting[0],"LOAD_INSTANCE",40);$const_set($nesting[0],"LOAD_LOCAL",41);$const_set($nesting[0],"LOAD_NAME",
42);$const_set($nesting[0],"LOAD_SUBSCR",43);$const_set($nesting[0],"LOAD_TEMP",44);$const_set($nesting[0],"MAKE_FUNCTION",45);$const_set($nesting[0],"NOT",46);$const_set($nesting[0],"POP",47);$const_set($nesting[0],"PUSH_FALSE",48);$const_set($nesting[0],"PUSH_NONE",49);$const_set($nesting[0],"PUSH_SELF",50);$const_set($nesting[0],"PUSH_TRUE",51);$const_set($nesting[0],"PUT_AT",52);$const_set($nesting[0],"RESUME",53);$const_set($nesting[0],"RETURN_VALUE",54);$const_set($nesting[0],"SEND",55);$const_set($nesting[0],
"SEND_SUPER",56);$const_set($nesting[0],"SLEEP",57);$const_set($nesting[0],"STORE_ATTR",58);$const_set($nesting[0],"STORE_GLOBAL",59);$const_set($nesting[0],"STORE_INSTANCE",60);$const_set($nesting[0],"STORE_LOCAL",61);$const_set($nesting[0],"STORE_NAME",62);$const_set($nesting[0],"STORE_SUBSCR",63);$const_set($nesting[0],"STORE_TEMP",64);$const_set($nesting[0],"SUSPEND",65);$const_set($nesting[0],"SYNC_LINE_NUMBER",66);$const_set($nesting[0],"UNKNOWN_OPERATOR",67);$const_set($nesting[0],"X_MESSAGE",
68);return $const_set($nesting[0],"X_STACK_CHECK",69)}($nesting[0],$nesting)};
Opal.modules["shared/util/string_writer"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$rb_plus=Opal.rb_plus,$send=Opal.send,$nesting=[],nil=Opal.nil;Opal.add_stubs("attr_accessor,attr_reader,clear,to_s,push,buffer,+,size,append,pr,nl,times,join");return function($base,$super){var self=$klass($base,$super,"StringWriter");var $proto=self.$$prototype;$proto.col=$proto.row=nil;self.$attr_accessor("buffer");self.$attr_reader("col");self.$attr_reader("row");$def(self,"$initialize",function $$initialize(){var self=
this;return self.$clear()});$def(self,"$append",function $$append(value){var self=this,s=nil;s=value.$to_s();self.$buffer().$push(s);return self.col=$rb_plus(self.col,s.$size())});$def(self,"$clear",function $$clear(){var self=this;self.buffer=[];self.row=1;return self.col=1});$def(self,"$flush",function $$flush(){var self=this,s=nil;s=self.$to_s();self.$clear();return s});$def(self,"$nl",function $$nl(){var self=this;self.$append("\n");self.col=1;return self.row=$rb_plus(self.row,1)});$def(self,
"$pr",function $$pr(s){var self=this;return self.$append(s)});$def(self,"$prn",function $$prn(s){var self=this;self.$pr(s);return self.$nl()});$def(self,"$sp",function $$sp(n){var self=this;if(n==null)n=1;return $send(n,"times",[],function $$1(){var self=$$1.$$s==null?this:$$1.$$s;return self.$pr(" ")},{$$s:self})},-1);return $def(self,"$to_s",function $$to_s(){var self=this;return self.$buffer().$join()})}($nesting[0],null)};
Opal.modules["shared/util/bytecode_decoder"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$rb_lt=Opal.rb_lt,$rb_plus=Opal.rb_plus,$defs=Opal.defs,$eqeqeq=Opal.eqeqeq,$rb_minus=Opal.rb_minus,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include,new,bytecodes,literals,<,size,prn,decode,+,pc_inc,to_s,[],===,%,get_pc_str,get_arg_count,get_target,shorten,get_literal,-");self.$require("shared/constants/bytecode_constants");self.$require("shared/util/string_writer");
self.$include($$("BytecodeConstants"));return function($base,$super,$parent_nesting){var self=$klass($base,$super,"BytecodeDecoder");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$defs(self,"$decode_code_object",function $$decode_code_object(code_object){var self=this,sw=nil,bytecodes=nil,literals=nil,pc=nil;sw=$$("StringWriter").$new();bytecodes=code_object.$bytecodes();literals=code_object.$literals();pc=0;while($truthy($rb_lt(pc,bytecodes.$size()))){sw.$prn(self.$decode(bytecodes,
literals,pc));pc=$rb_plus(pc,self.$pc_inc(bytecodes,pc))}return sw.$to_s()});$defs(self,"$decode",function $$decode(bytecodes,literals,pc){var self=this,bytecode=nil,$ret_or_1=nil;bytecode=bytecodes["$[]"](pc);if($eqeqeq($$("NOP"),$ret_or_1=bytecode))return"%s NOP"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP"),$ret_or_1))return"%s BINARY_OP"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_ADD"),$ret_or_1))return"%s BINARY_OP_ADD"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_AND"),
$ret_or_1))return"%s BINARY_OP_AND"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_AT"),$ret_or_1))return"%s BINARY_OP_AT"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_DIV"),$ret_or_1))return"%s BINARY_OP_DIV"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_EQ"),$ret_or_1))return"%s BINARY_OP_EQ"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_GE"),$ret_or_1))return"%s BINARY_OP_GE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_GT"),$ret_or_1))return"%s BINARY_OP_GT"["$%"](self.$get_pc_str(pc));
else if($eqeqeq($$("BINARY_OP_DIV"),$ret_or_1))return"%s BINARY_OP_IDIV"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_LE"),$ret_or_1))return"%s BINARY_OP_LE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_LT"),$ret_or_1))return"%s BINARY_OP_LT"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_MINUS"),$ret_or_1))return"%s BINARY_OP_MINUS"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_MOD"),$ret_or_1))return"%s BINARY_OP_MOD"["$%"](self.$get_pc_str(pc));
else if($eqeqeq($$("BINARY_OP_NEQ"),$ret_or_1))return"%s BINARY_OP_NEQ"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_OR"),$ret_or_1))return"%s BINARY_OP_OR"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BINARY_OP_STAR"),$ret_or_1))return"%s BINARY_OP_STAR"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BUILD_ELLIPSIS"),$ret_or_1))return"%s BUILD_ELLIPSIS"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BUILD_LIST"),$ret_or_1))return"%s BUILD_LIST %s"["$%"]([self.$get_pc_str(pc),self.$get_arg_count(bytecodes,
$rb_plus(pc,1))]);else if($eqeqeq($$("BUILD_DICTIONARY"),$ret_or_1))return"%s BUILD_DICTIONARY %s"["$%"]([self.$get_pc_str(pc),self.$get_arg_count(bytecodes,$rb_plus(pc,1))]);else if($eqeqeq($$("BUILD_SLICE"),$ret_or_1))return"%s BUILD_SLICE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("CALL"),$ret_or_1))return"%s CALL %s"["$%"]([self.$get_pc_str(pc),self.$get_arg_count(bytecodes,$rb_plus(pc,1))]);else if($eqeqeq($$("CALL_PRIMITIVE"),$ret_or_1))return"%s CALL_PRIMITIVE"["$%"](self.$get_pc_str(pc));
else if($eqeqeq($$("CLEAR_TEMP"),$ret_or_1))return"%s CLEAR_TEMP"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("COMPARE_OP"),$ret_or_1))return"%s COMPARE_OP"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("DUP"),$ret_or_1))return"%s DUP"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("ITER_IS_EOF"),$ret_or_1))return"%s ITER_IS_EOF"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("ITER_NEXT"),$ret_or_1))return"%s ITER_NEXT"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("ITER_RESET"),$ret_or_1))return"%s ITER_RESET"["$%"](self.$get_pc_str(pc));
else if($eqeqeq($$("JUMP_IF_FALSE"),$ret_or_1))return"%s JUMP_IF_FALSE %s"["$%"]([self.$get_pc_str(pc),self.$get_target(bytecodes,$rb_plus(pc,1))]);else if($eqeqeq($$("JUMP_IF_TRUE"),$ret_or_1))return"%s JUMP_IF_TRUE %s"["$%"]([self.$get_pc_str(pc),self.$get_target(bytecodes,$rb_plus(pc,1))]);else if($eqeqeq($$("JUMP_TO"),$ret_or_1))return"%s JUMP_TO %s"["$%"]([self.$get_pc_str(pc),self.$get_target(bytecodes,$rb_plus(pc,1))]);else if($eqeqeq($$("LIST_EXTEND"),$ret_or_1))return"%s LIST_EXTEND"["$%"](self.$get_pc_str(pc));
else if($eqeqeq($$("LOAD_ATTR"),$ret_or_1))return"%s LOAD_ATTR %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1)).$to_s().$shorten()]);else if($eqeqeq($$("LOAD_BLOCK"),$ret_or_1))return"%s LOAD_BLOCK"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("BUILD_CLASS"),$ret_or_1))return"%s LOAD_BUILD_CLASS"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("LOAD_CLASS_VARIABLE"),$ret_or_1))return"%s LOAD_CLASS_VARIABLE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("LOAD_CONST"),
$ret_or_1))return"%s LOAD_CONST %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1)).$to_s().$shorten()]);else if($eqeqeq($$("LOAD_GLOBAL"),$ret_or_1))return"%s LOAD_GLOBAL %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1)).$to_s().$shorten()]);else if($eqeqeq($$("LOAD_INSTANCE"),$ret_or_1))return"%s LOAD_INSTANCE %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1)).$to_s().$shorten()]);else if($eqeqeq($$("LOAD_LOCAL"),
$ret_or_1))return"%s LOAD_LOCAL %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1)).$to_s().$shorten()]);else if($eqeqeq($$("LOAD_NAME"),$ret_or_1))return"%s LOAD_NAME %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1)).$to_s().$shorten()]);else if($eqeqeq($$("LOAD_SUBSCR"),$ret_or_1))return"%s LOAD_SUBSCR"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("LOAD_TEMP"),$ret_or_1))return"%s LOAD_TEMP %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,
literals,$rb_plus(pc,1)).$to_s().$shorten()]);else if($eqeqeq($$("MAKE_FUNCTION"),$ret_or_1))return"%s MAKE_FUNCTION"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("NOT"),$ret_or_1))return"%s NOT"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("POP"),$ret_or_1))return"%s POP"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("PUSH_FALSE"),$ret_or_1))return"%s PUSH_FALSE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("PUSH_NONE"),$ret_or_1))return"%s PUSH_NONE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("PUSH_SELF"),
$ret_or_1))return"%s PUSH_SELF"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("PUSH_TRUE"),$ret_or_1))return"%s PUSH_TRUE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("RESUME"),$ret_or_1))return"%s RESUME"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("RETURN_VALUE"),$ret_or_1))return"%s RETURN_VALUE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("SEND"),$ret_or_1))return"%s SEND %s %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1)),self.$get_arg_count(bytecodes,
$rb_plus(pc,2))]);else if($eqeqeq($$("SEND_SUPER"),$ret_or_1))return"%s SEND_SUPER %s %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1)),self.$get_arg_count(bytecodes,$rb_plus(pc,2))]);else if($eqeqeq($$("SLEEP"),$ret_or_1))return"%s SLEEP %s %s"["$%"]([self.$get_pc_str(pc),self.$get_arg_count(bytecodes,$rb_plus(pc,1))]);else if($eqeqeq($$("STORE_GLOBAL"),$ret_or_1))return"%s STORE_GLOBAL %s"["$%"]([self.$get_pc_str(pc),self.$get_target(bytecodes,$rb_plus(pc,1))]);
else if($eqeqeq($$("STORE_INSTANCE"),$ret_or_1))return"%s STORE_INSTANCE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("STORE_LOCAL"),$ret_or_1))return"%s STORE_LOCAL %s"["$%"]([self.$get_pc_str(pc),self.$get_literal(bytecodes,literals,$rb_plus(pc,1))]);else if($eqeqeq($$("STORE_NAME"),$ret_or_1))return"%s STORE_NAME"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("STORE_SUBSCR"),$ret_or_1))return"%s STORE_SUBSCR"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("STORE_TEMP"),$ret_or_1))return"%s STORE_TEMP %s"["$%"]([self.$get_pc_str(pc),
self.$get_literal(bytecodes,literals,$rb_plus(pc,1))]);else if($eqeqeq($$("SUSPEND"),$ret_or_1))return"%s SUSPEND"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("SYNC_LINE_NUMBER"),$ret_or_1))return"%s SYNC_LINE_NUMBER"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("UNKNOWN_OPERATOR"),$ret_or_1))return"%s UNKNOWN_OPERATOR"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("X_MESSAGE"),$ret_or_1))return"%s X_MESSAGE"["$%"](self.$get_pc_str(pc));else if($eqeqeq($$("X_STACK_CHECK"),$ret_or_1))return"%s X_STACK_CHECK"["$%"](self.$get_pc_str(pc));
else return"%s bytecode not found"["$%"](bytecode)});$defs(self,"$get_arg_count",function $$get_arg_count(bytecodes,pc){var self=this;return self.$get_pc_str(bytecodes["$[]"](pc))});$defs(self,"$get_literal",function $$get_literal(bytecodes,literals,pc){return literals["$[]"](bytecodes["$[]"](pc))});$defs(self,"$get_pc_str",function $$get_pc_str(pc){var s=nil;s="000%s"["$%"](pc);return s["$[]"](Opal.Range.$new($rb_minus(s.$size(),3),$rb_minus(s.$size(),1),false))});$defs(self,"$get_target",function $$get_target(bytecodes,
pc){var self=this;return self.$get_pc_str(bytecodes["$[]"](pc))});return $defs(self,"$pc_inc",function $$pc_inc(bytecodes,pc){var $ret_or_1=nil;if($eqeqeq($$("BUILD_LIST"),$ret_or_1=bytecodes["$[]"](pc))||($eqeqeq($$("BUILD_DICTIONARY"),$ret_or_1)||($eqeqeq($$("CALL"),$ret_or_1)||($eqeqeq($$("JUMP_IF_FALSE"),$ret_or_1)||($eqeqeq($$("JUMP_IF_TRUE"),$ret_or_1)||($eqeqeq($$("JUMP_TO"),$ret_or_1)||($eqeqeq($$("LOAD_ATTR"),$ret_or_1)||($eqeqeq($$("LOAD_CONST"),$ret_or_1)||($eqeqeq($$("LOAD_GLOBAL"),$ret_or_1)||
($eqeqeq($$("LOAD_INSTANCE"),$ret_or_1)||($eqeqeq($$("LOAD_LOCAL"),$ret_or_1)||($eqeqeq($$("LOAD_NAME"),$ret_or_1)||($eqeqeq($$("LOAD_TEMP"),$ret_or_1)||($eqeqeq($$("POP_JUMP_IF_FALSE"),$ret_or_1)||($eqeqeq($$("POP_JUMP_IF_TRUE"),$ret_or_1)||($eqeqeq($$("SLEEP"),$ret_or_1)||($eqeqeq($$("STORE_GLOBAL"),$ret_or_1)||($eqeqeq($$("STORE_LOCAL"),$ret_or_1)||($eqeqeq($$("STORE_NAME"),$ret_or_1)||$eqeqeq($$("STORE_TEMP"),$ret_or_1))))))))))))))))))))return 2;else if($eqeqeq($$("SEND"),$ret_or_1)||$eqeqeq($$("SEND_SUPER"),
$ret_or_1))return 3;else return 1})}($nesting[0],null,$nesting)};
Opal.modules["shared/compiler/core/code_object"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$send=Opal.send,$truthy=Opal.truthy,$return_val=Opal.return_val,$assign_ivar=Opal.assign_ivar,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,get_parameter_names,parameters,min,size,times,[],set_local,nil?,apply_args,push_home_context,decode_code_object,arg_names,%,bytecodes,literals");self.$require("shared/util/bytecode_decoder");return function($base,$super,$parent_nesting){var self=
$klass($base,$super,"CodeObject");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("bytecodes");self.$attr_reader("is_compiled");self.$attr_reader("literals");self.$attr_reader("parameters");self.$attr_reader("receiver");self.$attr_reader("src");$def(self,"$initialize",function $$initialize(bytecodes_arg,literals_arg,src_arg){var self=this;self.bytecodes=bytecodes_arg;self.literals=literals_arg;self.src=src_arg;self.is_compiled=false;self.parameters=nil;return self.receiver=
nil});$def(self,"$apply_args",function $$apply_args(interpreter,args){var self=this,parameter_names=nil,n=nil;parameter_names=self.$parameters().$get_parameter_names();n=[parameter_names.$size(),args.$size()].$min();return $send(n,"times",[],function $$1(i){var name=nil,arg=nil;if(i==null)i=nil;name=parameter_names["$[]"](i);arg=args["$[]"](i);return interpreter.$set_local(name,arg)})});$def(self,"$call",function $$call(interpreter,args){var self=this;if(!$truthy(self.$parameters()["$nil?"]()))self.$apply_args(interpreter,
args);return interpreter.$push_home_context(self)});$def(self,"$compile",$return_val(nil));$def(self,"$disassemble",function $$disassemble(){var self=this;return $$("BytecodeDecoder").$decode_code_object(self)});$def(self,"$get_arg_names",function $$get_arg_names(){var self=this;if($truthy(self.$parameters()["$nil?"]()))return[];else return self.$parameters().$arg_names()});$def(self,"$set_parameters",$assign_ivar("parameters"));$def(self,"$set_receiver",$assign_ivar("receiver"));return $def(self,
"$to_s",function $$to_s(){var self=this;return"CodeObject(%s, %s)"["$%"]([self.$bytecodes(),self.$literals()])})}($nesting[0],null,$nesting)};
Opal.modules["shared/compiler/core/compiler_util"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$truthy=Opal.truthy,$send=Opal.send,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,push,bytecodes,new,literals,src,index,nil?,size,add_bytecode,literal_index,args,temps,op_send_message_with_args,op_send_super_message_with_args,[]=");self.$require("shared/constants/bytecode_constants");self.$require("shared/compiler/core/code_object");return function($base,$super,
$parent_nesting){var self=$klass($base,$super,"CompilerUtil");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("args");self.$attr_reader("bytecodes");self.$attr_reader("bytecodes_stack");self.$attr_reader("last_line_no");self.$attr_reader("literals");self.$attr_reader("literals_stack");self.$attr_reader("src");self.$attr_reader("temps");self.$include($$("BytecodeConstants"));$def(self,"$initialize",function $$initialize(src_arg){var self=this;if(src_arg==null)src_arg=
"";self.src=src_arg;self.args=[];self.bytecodes=[];self.bytecodes_stack=[];self.last_line_no=0;self.literals=[];self.literals_stack=[];return self.temps=[]},-1);$def(self,"$add_bytecode",function $$add_bytecode(ast_node,bytecode){var self=this;return self.$bytecodes().$push(bytecode)});$def(self,"$get_code_object",function $$get_code_object(){var self=this;return $$("CodeObject").$new(self.$bytecodes(),self.$literals(),self.$src())});$def(self,"$literal_index",function $$literal_index(literal_value){var self=
this,index=nil;index=self.$literals().$index(literal_value);if($truthy(index["$nil?"]())){self.$literals().$push(literal_value);index=self.$literals().$index(literal_value)}return index});$def(self,"$mark",function $$mark(ast_node){var self=this;return self.$bytecodes().$size()});$def(self,"$op_binary_divide",function $$op_binary_divide(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_DIV"))});$def(self,"$op_binary_equals",function $$op_binary_equals(ast_node){var self=this;
return self.$add_bytecode(ast_node,$$("BINARY_OP_EQ"))});$def(self,"$op_binary_greater_than",function $$op_binary_greater_than(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_GT"))});$def(self,"$op_binary_gt_eq",function $$op_binary_gt_eq(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_GE"))});$def(self,"$op_binary_int_divide",function $$op_binary_int_divide(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_IDIV"))});$def(self,
"$op_binary_less_than",function $$op_binary_less_than(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_LT"))});$def(self,"$op_binary_lt_eq",function $$op_binary_lt_eq(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_LE"))});$def(self,"$op_binary_minus",function $$op_binary_minus(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_MINUS"))});$def(self,"$op_binary_mod",function $$op_binary_mod(ast_node){var self=this;return self.$add_bytecode(ast_node,
$$("BINARY_OP_MOD"))});$def(self,"$op_binary_multiply",function $$op_binary_multiply(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_STAR"))});$def(self,"$op_binary_not_eq",function $$op_binary_not_eq(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_NEQ"))});$def(self,"$op_binary_plus",function $$op_binary_plus(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_ADD"))});$def(self,"$op_build_class",function $$op_build_class(ast_node,
name,child_count){var self=this;self.$add_bytecode(ast_node,$$("BUILD_CLASS"));self.$add_bytecode(ast_node,self.$literal_index(name));return self.$add_bytecode(ast_node,child_count)});$def(self,"$op_build_dictionary",function $$op_build_dictionary(ast_node,number_args){var self=this;self.$add_bytecode(ast_node,$$("BUILD_DICTIONARY"));return self.$add_bytecode(ast_node,number_args)});$def(self,"$op_build_ellipsis",function $$op_build_ellipsis(ast_node){var self=this;return self.$add_bytecode(ast_node,
$$("BUILD_ELLIPSIS"))});$def(self,"$op_build_list",function $$op_build_list(ast_node,number_args){var self=this;self.$add_bytecode(ast_node,$$("BUILD_LIST"));return self.$add_bytecode(ast_node,number_args)});$def(self,"$op_call",function $$op_call(ast_node,number_args){var self=this;self.$add_bytecode(ast_node,$$("CALL"));return self.$add_bytecode(ast_node,number_args)});$def(self,"$op_clear_temp",function $$op_clear_temp(ast_node,name){var self=this;self.$add_bytecode(ast_node,$$("CLEAR_TEMP"));
return self.$add_bytecode(ast_node,self.$literal_index(name))});$def(self,"$op_comp_eq",function $$op_comp_eq(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_EQ"))});$def(self,"$op_comp_gt",function $$op_comp_gt(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_GT"))});$def(self,"$op_comp_gte",function $$op_comp_gte(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_GE"))});$def(self,"$op_comp_lt",function $$op_comp_lt(ast_node){var self=
this;return self.$add_bytecode(ast_node,$$("BINARY_OP_LT"))});$def(self,"$op_comp_lte",function $$op_comp_lte(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("BINARY_OP_LE"))});$def(self,"$op_declare_arg_variable",function $$op_declare_arg_variable(ast_node,arg_name){var self=this;return self.$args().$push(arg_name)});$def(self,"$op_declare_local_variable",function $$op_declare_local_variable(ast_node,local_name){var self=this;return self.$temps().$push(local_name)});$def(self,"$op_dup",
function $$op_dup(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("DUP"))});$def(self,"$op_get_at",function $$op_get_at(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("GET_AT"))});$def(self,"$op_iter_is_eof",function $$op_iter_is_eof(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("ITER_IS_EOF"))});$def(self,"$op_iter_next",function $$op_iter_next(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("ITER_NEXT"))});$def(self,"$op_iter_reset",function $$op_iter_reset(ast_node){var self=
this;return self.$add_bytecode(ast_node,$$("ITER_RESET"))});$def(self,"$op_jump_if_false",function $$op_jump_if_false(ast_node,target){var self=this;if(target==null)target=0;self.$add_bytecode(ast_node,$$("JUMP_IF_FALSE"));return self.$add_bytecode(ast_node,target)},-2);$def(self,"$op_jump_if_true",function $$op_jump_if_true(ast_node,target){var self=this;if(target==null)target=0;self.$add_bytecode(ast_node,$$("JUMP_IF_TRUE"));return self.$add_bytecode(ast_node,target)},-2);$def(self,"$op_jump_to",
function $$op_jump_to(ast_node,pc_arg){var self=this;if(pc_arg==null)pc_arg=0;self.$add_bytecode(ast_node,$$("JUMP_TO"));return self.$add_bytecode(ast_node,pc_arg)},-2);$def(self,"$op_load_attr",function $$op_load_attr(ast_node,name){var self=this;self.$add_bytecode(ast_node,$$("LOAD_ATTR"));return self.$add_bytecode(ast_node,self.$literal_index(name))});$def(self,"$op_load_const",function $$op_load_const(ast_node,value){var self=this;self.$add_bytecode(ast_node,$$("LOAD_CONST"));return self.$add_bytecode(ast_node,
self.$literal_index(value))});$def(self,"$op_load_global_variable",function $$op_load_global_variable(ast_node,global_name){var self=this;self.$add_bytecode(ast_node,$$("LOAD_GLOBAL"));return self.$add_bytecode(ast_node,self.$literal_index(global_name))});$def(self,"$op_load_name",function $$op_load_name(ast_node,name){var self=this;self.$add_bytecode(ast_node,$$("LOAD_NAME"));return self.$add_bytecode(ast_node,self.$literal_index(name))});$def(self,"$op_load_subscript",function $$op_load_subscript(ast_node){var self=
this;return self.$add_bytecode(ast_node,$$("LOAD_SUBSCR"))});$def(self,"$op_load_temp",function $$op_load_temp(ast_node,name){var self=this;self.$add_bytecode(ast_node,$$("LOAD_TEMP"));return self.$add_bytecode(ast_node,self.$literal_index(name))});$def(self,"$op_nop",function $$op_nop(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("NOP"))});$def(self,"$op_not",function $$op_not(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("NOT"))});$def(self,"$op_pop_into_local_variable",
function $$op_pop_into_local_variable(ast_node,local_name){var self=this;self.$add_bytecode(ast_node,$$("STORE_LOCAL"));return self.$add_bytecode(ast_node,self.$literal_index(local_name))});$def(self,"$op_push_block",function $$op_push_block(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("LOAD_BLOCK"))});$def(self,"$op_push_false",function $$op_push_false(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("PUSH_FALSE"))});$def(self,"$op_push_literal",function $$op_push_literal(ast_node,
literal_value){var self=this;self.$add_bytecode(ast_node,$$("LOAD_CONST"));return self.$add_bytecode(ast_node,self.$literal_index(literal_value))});$def(self,"$op_push_none",function $$op_push_none(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("PUSH_NONE"))});$def(self,"$op_push_self",function $$op_push_self(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("PUSH_SELF"))});$def(self,"$op_push_true",function $$op_push_true(ast_node){var self=this;return self.$add_bytecode(ast_node,
$$("PUSH_TRUE"))});$def(self,"$op_put_at",function $$op_put_at(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("PUT_AT"))});$def(self,"$op_send_message",function $$op_send_message(ast_node,selector){var self=this;return self.$op_send_message_with_args(ast_node,selector,0)});$def(self,"$op_send_message_with_args",function $$op_send_message_with_args(ast_node,selector,nargs){var self=this;self.$add_bytecode(ast_node,$$("SEND"));self.$add_bytecode(ast_node,self.$literal_index(selector));
return self.$add_bytecode(ast_node,nargs)});$def(self,"$op_send_super_message",function $$op_send_super_message(ast_node,selector){var self=this;return self.$op_send_super_message_with_args(ast_node,selector,0)});$def(self,"$op_send_super_message_with_args",function $$op_send_super_message_with_args(ast_node,selector,nargs){var self=this;self.$add_bytecode(ast_node,$$("SEND_SUPER"));self.$add_bytecode(ast_node,self.$literal_index(selector));return self.$add_bytecode(ast_node,nargs)});$def(self,"$op_store_global",
function $$op_store_global(ast_node,var_name){var self=this;self.$add_bytecode(ast_node,$$("STORE_GLOBAL"));return self.$add_bytecode(ast_node,self.$literal_index(var_name))});$def(self,"$op_store_local",function $$op_store_local(ast_node,var_name){var self=this;self.$add_bytecode(ast_node,$$("STORE_LOCAL"));return self.$add_bytecode(ast_node,self.$literal_index(var_name))});$def(self,"$op_store_subscript",function $$op_store_subscript(ast_node){var self=this;return self.$add_bytecode(ast_node,$$("STORE_SUBSCR"))});
$def(self,"$op_store_temp",function $$op_store_temp(ast_node,name){var self=this;self.$add_bytecode(ast_node,$$("STORE_TEMP"));return self.$add_bytecode(ast_node,self.$literal_index(name))});return $def(self,"$patch",function $$patch(ast_node,index,value){var $a,self=this;return $a=[index,value],$send(self.$bytecodes(),"[]=",$a),$a[$a.length-1]})}($nesting[0],null,$nesting)};
Opal.modules["singleton"]=function(Opal){var $module=Opal.module,$def=Opal.def,$send2=Opal.send2,$find_super=Opal.find_super,$send=Opal.send,$truthy=Opal.truthy,$defs=Opal.defs,$nesting=[],nil=Opal.nil;Opal.add_stubs("raise,class,__init__,instance_eval,new,extend");return function($base,$parent_nesting){var self=$module($base,"Singleton");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$clone",function $$clone(){var self=this;return self.$raise($$("TypeError"),"can't clone instance of singleton "+
self.$class())});$def(self,"$dup",function $$dup(){var self=this;return self.$raise($$("TypeError"),"can't dup instance of singleton "+self.$class())});(function($base,$parent_nesting){var self=$module($base,"SingletonClassMethods");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$clone",function $$clone(){var $yield=$$clone.$$p||nil,self=this;$$clone.$$p=null;return $$("Singleton").$__init__($send2(self,$find_super(self,"clone",$$clone,false,true),"clone",[],$yield))});
return $def(self,"$inherited",function $$inherited(sub_klass){var $yield=$$inherited.$$p||nil,self=this;$$inherited.$$p=null;$send2(self,$find_super(self,"inherited",$$inherited,false,true),"inherited",[sub_klass],$yield);return $$("Singleton").$__init__(sub_klass)})})($nesting[0],$nesting);return function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$__init__",function $$__init__(klass){var self=this;$send(klass,"instance_eval",[],function $$1(){var self=
$$1.$$s==null?this:$$1.$$s;return self.singleton__instance__=nil},{$$s:self});$defs(klass,"$instance",function $$instance(){var self=this;if(self.singleton__instance__==null)self.singleton__instance__=nil;if($truthy(self.singleton__instance__))return self.singleton__instance__;return self.singleton__instance__=self.$new()});return klass});return $def(self,"$included",function $$included(klass){var $yield=$$included.$$p||nil,self=this;$$included.$$p=null;$send2(self,$find_super(self,"included",$$included,
false,true),"included",[klass],$yield);klass.$extend($$("SingletonClassMethods"));return $$("Singleton").$__init__(klass)})}(Opal.get_singleton_class($$("Singleton")),$nesting)}($nesting[0],$nesting)};
Opal.modules["shared/types/type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,include,%,type_name");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Type");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));$def(self,"$type_name",$return_val("type"));return $def(self,"$to_s",function $$to_s(){var self=this;
return(""+"<class '%s'>"+"")["$%"](self.$type_name())})}($nesting[0],null,$nesting)};
Opal.modules["shared/types/list_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"ListType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("list"))}($nesting[0],
$$("Type"),$nesting)};
Opal.modules["shared/extensions/array"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,instance,size");self.$require("shared/types/list_type");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Array");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$__class__",function $$__class__(){return $$("ListType").$instance()});return $def(self,"$__len__",function $$__len__(){var self=this;
return self.$size()})}($nesting[0],null,$nesting)};
Opal.modules["shared/types/ellipsis_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"EllipsisType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("ellipsis"))}($nesting[0],
$$("Type"),$nesting)};
Opal.modules["shared/extensions/ellipsis"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,instance");self.$require("shared/types/ellipsis_type");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Ellipsis");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$__class__",function $$__class__(){return $$("EllipsisType").$instance()});return $def(self,"$to_s",
$return_val("..."))}($nesting[0],null,$nesting)};
Opal.modules["shared/types/float_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"FloatType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("float"))}($nesting[0],
$$("Type"),$nesting)};Opal.modules["shared/extensions/float"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,instance");self.$require("shared/types/float_type");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Float");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$__class__",function $$__class__(){return $$("FloatType").$instance()})}($nesting[0],null,$nesting)};
Opal.modules["shared/types/dictionary_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"DictionaryType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("dict"))}($nesting[0],
$$("Type"),$nesting)};
Opal.modules["shared/extensions/hash"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,instance,size");self.$require("shared/types/dictionary_type");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Hash");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$__class__",function $$__class__(){return $$("DictionaryType").$instance()});return $def(self,"$__len__",function $$__len__(){var self=
this;return self.$size()})}($nesting[0],null,$nesting)};
Opal.modules["shared/types/integer_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"IntegerType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("int"))}($nesting[0],
$$("Type"),$nesting)};Opal.modules["shared/extensions/integer"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,instance");self.$require("shared/types/integer_type");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Integer");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$__class__",function $$__class__(){return $$("IntegerType").$instance()})}($nesting[0],null,$nesting)};
Opal.modules["shared/extensions/number"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,is_a?,instance");self.$require("shared/types/float_type");self.$require("shared/types/integer_type");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Number");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$__class__",function $$__class__(){var self=this;if($truthy(self["$is_a?"]($$("Integer"))))return $$("IntegerType").$instance();
else return $$("FloatType").$instance()})}($nesting[0],null,$nesting)};
Opal.modules["shared/types/object_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"ObjectType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("object"))}($nesting[0],
$$("Type"),$nesting)};
Opal.modules["shared/extensions/object"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$send=Opal.send,$return_val=Opal.return_val,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,instance,select,methods,start_with?,to_s,sort");self.$require("shared/types/object_type");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Object");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$__class__",function $$__class__(){return $$("ObjectType").$instance()});$def(self,
"$__dir__",function $$__dir__(){var self=this,items=nil;items=$send(self.$methods(),"select",[],function $$1(item){if(item==null)item=nil;return item.$to_s()["$start_with?"]("__")});return items.$sort()});$def(self,"$__getattribute__",$return_val(nil));return $def(self,"$__setattr__",$return_val(nil))}($nesting[0],null,$nesting)};
Opal.modules["shared/types/string_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"StringType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("string"))}($nesting[0],
$$("Type"),$nesting)};
Opal.modules["shared/util/string_patterns"]=function(Opal){var $module=Opal.module,$const_set=Opal.const_set,$nesting=[],nil=Opal.nil;return function($base,$parent_nesting){var self=$module($base,"StringPatterns");var $nesting=[self].concat($parent_nesting);$const_set($nesting[0],"STR_ADD","+");$const_set($nesting[0],"STR_AMPERSAND","&");$const_set($nesting[0],"STR_AND","and");$const_set($nesting[0],"STR_ASSERT","assert");$const_set($nesting[0],"STR_ASSIGN","=");$const_set($nesting[0],"STR_AT","@");
$const_set($nesting[0],"STR_BACK_N","\\n");$const_set($nesting[0],"STR_BAR","|");$const_set($nesting[0],"STR_BREAK","break");$const_set($nesting[0],"STR_CARET","^");$const_set($nesting[0],"STR_COLON",":");$const_set($nesting[0],"STR_COMMA",",");$const_set($nesting[0],"STR_COMMENT_DELIM",'"');$const_set($nesting[0],"STR_CONTINUE","continue");$const_set($nesting[0],"STR_CR","\r");$const_set($nesting[0],"STR_DEL","del");$const_set($nesting[0],"STR_DIV","/");$const_set($nesting[0],"STR_DOLLAR","$");$const_set($nesting[0],
"STR_EMPTY","");$const_set($nesting[0],"STR_EQ","=");$const_set($nesting[0],"STR_EQUALS","==");$const_set($nesting[0],"STR_FALSE","false");$const_set($nesting[0],"STR_GLOBAL","global");$const_set($nesting[0],"STR_GREATER_THAN",">");$const_set($nesting[0],"STR_GT_EQ",">=");$const_set($nesting[0],"STR_IDIV","//");$const_set($nesting[0],"STR_IF","if");$const_set($nesting[0],"STR_IMPORT","import");$const_set($nesting[0],"STR_IN","in");$const_set($nesting[0],"STR_LBRACE","{");$const_set($nesting[0],"STR_LBRACKET",
"[");$const_set($nesting[0],"STR_LC_A","a");$const_set($nesting[0],"STR_LC_Z","z");$const_set($nesting[0],"STR_LPAREN","(");$const_set($nesting[0],"STR_LESS_THAN","<");$const_set($nesting[0],"STR_LINE_BREAK","\n");$const_set($nesting[0],"STR_LT_EQ","<=");$const_set($nesting[0],"STR_MINUS","-");$const_set($nesting[0],"STR_MOD","%");$const_set($nesting[0],"STR_NOT","not");$const_set($nesting[0],"STR_STAR","*");$const_set($nesting[0],"STR_NOT_EQ_1","!=");$const_set($nesting[0],"STR_NOT_EQ_2","<>");$const_set($nesting[0],
"STR_NIL","nil");$const_set($nesting[0],"STR_NINE","9");$const_set($nesting[0],"STR_NONLOCAL","nonlocal");$const_set($nesting[0],"STR_OR","or");$const_set($nesting[0],"STR_PASS","pass");$const_set($nesting[0],"STR_PERIOD",".");$const_set($nesting[0],"STR_POUND","#");$const_set($nesting[0],"STR_POUND_LBRACE","#{");$const_set($nesting[0],"STR_PRIMITIVE_DELIM","$");$const_set($nesting[0],"STR_RAISE","raise");$const_set($nesting[0],"STR_RBRACE","}");$const_set($nesting[0],"STR_RBRACKET","]");$const_set($nesting[0],
"STR_RETURN","return");$const_set($nesting[0],"STR_RPAREN",")");$const_set($nesting[0],"STR_SELF","self");$const_set($nesting[0],"STR_SEMI_COLON",";");$const_set($nesting[0],"STR_SPACE"," ");$const_set($nesting[0],"STR_STRING_DELIM","'");$const_set($nesting[0],"STR_SUPER","super");$const_set($nesting[0],"STR_TAB","\t");$const_set($nesting[0],"STR_TILDE","~");$const_set($nesting[0],"STR_TRUE","true");$const_set($nesting[0],"STR_UC_A","A");$const_set($nesting[0],"STR_UC_Z","Z");$const_set($nesting[0],
"STR_UNDERSCORE","_");return $const_set($nesting[0],"STR_ZERO","0")}($nesting[0],$nesting)};
Opal.modules["shared/extensions/string"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$neqeq=Opal.neqeq,$rb_times=Opal.rb_times,$rb_minus=Opal.rb_minus,$rb_divide=Opal.rb_divide,$send=Opal.send,$rb_plus=Opal.rb_plus,$eqeq=Opal.eqeq,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,include,backslash_n_to_line_break,detab,dup,gsub,instance,!=,index,*,-,%,[]=,/,length,each,[],+,==,size,=~,last_match,new,>,sub!,shorten,line_break_to_backslash_n");self.$require("shared/types/string_type");
self.$require("shared/util/string_patterns");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"String");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("StringPatterns"));$def(self,"$adjust",function $$adjust(){var self=this;return self.$detab().$backslash_n_to_line_break()});$def(self,"$backslash_n_to_line_break",function $$backslash_n_to_line_break(){var self=this,str=nil;str=self.$dup();return str.$gsub($$("STR_BACK_N"),$$("STR_LINE_BREAK"))});
$def(self,"$__class__",function $$__class__(){return $$("StringType").$instance()});$def(self,"$detab",function $$detab(ts){var self=this,str=nil,leftmost=nil,space=nil;if(ts==null)ts=4;str=self.$dup();while($neqeq(leftmost=str.$index($$("STR_TAB")),nil)){space=$rb_times($$("STR_SPACE"),$rb_minus(ts,leftmost["$%"](ts)));str["$[]="](leftmost,space)}return str},-1);$def(self,"$entab",function $$entab(ts){var self=this,str=nil,areas=nil,newstr=nil,a=nil,temp=nil,match=nil,endmatch=nil;if(ts==null)ts=
4;str=self.$detab();areas=$rb_divide(str.$length(),ts);newstr=$$("STR_EMPTY");$send(Opal.Range.$new(0,areas,false),"each",[],function $$1($for_tmp1){if($for_tmp1==null)$for_tmp1=nil;a=$for_tmp1;temp=str["$[]"](Opal.Range.$new($rb_times(a,ts),$rb_minus($rb_plus($rb_times(a,ts),ts),1),false));if($eqeq(temp.$size(),ts))if($truthy(temp["$=~"](/ +/))){match=$$("Regexp").$last_match()["$[]"](0);endmatch=$$("Regexp").$new($rb_plus(match,$$("STR_DOLLAR")));if($truthy($rb_gt(match.$length(),1)))temp["$sub!"](endmatch,
$$("STR_TAB"))}return newstr=$rb_plus(newstr,temp)});return newstr},-1);$def(self,"$__len__",function $$__len__(){var self=this;return self.$size()});$def(self,"$line_break_to_backslash_n",function $$line_break_to_backslash_n(){var self=this,str=nil;str=self.$dup();return str.$gsub($$("STR_LINE_BREAK"),$$("STR_BACK_N"))});$def(self,"$shorten",function $$shorten(max){var self=this;if(max==null)max=15;if($truthy($rb_gt(self.$size(),max)))return"%s..."["$%"](self["$[]"](Opal.Range.$new(0,$rb_minus(max,
4),false)));else return self},-1);return $def(self,"$to_display",function $$to_display(){var self=this;return self.$line_break_to_backslash_n().$shorten()})}($nesting[0],null,$nesting)};
Opal.modules["shared/extensions/all"]=function(Opal){var $klass=Opal.klass,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require");self.$require("shared/extensions/array");self.$require("shared/extensions/ellipsis");self.$require("shared/extensions/float");self.$require("shared/extensions/hash");self.$require("shared/extensions/integer");self.$require("shared/extensions/number");self.$require("shared/extensions/object");self.$require("shared/extensions/string");return $klass($nesting[0],
null,"All"),nil};
Opal.modules["shared/constants/type_constants"]=function(Opal){var $module=Opal.module,$const_set=Opal.const_set,$nesting=[],nil=Opal.nil;return function($base,$parent_nesting){var self=$module($base,"TypeConstants");var $nesting=[self].concat($parent_nesting);$const_set($nesting[0],"EOF",-1);$const_set($nesting[0],"INDENT",1);$const_set($nesting[0],"DEDENT",2);$const_set($nesting[0],"STRING",3);$const_set($nesting[0],"NUMBER",4);$const_set($nesting[0],"INTEGER",5);$const_set($nesting[0],"DEF",6);
$const_set($nesting[0],"RETURN",7);$const_set($nesting[0],"RAISE",8);$const_set($nesting[0],"FROM",9);$const_set($nesting[0],"IMPORT",10);$const_set($nesting[0],"AS",11);$const_set($nesting[0],"GLOBAL",12);$const_set($nesting[0],"NONLOCAL",13);$const_set($nesting[0],"ASSERT",14);$const_set($nesting[0],"IF",15);$const_set($nesting[0],"ELIF",16);$const_set($nesting[0],"ELSE",17);$const_set($nesting[0],"WHILE",18);$const_set($nesting[0],"FOR",19);$const_set($nesting[0],"IN",20);$const_set($nesting[0],
"TRY",21);$const_set($nesting[0],"FINALLY",22);$const_set($nesting[0],"WITH",23);$const_set($nesting[0],"EXCEPT",24);$const_set($nesting[0],"LAMBDA",25);$const_set($nesting[0],"OR",26);$const_set($nesting[0],"AND",27);$const_set($nesting[0],"NOT",28);$const_set($nesting[0],"IS",29);$const_set($nesting[0],"NONE",30);$const_set($nesting[0],"TRUE",31);$const_set($nesting[0],"FALSE",32);$const_set($nesting[0],"CLASS",33);$const_set($nesting[0],"YIELD",34);$const_set($nesting[0],"DEL",35);$const_set($nesting[0],
"PASS",36);$const_set($nesting[0],"CONTINUE",37);$const_set($nesting[0],"BREAK",38);$const_set($nesting[0],"ASYNC",39);$const_set($nesting[0],"AWAIT",40);$const_set($nesting[0],"NEWLINE",41);$const_set($nesting[0],"NAME",42);$const_set($nesting[0],"STRING_LITERAL",43);$const_set($nesting[0],"BYTES_LITERAL",44);$const_set($nesting[0],"DECIMAL_INTEGER",45);$const_set($nesting[0],"OCT_INTEGER",46);$const_set($nesting[0],"HEX_INTEGER",47);$const_set($nesting[0],"BIN_INTEGER",48);$const_set($nesting[0],
"FLOAT_NUMBER",49);$const_set($nesting[0],"IMAG_NUMBER",50);$const_set($nesting[0],"DOT",51);$const_set($nesting[0],"ELLIPSIS",52);$const_set($nesting[0],"STAR",53);$const_set($nesting[0],"OPEN_PAREN",54);$const_set($nesting[0],"CLOSE_PAREN",55);$const_set($nesting[0],"COMMA",56);$const_set($nesting[0],"COLON",57);$const_set($nesting[0],"SEMI_COLON",58);$const_set($nesting[0],"POWER",59);$const_set($nesting[0],"ASSIGN",60);$const_set($nesting[0],"OPEN_BRACK",61);$const_set($nesting[0],"CLOSE_BRACK",
62);$const_set($nesting[0],"OR_OP",63);$const_set($nesting[0],"XOR",64);$const_set($nesting[0],"AND_OP",65);$const_set($nesting[0],"LEFT_SHIFT",66);$const_set($nesting[0],"RIGHT_SHIFT",67);$const_set($nesting[0],"ADD",68);$const_set($nesting[0],"MINUS",69);$const_set($nesting[0],"DIV",70);$const_set($nesting[0],"MOD",71);$const_set($nesting[0],"IDIV",72);$const_set($nesting[0],"NOT_OP",73);$const_set($nesting[0],"OPEN_BRACE",74);$const_set($nesting[0],"CLOSE_BRACE",75);$const_set($nesting[0],"LESS_THAN",
76);$const_set($nesting[0],"GREATER_THAN",77);$const_set($nesting[0],"EQUALS",78);$const_set($nesting[0],"GT_EQ",79);$const_set($nesting[0],"LT_EQ",80);$const_set($nesting[0],"NOT_EQ_1",81);$const_set($nesting[0],"NOT_EQ_2",82);$const_set($nesting[0],"AT",83);$const_set($nesting[0],"ARROW",84);$const_set($nesting[0],"ADD_ASSIGN",85);$const_set($nesting[0],"SUB_ASSIGN",86);$const_set($nesting[0],"MULT_ASSIGN",87);$const_set($nesting[0],"AT_ASSIGN",88);$const_set($nesting[0],"DIV_ASSIGN",89);$const_set($nesting[0],
"MOD_ASSIGN",90);$const_set($nesting[0],"AND_ASSIGN",91);$const_set($nesting[0],"OR_ASSIGN",92);$const_set($nesting[0],"XOR_ASSIGN",93);$const_set($nesting[0],"LEFT_SHIFT_ASSIGN",94);$const_set($nesting[0],"RIGHT_SHIFT_ASSIGN",95);$const_set($nesting[0],"POWER_ASSIGN",96);$const_set($nesting[0],"IDIV_ASSIGN",97);$const_set($nesting[0],"SKIP_",98);return $const_set($nesting[0],"UNKNOWN_CHAR",99)}($nesting[0],$nesting)};
Opal.modules["shared/util/str_util"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,$defs=Opal.defs,$nesting=[],nil=Opal.nil;Opal.add_stubs("to_s,gsub,>,length,[]");return function($base,$super){var self=$klass($base,$super,"StrUtil");return $defs(self,"$truncate",function $$truncate(string,max){var s=nil;s=string.$to_s();s=s.$gsub("\n","");if($truthy($rb_gt(s.$length(),max)))return""+s["$[]"](Opal.Range.$new(0,max,true))+"...";else return s})}($nesting[0],null)};
Opal.modules["shared/util/ast_util"]=function(Opal){var $klass=Opal.klass,$eqeqeq=Opal.eqeqeq,$defs=Opal.defs,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,include,===,%,to_s,gsub,>,length,[]");self.$require("shared/constants/type_constants");self.$require("shared/util/str_util");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"AstUtil");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("TypeConstants"));
$defs(self,"$is_valid_child?",function $AstUtil_is_valid_child$ques$1(type){var $ret_or_1=nil;if($eqeqeq($$("NAME"),$ret_or_1=type))return true;else return false});$defs(self,"$type_symbol",function $$type_symbol(type){var $ret_or_1=nil;if($eqeqeq($$("EOF"),$ret_or_1=type))return"EOF";else if($eqeqeq($$("INDENT"),$ret_or_1))return"INDENT";else if($eqeqeq($$("DEDENT"),$ret_or_1))return"DEDENT";else if($eqeqeq($$("STRING"),$ret_or_1))return"STRING";else if($eqeqeq($$("NUMBER"),$ret_or_1))return"NUMBER";
else if($eqeqeq($$("INTEGER"),$ret_or_1))return"INTEGER";else if($eqeqeq($$("DEF"),$ret_or_1))return"DEF";else if($eqeqeq($$("RETURN"),$ret_or_1))return"RETURN";else if($eqeqeq($$("RAISE"),$ret_or_1))return"RAISE";else if($eqeqeq($$("FROM"),$ret_or_1))return"FROM";else if($eqeqeq($$("IMPORT"),$ret_or_1))return"IMPORT";else if($eqeqeq($$("AS"),$ret_or_1))return"AS";else if($eqeqeq($$("GLOBAL"),$ret_or_1))return"GLOBAL";else if($eqeqeq($$("NONLOCAL"),$ret_or_1))return"NONLOCAL";else if($eqeqeq($$("ASSERT"),
$ret_or_1))return"ASSERT";else if($eqeqeq($$("IF"),$ret_or_1))return"IF";else if($eqeqeq($$("ELIF"),$ret_or_1))return"ELIF";else if($eqeqeq($$("ELSE"),$ret_or_1))return"ELSE";else if($eqeqeq($$("WHILE"),$ret_or_1))return"WHILE";else if($eqeqeq($$("FOR"),$ret_or_1))return"FOR";else if($eqeqeq($$("IN"),$ret_or_1))return"IN";else if($eqeqeq($$("TRY"),$ret_or_1))return"TRY";else if($eqeqeq($$("FINALLY"),$ret_or_1))return"FINALLY";else if($eqeqeq($$("WITH"),$ret_or_1))return"WITH";else if($eqeqeq($$("EXCEPT"),
$ret_or_1))return"EXCEPT";else if($eqeqeq($$("LAMBDA"),$ret_or_1))return"LAMBDA";else if($eqeqeq($$("OR"),$ret_or_1))return"OR";else if($eqeqeq($$("AND"),$ret_or_1))return"AND";else if($eqeqeq($$("NOT"),$ret_or_1))return"NOT";else if($eqeqeq($$("IS"),$ret_or_1))return"IS";else if($eqeqeq($$("NONE"),$ret_or_1))return"NONE";else if($eqeqeq($$("TRUE"),$ret_or_1))return"TRUE";else if($eqeqeq($$("FALSE"),$ret_or_1))return"FALSE";else if($eqeqeq($$("CLASS"),$ret_or_1))return"CLASS";else if($eqeqeq($$("YIELD"),
$ret_or_1))return"YIELD";else if($eqeqeq($$("DEL"),$ret_or_1))return"DEL";else if($eqeqeq($$("PASS"),$ret_or_1))return"PASS";else if($eqeqeq($$("CONTINUE"),$ret_or_1))return"CONTINUE";else if($eqeqeq($$("BREAK"),$ret_or_1))return"BREAK";else if($eqeqeq($$("ASYNC"),$ret_or_1))return"ASYNC";else if($eqeqeq($$("AWAIT"),$ret_or_1))return"AWAIT";else if($eqeqeq($$("NEWLINE"),$ret_or_1))return"NEWLINE";else if($eqeqeq($$("NAME"),$ret_or_1))return"NAME";else if($eqeqeq($$("STRING_LITERAL"),$ret_or_1))return"STRING_LITERAL";
else if($eqeqeq($$("BYTES_LITERAL"),$ret_or_1))return"BYTES_LITERAL";else if($eqeqeq($$("DECIMAL_INTEGER"),$ret_or_1))return"DECIMAL_INTEGER";else if($eqeqeq($$("OCT_INTEGER"),$ret_or_1))return"OCT_INTEGER";else if($eqeqeq($$("HEX_INTEGER"),$ret_or_1))return"HEX_INTEGER";else if($eqeqeq($$("BIN_INTEGER"),$ret_or_1))return"BIN_INTEGER";else if($eqeqeq($$("FLOAT_NUMBER"),$ret_or_1))return"FLOAT_NUMBER";else if($eqeqeq($$("IMAG_NUMBER"),$ret_or_1))return"IMAG_NUMBER";else if($eqeqeq($$("DOT"),$ret_or_1))return"DOT";
else if($eqeqeq($$("ELLIPSIS"),$ret_or_1))return"ELLIPSIS";else if($eqeqeq($$("STAR"),$ret_or_1))return"STAR";else if($eqeqeq($$("OPEN_PAREN"),$ret_or_1))return"OPEN_PAREN";else if($eqeqeq($$("CLOSE_PAREN"),$ret_or_1))return"CLOSE_PAREN";else if($eqeqeq($$("COMMA"),$ret_or_1))return"COMMA";else if($eqeqeq($$("COLON"),$ret_or_1))return"COLON";else if($eqeqeq($$("SEMI_COLON"),$ret_or_1))return"SEMI_COLON";else if($eqeqeq($$("POWER"),$ret_or_1))return"POWER";else if($eqeqeq($$("ASSIGN"),$ret_or_1))return"ASSIGN";
else if($eqeqeq($$("OPEN_BRACK"),$ret_or_1))return"OPEN_BRACK";else if($eqeqeq($$("CLOSE_BRACK"),$ret_or_1))return"CLOSE_BRACK";else if($eqeqeq($$("OR_OP"),$ret_or_1))return"OR_OP";else if($eqeqeq($$("XOR"),$ret_or_1))return"XOR";else if($eqeqeq($$("AND_OP"),$ret_or_1))return"AND_OP";else if($eqeqeq($$("LEFT_SHIFT"),$ret_or_1))return"LEFT_SHIFT";else if($eqeqeq($$("RIGHT_SHIFT"),$ret_or_1))return"RIGHT_SHIFT";else if($eqeqeq($$("ADD"),$ret_or_1))return"ADD";else if($eqeqeq($$("MINUS"),$ret_or_1))return"MINUS";
else if($eqeqeq($$("DIV"),$ret_or_1))return"DIV";else if($eqeqeq($$("MOD"),$ret_or_1))return"MOD";else if($eqeqeq($$("IDIV"),$ret_or_1))return"IDIV";else if($eqeqeq($$("NOT_OP"),$ret_or_1))return"NOT_OP";else if($eqeqeq($$("OPEN_BRACE"),$ret_or_1))return"OPEN_BRACE";else if($eqeqeq($$("CLOSE_BRACE"),$ret_or_1))return"CLOSE_BRACE";else if($eqeqeq($$("LESS_THAN"),$ret_or_1))return"LESS_THAN";else if($eqeqeq($$("GREATER_THAN"),$ret_or_1))return"GREATER_THAN";else if($eqeqeq($$("EQUALS"),$ret_or_1))return"EQUALS";
else if($eqeqeq($$("GT_EQ"),$ret_or_1))return"GT_EQ";else if($eqeqeq($$("LT_EQ"),$ret_or_1))return"LT_EQ";else if($eqeqeq($$("NOT_EQ_1"),$ret_or_1))return"NOT_EQ_1";else if($eqeqeq($$("NOT_EQ_2"),$ret_or_1))return"NOT_EQ_2";else if($eqeqeq($$("AT"),$ret_or_1))return"AT";else if($eqeqeq($$("ARROW"),$ret_or_1))return"ARROW";else if($eqeqeq($$("ADD_ASSIGN"),$ret_or_1))return"ADD_ASSIGN";else if($eqeqeq($$("SUB_ASSIGN"),$ret_or_1))return"SUB_ASSIGN";else if($eqeqeq($$("MULT_ASSIGN"),$ret_or_1))return"MULT_ASSIGN";
else if($eqeqeq($$("AT_ASSIGN"),$ret_or_1))return"AT_ASSIGN";else if($eqeqeq($$("DIV_ASSIGN"),$ret_or_1))return"DIV_ASSIGN";else if($eqeqeq($$("MOD_ASSIGN"),$ret_or_1))return"MOD_ASSIGN";else if($eqeqeq($$("AND_ASSIGN"),$ret_or_1))return"AND_ASSIGN";else if($eqeqeq($$("OR_ASSIGN"),$ret_or_1))return"OR_ASSIGN";else if($eqeqeq($$("XOR_ASSIGN"),$ret_or_1))return"XOR_ASSIGN";else if($eqeqeq($$("LEFT_SHIFT_ASSIGN"),$ret_or_1))return"LEFT_SHIFT_ASSIGN";else if($eqeqeq($$("RIGHT_SHIFT_ASSIGN"),$ret_or_1))return"RIGHT_SHIFT_ASSIGN";
else if($eqeqeq($$("POWER_ASSIGN"),$ret_or_1))return"POWER_ASSIGN";else if($eqeqeq($$("IDIV_ASSIGN"),$ret_or_1))return"IDIV_ASSIGN";else if($eqeqeq($$("SKIP_"),$ret_or_1))return"SKIP_";else if($eqeqeq($$("UNKNOWN_CHAR"),$ret_or_1))return"UNKNOWN_CHAR";else return"UNKNOWN_TYPE %s"["$%"](type)});return $defs(self,"$truncate",function $$truncate(string,max){var s=nil;s=string.$to_s();s=s.$gsub("\n","");if($truthy($rb_gt(s.$length(),max)))return""+s["$[]"](Opal.Range.$new(0,max,true))+"...";else return s})}($nesting[0],
null,$nesting)};
Opal.modules["shared/parser/ast/ast_node"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,$send=Opal.send,$return_val=Opal.return_val,$rb_plus=Opal.rb_plus,$thrower=Opal.thrower,$eqeq=Opal.eqeq,$range=Opal.range,$rb_times=Opal.rb_times,$assign_ivar_val=Opal.assign_ivar_val,$assign_ivar=Opal.assign_ivar,$eqeqeq=Opal.eqeqeq,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,nil?,push,children,each,collect_break_indices,collect_continue_indices,get_padding,puts,%,name,show_attributes,text,truncate,type,type_name,value,is_lhs,display,+,is_arglist?,==,find_child_type,is_funcdef?,find_funcdef,find_name,is_parameters?,find_parameters,is_suite?,find_suite,is_tfpdef?,find_tfpdef,is_trailer?,find_trailer,is_typedargslist?,find_typedargslist,first,generate_children,generate_self,generate,[],size,*,has_type?,!,empty?,has_trailer,is_type?,has_children?,first_child,is_dotted,is_last_child,is_float?,is_integer?,is_string?,is_true?,is_false?,is_none?,last,lastmost_child,last_child,set_has_trailer,set_is_last_child,set_is_lhs,include?,set_value,===,to_f,to_i,type_symbol");self.$require("shared/constants/type_constants");
self.$require("shared/util/ast_util");self.$require("shared/util/str_util");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"AstNode");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("children");self.$attr_reader("has_trailer");self.$attr_reader("is_dotted");self.$attr_reader("is_last_child");self.$attr_reader("is_lhs");self.$attr_reader("name");self.$attr_reader("parent");self.$attr_reader("text");self.$attr_reader("type");self.$attr_reader("value");
self.$include($$("TypeConstants"));$def(self,"$initialize",function $$initialize(name,parent){var self=this;if(parent==null)parent=nil;self.name=name;self.parent=parent;self.children=[];self.has_trailer=false;self.is_dotted=false;self.is_last_child=false;self.is_lhs=false;self.text=nil;self.type=nil;self.value=nil;if($truthy(parent["$nil?"]()))return nil;else return parent.$children().$push(self)},-2);$def(self,"$collect_break_indices",function $$collect_break_indices(break_indices_list){var self=
this;return $send(self.$children(),"each",[],function $$1(child){if(child==null)child=nil;return child.$collect_break_indices(break_indices_list)})});$def(self,"$collect_continue_indices",function $$collect_continue_indices(continue_indices_list){var self=this;return $send(self.$children(),"each",[],function $$2(child){if(child==null)child=nil;return child.$collect_continue_indices(continue_indices_list)})});$def(self,"$compile",$return_val(nil));$def(self,"$display",function $$display(indent){var self=
this,padding=nil;if(indent==null)indent=0;padding=self.$get_padding(indent);self.$puts("%s%s"["$%"]([padding,self.$name()]));if($truthy(self.$show_attributes())){if(!$truthy(self.$text()["$nil?"]()))self.$puts('%s ("%s")'["$%"]([padding,$$("StrUtil").$truncate(self.$text(),25)]));if(!$truthy(self.$type()["$nil?"]()))self.$puts("%s (type: %s)"["$%"]([padding,self.$type_name()]));if(!$truthy(self.$value()["$nil?"]()))self.$puts("%s (value: %s)"["$%"]([padding,self.$value()]));if($truthy(self.$is_lhs()))self.$puts("IS LHS")}return $send(self.$children(),
"each",[],function $$3(child){if(child==null)child=nil;return child.$display($rb_plus(indent,1))})},-1);$def(self,"$find_arglist",function $$find_arglist(){try{var $t_return=$thrower("return");var self=this;if($truthy(self["$is_arglist?"]()))return self;$send(self.$children(),"each",[],function $$4(child){var maybe_found=nil;if(child==null)child=nil;maybe_found=child["$is_arglist?"]();if($truthy(maybe_found["$nil?"]()))return nil;else $t_return.$throw(maybe_found)},{$$ret:$t_return});return nil}catch($e){if($e===
$t_return)return $e.$v;throw $e;}});$def(self,"$find_child_type",function $$find_child_type(type_arg){try{var $t_return=$thrower("return");var self=this;if($eqeq(self.$type(),type_arg))return self;$send(self.$children(),"each",[],function $$5(child){var maybe_found=nil;if(child==null)child=nil;maybe_found=child.$find_child_type(type_arg);if($truthy(maybe_found["$nil?"]()))return nil;else $t_return.$throw(maybe_found)},{$$ret:$t_return});return nil}catch($e){if($e===$t_return)return $e.$v;throw $e;
}});$def(self,"$find_funcdef",function $$find_funcdef(){try{var $t_return=$thrower("return");var self=this;if($truthy(self["$is_funcdef?"]()))return self;$send(self.$children(),"each",[],function $$6(child){var maybe_found=nil;if(child==null)child=nil;maybe_found=child.$find_funcdef();if($truthy(maybe_found["$nil?"]()))return nil;else $t_return.$throw(maybe_found)},{$$ret:$t_return});return nil}catch($e){if($e===$t_return)return $e.$v;throw $e;}});$def(self,"$find_name",function $$find_name(){var self=
this;return self.$find_child_type($$("NAME"))});$def(self,"$find_name_text",function $$find_name_text(){var self=this,name_node=nil;name_node=self.$find_name();if($truthy(name_node["$nil?"]()))return nil;else return name_node.$value()});$def(self,"$find_parameters",function $$find_parameters(){try{var $t_return=$thrower("return");var self=this;if($truthy(self["$is_parameters?"]()))return self;$send(self.$children(),"each",[],function $$7(child){var maybe_found=nil;if(child==null)child=nil;maybe_found=
child.$find_parameters();if($truthy(maybe_found["$nil?"]()))return nil;else $t_return.$throw(maybe_found)},{$$ret:$t_return});return nil}catch($e){if($e===$t_return)return $e.$v;throw $e;}});$def(self,"$find_suite",function $$find_suite(){try{var $t_return=$thrower("return");var self=this;if($truthy(self["$is_suite?"]()))return self;$send(self.$children(),"each",[],function $$8(child){var maybe_found=nil;if(child==null)child=nil;maybe_found=child.$find_suite();if($truthy(maybe_found["$nil?"]()))return nil;
else $t_return.$throw(maybe_found)},{$$ret:$t_return});return nil}catch($e){if($e===$t_return)return $e.$v;throw $e;}});$def(self,"$find_tfpdef",function $$find_tfpdef(){try{var $t_return=$thrower("return");var self=this;if($truthy(self["$is_tfpdef?"]()))return self;$send(self.$children(),"each",[],function $$9(child){var maybe_found=nil;if(child==null)child=nil;maybe_found=child.$find_tfpdef();if($truthy(maybe_found["$nil?"]()))return nil;else $t_return.$throw(maybe_found)},{$$ret:$t_return});return nil}catch($e){if($e===
$t_return)return $e.$v;throw $e;}});$def(self,"$find_trailer",function $$find_trailer(){try{var $t_return=$thrower("return");var self=this;if($truthy(self["$is_trailer?"]()))return self;$send(self.$children(),"each",[],function $$10(child){var maybe_found=nil;if(child==null)child=nil;maybe_found=child.$find_trailer();if($truthy(maybe_found["$nil?"]()))return nil;else $t_return.$throw(maybe_found)},{$$ret:$t_return});return nil}catch($e){if($e===$t_return)return $e.$v;throw $e;}});$def(self,"$find_typedargslist",
function $$find_typedargslist(){try{var $t_return=$thrower("return");var self=this;if($truthy(self["$is_typedargslist?"]()))return self;$send(self.$children(),"each",[],function $$11(child){var maybe_found=nil;if(child==null)child=nil;maybe_found=child.$find_typedargslist();if($truthy(maybe_found["$nil?"]()))return nil;else $t_return.$throw(maybe_found)},{$$ret:$t_return});return nil}catch($e){if($e===$t_return)return $e.$v;throw $e;}});$def(self,"$first_child",function $$first_child(){var self=this;
return self.$children().$first()});$def(self,"$generate",function $$generate(compiler_util){var self=this;self.$generate_children(compiler_util);return self.$generate_self(compiler_util)});$def(self,"$generate_children",function $$generate_children(compiler_util){var self=this;return $send(self.$children(),"each",[],function $$12(child){if(child==null)child=nil;return child.$generate(compiler_util)})});$def(self,"$generate_children_without_first",function $$generate_children_without_first(compiler_util){var self=
this;return $send(self.$children()["$[]"]($range(1,-1,false)),"each",[],function $$13(child){if(child==null)child=nil;return child.$generate(compiler_util)})});$def(self,"$generate_self",$return_val(nil));$def(self,"$get_child",function $$get_child(index){var self=this;return self.$children()["$[]"](index)});$def(self,"$get_child_count",function $$get_child_count(){var self=this;return self.$children().$size()});$def(self,"$get_padding",function $$get_padding(n){return $rb_times(" ",n)});$def(self,
"$has_break?",function $AstNode_has_break$ques$14(){var self=this;return self["$has_type?"]($$("BREAK"))});$def(self,"$has_children?",function $AstNode_has_children$ques$15(){var self=this;return self.$children()["$empty?"]()["$!"]()});$def(self,"$has_continue?",function $AstNode_has_continue$ques$16(){var self=this;return self["$has_type?"]($$("CONTINUE"))});$def(self,"$has_div?",function $AstNode_has_div$ques$17(){var self=this;return self["$has_type?"]($$("DIV"))});$def(self,"$has_dot?",function $AstNode_has_dot$ques$18(){var self=
this;return self["$has_type?"]($$("DOT"))});$def(self,"$has_idiv?",function $AstNode_has_idiv$ques$19(){var self=this;return self["$has_type?"]($$("IDIV"))});$def(self,"$has_mod?",function $AstNode_has_mod$ques$20(){var self=this;return self["$has_type?"]($$("MOD"))});$def(self,"$has_star?",function $AstNode_has_star$ques$21(){var self=this;return self["$has_type?"]($$("STAR"))});$def(self,"$has_trailer?",function $AstNode_has_trailer$ques$22(){var self=this;return self.$has_trailer()});$def(self,
"$has_type?",function $AstNode_has_type$ques$23(test_type){var self=this,$ret_or_1=nil;if($truthy(self["$is_type?"](test_type)))return true;if($truthy($ret_or_1=self["$has_children?"]()))return self.$first_child()["$has_type?"](test_type);else return $ret_or_1});$def(self,"$is_add?",function $AstNode_is_add$ques$24(){var self=this;return self["$is_type?"]($$("ADD"))});$def(self,"$is_arglist?",$return_val(false));$def(self,"$is_assign?",function $AstNode_is_assign$ques$25(){var self=this;return self["$is_type?"]($$("ASSIGN"))});
$def(self,"$is_break?",function $AstNode_is_break$ques$26(){var self=this;return self["$is_type?"]($$("BREAK"))});$def(self,"$is_close_brack?",function $AstNode_is_close_brack$ques$27(){var self=this;return self["$is_type?"]($$("CLOSE_BRACK"))});$def(self,"$is_classdef?",$return_val(false));$def(self,"$is_continue?",function $AstNode_is_continue$ques$28(){var self=this;return self["$is_type?"]($$("CONTINUE"))});$def(self,"$is_div?",function $AstNode_is_div$ques$29(){var self=this;return self["$is_type?"]($$("DIV"))});
$def(self,"$is_dotted?",function $AstNode_is_dotted$ques$30(){var self=this;return self.$is_dotted()});$def(self,"$is_ellipse?",function $AstNode_is_ellipse$ques$31(){var self=this;return self["$is_type?"]($$("ELLIPSIS"))});$def(self,"$is_equals?",function $AstNode_is_equals$ques$32(){var self=this;return self["$is_type?"]($$("EQUALS"))});$def(self,"$is_float?",function $AstNode_is_float$ques$33(){var self=this;return self["$is_type?"]($$("FLOAT_NUMBER"))});$def(self,"$is_false?",function $AstNode_is_false$ques$34(){var self=
this;return self["$is_type?"]($$("FALSE"))});$def(self,"$is_funcdef?",$return_val(false));$def(self,"$is_greater_than?",function $AstNode_is_greater_than$ques$35(){var self=this;return self["$is_type?"]($$("GREATER_THAN"))});$def(self,"$is_gt_eq?",function $AstNode_is_gt_eq$ques$36(){var self=this;return self["$is_type?"]($$("GT_EQ"))});$def(self,"$is_idiv?",function $AstNode_is_idiv$ques$37(){var self=this;return self["$is_type?"]($$("IDIV"))});$def(self,"$is_integer?",function $AstNode_is_integer$ques$38(){var self=
this;return self["$is_type?"]($$("INTEGER"))});$def(self,"$is_last_child?",function $AstNode_is_last_child$ques$39(){var self=this;return self.$is_last_child()});$def(self,"$is_less_than?",function $AstNode_is_less_than$ques$40(){var self=this;return self["$is_type?"]($$("LESS_THAN"))});$def(self,"$is_lhs?",function $AstNode_is_lhs$ques$41(){var self=this;return self.$is_lhs()});$def(self,"$is_literal?",function $AstNode_is_literal$ques$42(){var self=this,$ret_or_1=nil,$ret_or_2=nil,$ret_or_3=nil,
$ret_or_4=nil,$ret_or_5=nil;if($truthy($ret_or_1=$truthy($ret_or_2=$truthy($ret_or_3=$truthy($ret_or_4=$truthy($ret_or_5=self["$is_float?"]())?$ret_or_5:self["$is_integer?"]())?$ret_or_4:self["$is_string?"]())?$ret_or_3:self["$is_true?"]())?$ret_or_2:self["$is_false?"]()))return $ret_or_1;else return self["$is_none?"]()});$def(self,"$is_lt_eq?",function $AstNode_is_lt_eq$ques$43(){var self=this;return self["$is_type?"]($$("LT_EQ"))});$def(self,"$is_minus?",function $AstNode_is_minus$ques$44(){var self=
this;return self["$is_type?"]($$("MINUS"))});$def(self,"$is_mod?",function $AstNode_is_mod$ques$45(){var self=this;return self["$is_type?"]($$("MOD"))});$def(self,"$is_name?",function $AstNode_is_name$ques$46(){var self=this;return self["$is_type?"]($$("NAME"))});$def(self,"$is_none?",function $AstNode_is_none$ques$47(){var self=this;return self["$is_type?"]($$("NONE"))});$def(self,"$is_not_eq_1?",function $AstNode_is_not_eq_1$ques$48(){var self=this;return self["$is_type?"]($$("NOT_EQ_1"))});$def(self,
"$is_not_eq_2?",function $AstNode_is_not_eq_2$ques$49(){var self=this;return self["$is_type?"]($$("NOT_EQ_2"))});$def(self,"$is_parameters?",$return_val(false));$def(self,"$is_star?",function $AstNode_is_star$ques$50(){var self=this;return self["$is_type?"]($$("STAR"))});$def(self,"$is_string?",function $AstNode_is_string$ques$51(){var self=this;return self["$is_type?"]($$("STRING"))});$def(self,"$is_suite?",$return_val(false));$def(self,"$is_tfpdef?",$return_val(false));$def(self,"$is_trailer?",
$return_val(false));$def(self,"$is_true?",function $AstNode_is_true$ques$52(){var self=this;return self["$is_type?"]($$("TRUE"))});$def(self,"$is_type?",function $AstNode_is_type$ques$53(test_type){var self=this;return self.$type()["$=="](test_type)});$def(self,"$is_typedargslist?",$return_val(false));$def(self,"$last_child",function $$last_child(){var self=this;return self.$children().$last()});$def(self,"$lastmost_child",function $$lastmost_child(){var self=this;if(!$truthy(self["$has_children?"]()))return self;
return self.$last_child().$lastmost_child()});$def(self,"$second_child",function $$second_child(){var self=this;return self.$children()["$[]"](1)});$def(self,"$set_has_trailer",function $$set_has_trailer(){var self=this;self.has_trailer=true;return $send(self.$children(),"each",[],function $$54(child){if(child==null)child=nil;return child.$set_has_trailer()})});$def(self,"$set_is_dotted",$assign_ivar_val("is_dotted",true));$def(self,"$set_is_last_child",function $$set_is_last_child(){var self=this;
self.is_last_child=true;return $send(self.$children(),"each",[],function $$55(child){if(child==null)child=nil;return child.$set_is_last_child()})});$def(self,"$set_is_lhs",function $$set_is_lhs(){var self=this;self.is_lhs=true;return $send(self.$children(),"each",[],function $$56(child){if(child==null)child=nil;return child.$set_is_lhs()})});$def(self,"$set_text",$assign_ivar("text"));$def(self,"$set_type",function $$set_type(type_arg){var self=this;if($eqeq(type_arg,$$("NUMBER")))type_arg=$truthy(self.$text()["$include?"]("."))?
$$("FLOAT_NUMBER"):$$("INTEGER");self.type=type_arg;return self.$set_value()});$def(self,"$set_value",function $$set_value(){var self=this,$ret_or_1=nil;if($eqeqeq($$("FLOAT_NUMBER"),$ret_or_1=self.$type()))return self.value=self.$text().$to_f();else if($eqeqeq($$("INTEGER"),$ret_or_1))return self.value=self.$text().$to_i();else return self.value=self.$text()});$def(self,"$show_attributes",function $$show_attributes(){var self=this;switch(self.$type_symbol()){case "CLOSE_PAREN":case "EOF":case "NEWLINE":return false;
default:return true}});$def(self,"$type_symbol",function $$type_symbol(){var self=this;return $$("AstUtil").$type_symbol(self.$type())});return $def(self,"$type_name",function $$type_name(){var self=this;return $$("StrUtil").$truncate(self.$type_symbol(),25)})}($nesting[0],null,$nesting)};Opal.modules["shared/parser/ast/annassign_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"AnnassignNode"),nil};
Opal.modules["shared/parser/ast/and_expr_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"AndExprNode"),nil};Opal.modules["shared/parser/ast/and_test_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"AndTestNode"),nil};
Opal.modules["shared/parser/ast/arglist_node"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$return_val=Opal.return_val,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("op_call,get_child_count");return function($base,$super){var self=$klass($base,$super,"ArglistNode");$def(self,"$generate_self",function $$generate_self(compiler_util){var $yield=$$generate_self.$$p||nil,self=this;$$generate_self.$$p=null;$send2(self,$find_super(self,
"generate_self",$$generate_self,false,true),"generate_self",[compiler_util],$yield);return compiler_util.$op_call(self,self.$get_child_count())});return $def(self,"$is_arglist?",$return_val(true))}($nesting[0],$$("AstNode"))};Opal.modules["shared/parser/ast/argument_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ArgumentNode"),nil};
Opal.modules["shared/parser/ast/arith_expr_node"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$truthy=Opal.truthy,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("has_mod?,op_binary_mod,is_add?,op_binary_plus,is_minus?,op_binary_minus");return function($base,$super){var self=$klass($base,$super,"ArithExprNode");return $def(self,"$generate_self",function $$generate_self(compiler_util){var $yield=$$generate_self.$$p||nil,self=this;$$generate_self.$$p=
null;$send2(self,$find_super(self,"generate_self",$$generate_self,false,true),"generate_self",[compiler_util],$yield);if($truthy(self["$has_mod?"]()))return compiler_util.$op_binary_mod(self);else if($truthy(self["$is_add?"]()))return compiler_util.$op_binary_plus(self);else if($truthy(self["$is_minus?"]()))return compiler_util.$op_binary_minus(self);else return nil})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/assert_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"AssertStmtNode"),nil};Opal.modules["shared/parser/ast/async_funcdef_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"AsyncFuncdefNode"),nil};
Opal.modules["shared/parser/ast/async_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"AsyncStmtNode"),nil};
Opal.modules["shared/parser/ast/atom_node"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$truthy=Opal.truthy,$not=Opal.not,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("is_close_brack?,op_build_list,get_child_count,first_child,is_ellipse?,op_build_ellipsis,is_literal?,op_load_const,value,is_name?,!,has_trailer?,is_lhs?,op_store_local,op_load_name");return function($base,$super){var self=$klass($base,$super,"AtomNode");return $def(self,
"$generate_self",function $$generate_self(compiler_util){var $yield=$$generate_self.$$p||nil,self=this;$$generate_self.$$p=null;$send2(self,$find_super(self,"generate_self",$$generate_self,false,true),"generate_self",[compiler_util],$yield);if($truthy(self["$is_close_brack?"]()))return compiler_util.$op_build_list(self,self.$first_child().$get_child_count());else if($truthy(self["$is_ellipse?"]()))return compiler_util.$op_build_ellipsis(self);else if($truthy(self["$is_literal?"]()))return compiler_util.$op_load_const(self,
self.$value());else if($truthy(self["$is_name?"]()))if($truthy(self["$is_lhs?"]())&&$not(self["$has_trailer?"]()))return compiler_util.$op_store_local(self,self.$value());else return compiler_util.$op_load_name(self,self.$value());else return nil})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/atom_expr_node"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs(">,get_child_count,set_is_last_child,last_child,is_trailer?,second_child,set_has_trailer,first_child");return function($base,$super){var self=$klass($base,$super,"AtomExprNode");return $def(self,"$generate",function $$generate(compiler_util){var $yield=$$generate.$$p||
nil,self=this;$$generate.$$p=null;if($truthy($rb_gt(self.$get_child_count(),1))){self.$last_child().$set_is_last_child();if($truthy(self.$second_child()["$is_trailer?"]()))self.$first_child().$set_has_trailer()}return $send2(self,$find_super(self,"generate",$$generate,false,true),"generate",[compiler_util],$yield)})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/break_stmt_node"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("op_jump_to");return function($base,$super){var self=$klass($base,$super,"BreakStmtNode");return $def(self,"$generate",function $$generate(compiler_util){var self=this;return compiler_util.$op_jump_to(self)})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/types/type_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"TypeType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("type"))}($nesting[0],
$$("Type"),$nesting)};
Opal.modules["shared/vm/core/py_object"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$hash2=Opal.hash2,$def=Opal.def,$send=Opal.send,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,nil?,get_initial_type,instance,to_sym,to_s,include?,attributes,[],__getattribute__,type,[]=");self.$require("shared/types/object_type");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"PyObject");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);
self.$attr_reader("attributes");self.$attr_reader("type");$def(self,"$initialize",function $$initialize(cls){var self=this;if(cls==null)cls=nil;self.type=$truthy(cls["$nil?"]())?self.$get_initial_type():cls;return self.attributes=$hash2([],{})},-1);$def(self,"$get_initial_type",function $$get_initial_type(){return $$("ObjectType").$instance()});$def(self,"$__getattribute__",function $$__getattribute__(name){var self=this,key=nil;key=name.$to_s().$to_sym();if($truthy(self.$attributes()["$include?"](key)))return self.$attributes()["$[]"](key);
return self.$type().$__getattribute__(name)});return $def(self,"$__setattr__",function $$__setattr__(name,value){var $a,self=this,key=nil;key=name.$to_s().$to_sym();return $a=[key,value],$send(self.$attributes(),"[]=",$a),$a[$a.length-1]})}($nesting[0],null,$nesting)};
Opal.modules["shared/vm/core/py_class"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$truthy=Opal.truthy,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,attr_reader,new,push,to_sym,to_s,include?,methods,[],instance,%,name,size,full_type_name");self.$require("shared/types/type_type");self.$require("shared/vm/core/py_object");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"PyClass");var $nesting=
[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("methods");self.$attr_reader("name");$def(self,"$initialize",function $$initialize(name_arg,methods_arg){var $yield=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;$send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",[],null);self.name=name_arg;return self.methods=methods_arg});$def(self,"$call",function $$call(interpreter,args){var self=this,inst=nil;inst=$$("PyObject").$new(self);return interpreter.$push(inst)});
$def(self,"$__getattribute__",function $$__getattribute__(name){var $yield=$$__getattribute__.$$p||nil,self=this,key=nil;$$__getattribute__.$$p=null;key=name.$to_s().$to_sym();if($truthy(self.$methods()["$include?"](key)))return self.$methods()["$[]"](key);return $send2(self,$find_super(self,"__getattribute__",$$__getattribute__,false,true),"__getattribute__",[name],$yield)});$def(self,"$get_initial_type",function $$get_initial_type(){return $$("TypeType").$instance()});$def(self,"$full_type_name",
function $$full_type_name(){var self=this;return"__main__.%s(%s)"["$%"]([self.$name(),self.$methods().$size()])});return $def(self,"$to_s",function $$to_s(){var self=this;return"<class '%s'>"["$%"](self.$full_type_name())})}($nesting[0],$$("PyObject"),$nesting)};
Opal.modules["shared/parser/ast/classdef_node"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$hash2=Opal.hash2,$send=Opal.send,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include,compile,each,compile_method,[]=,to_sym,name,find_name_text,find_suite,compile_methods,find_funcdefs,new,op_load_const,op_store_global");self.$require("shared/compiler/core/compiler_util");self.$require("shared/constants/type_constants");self.$require("shared/vm/core/py_class");
return function($base,$super,$parent_nesting){var self=$klass($base,$super,"ClassdefNode");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("TypeConstants"));$def(self,"$compile_method",function $$compile_method(funcdef_node){return funcdef_node.$compile()});$def(self,"$compile_methods",function $$compile_methods(funcdef_nodes){var self=this,methods=nil;methods=$hash2([],{});$send(funcdef_nodes,"each",[],function $$1(funcdef_node){var $a,self=$$1.$$s==null?this:$$1.$$s,
fn=nil;if(funcdef_node==null)funcdef_node=nil;fn=self.$compile_method(funcdef_node);return $a=[funcdef_node.$name().$to_sym(),fn],$send(methods,"[]=",$a),$a[$a.length-1]},{$$s:self});return methods});$def(self,"$generate",function $$generate(compiler_util){var self=this,name=nil,suite=nil,methods=nil,cls=nil;name=self.$find_name_text();suite=self.$find_suite();methods=self.$compile_methods(suite.$find_funcdefs());cls=$$("PyClass").$new(name,methods);compiler_util.$op_load_const(self,cls);return compiler_util.$op_store_global(self,
name)});return $def(self,"$is_classdef?",$return_val(true))}($nesting[0],$$("AstNode"),$nesting)};Opal.modules["shared/parser/ast/comp_if_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"CompIfNode"),nil};Opal.modules["shared/parser/ast/comp_iter_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"CompIterNode"),nil};
Opal.modules["shared/parser/ast/comp_for_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"CompForNode"),nil};
Opal.modules["shared/parser/ast/comp_op_node"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$truthy=Opal.truthy,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("is_less_than?,op_binary_less_than,is_lt_eq?,op_binary_lt_eq,is_equals?,op_binary_equals,is_gt_eq?,op_binary_gt_eq,is_greater_than?,op_binary_greater_than,is_not_eq_2?,is_not_eq_1?,op_binary_not_eq");return function($base,$super){var self=$klass($base,$super,"CompOpNode");return $def(self,
"$generate_self",function $$generate_self(compiler_util){var $yield=$$generate_self.$$p||nil,self=this;$$generate_self.$$p=null;$send2(self,$find_super(self,"generate_self",$$generate_self,false,true),"generate_self",[compiler_util],$yield);if($truthy(self["$is_less_than?"]()))return compiler_util.$op_binary_less_than(self);else if($truthy(self["$is_lt_eq?"]()))return compiler_util.$op_binary_lt_eq(self);else if($truthy(self["$is_equals?"]()))return compiler_util.$op_binary_equals(self);else if($truthy(self["$is_gt_eq?"]()))return compiler_util.$op_binary_gt_eq(self);
else if($truthy(self["$is_greater_than?"]()))return compiler_util.$op_binary_greater_than(self);else if($truthy(self["$is_not_eq_1?"]())||$truthy(self["$is_not_eq_2?"]()))return compiler_util.$op_binary_not_eq(self);else return nil})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/comparison_node"]=function(Opal){var $klass=Opal.klass,$eqeq=Opal.eqeq,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("==,get_child_count,generate,get_child");return function($base,$super){var self=$klass($base,$super,"ComparisonNode");return $def(self,"$generate",function $$generate(compiler_util){var $yield=$$generate.$$p||nil,self=this;$$generate.$$p=null;if($eqeq(self.$get_child_count(),3)){self.$get_child(0).$generate(compiler_util);
self.$get_child(2).$generate(compiler_util);return self.$get_child(1).$generate(compiler_util)}else return $send2(self,$find_super(self,"generate",$$generate,false,true),"generate",[compiler_util],$yield)})}($nesting[0],$$("AstNode"))};Opal.modules["shared/parser/ast/compound_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"CompoundStmtNode"),nil};
Opal.modules["shared/parser/ast/continue_stmt_node"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("op_jump_to");return function($base,$super){var self=$klass($base,$super,"ContinueStmtNode");return $def(self,"$generate",function $$generate(compiler_util){var self=this;return compiler_util.$op_jump_to(self)})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/decorated_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"DecoratedNode"),nil};Opal.modules["shared/parser/ast/decorator_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"DecoratorNode"),nil};
Opal.modules["shared/parser/ast/decorators_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"DecoratorsNode"),nil};Opal.modules["shared/parser/ast/del_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"DelStmtNode"),nil};
Opal.modules["shared/parser/ast/dictorsetmaker_node"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("op_build_dictionary,get_child_count");return function($base,$super){var self=$klass($base,$super,"DictorsetmakerNode");return $def(self,"$generate_self",function $$generate_self(compiler_util){var self=this;return compiler_util.$op_build_dictionary(self,self.$get_child_count())})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/dotted_as_name_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"DottedAsNameNode"),nil};Opal.modules["shared/parser/ast/dotted_as_names_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"DottedAsNamesNode"),nil};
Opal.modules["shared/parser/ast/dotted_name_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"DottedNameNode"),nil};Opal.modules["shared/parser/ast/encoding_decl_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"EncodingDeclNode"),nil};
Opal.modules["shared/parser/ast/except_clause_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ExceptClauseNode"),nil};Opal.modules["shared/parser/ast/expr_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ExprNode"),nil};
Opal.modules["shared/parser/ast/expr_stmt_node"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("is_assign?,generate_children_without_first,set_is_lhs,first_child,generate");return function($base,$super){var self=$klass($base,$super,"ExprStmtNode");return $def(self,"$generate_children",function $$generate_children(compiler_util){var $yield=$$generate_children.$$p||nil,
self=this;$$generate_children.$$p=null;if($truthy(self["$is_assign?"]())){self.$generate_children_without_first(compiler_util);self.$first_child().$set_is_lhs();return self.$first_child().$generate(compiler_util)}else return $send2(self,$find_super(self,"generate_children",$$generate_children,false,true),"generate_children",[compiler_util],$yield)})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/exprlist_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ExprlistNode"),nil};Opal.modules["shared/parser/ast/factor_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"FactorNode"),nil};
Opal.modules["shared/parser/ast/file_input_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"FileInputNode"),nil};Opal.modules["shared/parser/ast/flow_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"FlowStmtNode"),nil};
Opal.modules["shared/util/gen_sym"]=function(Opal){var $klass=Opal.klass,$class_variable_set=Opal.class_variable_set,$rb_plus=Opal.rb_plus,$class_variable_get=Opal.class_variable_get,$defs=Opal.defs,$nesting=[],nil=Opal.nil;Opal.add_stubs("+,%");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"GenSym");var $nesting=[self].concat($parent_nesting);$class_variable_set($nesting[0],"@@counter",0);return $defs(self,"$gen_symbol",function $$gen_symbol(name){var count=nil;if(name==
null)name="_symbol_";count=$class_variable_set($nesting[0],"@@counter",$rb_plus($class_variable_get($nesting[0],"@@counter",false),1));return"%s%s"["$%"]([name,count])},-1)}($nesting[0],null,$nesting)};
Opal.modules["shared/parser/ast/for_stmt_node"]=function(Opal){var $klass=Opal.klass,$rb_plus=Opal.rb_plus,$send=Opal.send,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,first_child,second_child,last_child,text,lastmost_child,gen_symbol,generate,op_store_local,mark,op_load_name,op_iter_is_eof,op_jump_if_true,op_iter_next,op_jump_to,patch,+,collect_break_indices,each,collect_continue_indices");self.$require("shared/util/gen_sym");return function($base,
$super,$parent_nesting){var self=$klass($base,$super,"ForStmtNode");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$generate",function $$generate(compiler_util){var self=this,exprlist_node=nil,testlist_node=nil,suite_node=nil,loop_var_name=nil,iterator_var_name=nil,loop_start=nil,test_patch_index=nil,loop_exit=nil,break_indices=nil,continue_indices=nil;exprlist_node=self.$first_child();testlist_node=self.$second_child();suite_node=self.$last_child();loop_var_name=
exprlist_node.$lastmost_child().$text();iterator_var_name=$$("GenSym").$gen_symbol();testlist_node.$generate(compiler_util);compiler_util.$op_store_local(self,iterator_var_name);loop_start=compiler_util.$mark(self);compiler_util.$op_load_name(self,iterator_var_name);compiler_util.$op_iter_is_eof(self);test_patch_index=compiler_util.$mark(self);compiler_util.$op_jump_if_true(self);compiler_util.$op_load_name(self,iterator_var_name);compiler_util.$op_iter_next(self);compiler_util.$op_store_local(self,
loop_var_name);suite_node.$generate(compiler_util);compiler_util.$op_jump_to(self,loop_start);loop_exit=compiler_util.$mark(self);compiler_util.$patch(self,$rb_plus(test_patch_index,1),loop_exit);break_indices=[];suite_node.$collect_break_indices(break_indices);$send(break_indices,"each",[],function $$1(break_index){var self=$$1.$$s==null?this:$$1.$$s;if(break_index==null)break_index=nil;return compiler_util.$patch(self,$rb_plus(break_index,1),loop_exit)},{$$s:self});continue_indices=[];suite_node.$collect_continue_indices(continue_indices);
return $send(continue_indices,"each",[],function $$2(continue_index){var self=$$2.$$s==null?this:$$2.$$s;if(continue_index==null)continue_index=nil;return compiler_util.$patch(self,$rb_plus(continue_index,1),loop_start)},{$$s:self})})}($nesting[0],$$("AstNode"),$nesting)};
Opal.modules["shared/types/function_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"FunctionType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("function"))}($nesting[0],
$$("Type"),$nesting)};
Opal.modules["shared/vm/core/py_function"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,attr_reader,push_frame,codeobject,instance");self.$require("shared/types/function_type");self.$require("shared/vm/core/py_object");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"PyFunction");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("codeobject");self.$attr_reader("defining_instance");
self.$attr_reader("name");self.$attr_reader("parameters");$def(self,"$initialize",function $$initialize(name_arg,parameters_arg,codeobject_arg,defining_instance_arg){var self=this;if(defining_instance_arg==null)defining_instance_arg=nil;self.name=name_arg;self.parameters=parameters_arg;self.codeobject=codeobject_arg;return self.defining_instance=defining_instance_arg},-4);$def(self,"$call",function $$call(interpreter,args){var self=this;return interpreter.$push_frame(self.$codeobject(),args)});return $def(self,
"$get_initial_type",function $$get_initial_type(){return $$("FunctionType").$instance()})}($nesting[0],$$("PyObject"),$nesting)};
Opal.modules["shared/vm/core/py_parameters"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$nesting=[],nil=Opal.nil;Opal.add_stubs("attr_reader");return function($base,$super){var self=$klass($base,$super,"PyParameters");self.$attr_reader("arg_names");return $def(self,"$initialize",function $$initialize(arg_names_arg){var self=this;if(arg_names_arg==null)arg_names_arg=[];return self.arg_names=arg_names_arg},-1)}($nesting[0],null)};
Opal.modules["shared/parser/ast/funcdef_node"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$truthy=Opal.truthy,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,generate,find_name_text,find_arg_names,new,find_suite,get_code_object,set_parameters,name,op_load_const,op_store_global,find_parameters,nil?");self.$require("shared/compiler/compiler");self.$require("shared/compiler/core/compiler_util");self.$require("shared/constants/type_constants");
self.$require("shared/vm/core/py_function");self.$require("shared/vm/core/py_parameters");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"FuncdefNode");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("name");self.$include($$("TypeConstants"));$def(self,"$compile",function $$compile(){var self=this;return self.$generate(self,true)});$def(self,"$generate",function $$generate(compiler_util,as_method){var self=this,arg_names=nil,parameters=
nil,suite=nil,funcdef_compiler_util=nil,code_object=nil,fn=nil;if(as_method==null)as_method=false;self.name=self.$find_name_text();arg_names=self.$find_arg_names();parameters=$$("PyParameters").$new(arg_names);suite=self.$find_suite();funcdef_compiler_util=$$("CompilerUtil").$new();suite.$generate(funcdef_compiler_util);code_object=funcdef_compiler_util.$get_code_object();code_object.$set_parameters(parameters);fn=$$("PyFunction").$new(self.$name(),parameters,code_object);if($truthy(as_method))return fn;
compiler_util.$op_load_const(self,fn);return compiler_util.$op_store_global(self,self.$name())},-2);$def(self,"$find_arg_names",function $$find_arg_names(){var self=this,parameters=nil;parameters=self.$find_parameters();if($truthy(parameters["$nil?"]()))return[];else return parameters.$find_arg_names()});return $def(self,"$is_funcdef?",$return_val(true))}($nesting[0],$$("AstNode"),$nesting)};
Opal.modules["shared/parser/ast/global_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"GlobalStmtNode"),nil};
Opal.modules["shared/parser/ast/if_stmt_node"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$send=Opal.send,$truthy=Opal.truthy,$rb_lt=Opal.rb_lt,$rb_plus=Opal.rb_plus,$rb_minus=Opal.rb_minus,$rb_gt=Opal.rb_gt,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("attr_reader,generate_tests_and_suites,times,size,suites,<,tests,generate_test_and_suite,generate_else_suite,generate_patch_jumps_to_end,[],generate,mark,each,jump_end_indices,patch,+,op_jump_if_false,needs_jump_to_end?,push,op_jump_to,children,is_a?,puts,%,class,has_else_node?,-,>");
return function($base,$super,$parent_nesting){var self=$klass($base,$super,"IfStmtNode");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("jump_end_indices");self.$attr_reader("suites");self.$attr_reader("tests");$def(self,"$initialize",function $$initialize(name,parent){var $yield=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;if(parent==null)parent=nil;$send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",[name,parent],$yield);self.jump_end_indices=
[];self.suites=[];return self.tests=[]},-2);$def(self,"$generate",function $$generate(compiler_util){var self=this;self.$generate_tests_and_suites();$send(self.$suites().$size(),"times",[],function $$1(i){var self=$$1.$$s==null?this:$$1.$$s;if(i==null)i=nil;if($truthy($rb_lt(i,self.$tests().$size())))return self.$generate_test_and_suite(compiler_util,i);else return self.$generate_else_suite(compiler_util,i)},{$$s:self});return self.$generate_patch_jumps_to_end(compiler_util)});$def(self,"$generate_else_suite",
function $$generate_else_suite(compiler_util,index){var self=this,else_suite_node=nil;else_suite_node=self.$suites()["$[]"](index);return else_suite_node.$generate(compiler_util)});$def(self,"$generate_patch_jumps_to_end",function $$generate_patch_jumps_to_end(compiler_util){var self=this,end_target=nil;end_target=compiler_util.$mark(self);return $send(self.$jump_end_indices(),"each",[],function $$2(index){var self=$$2.$$s==null?this:$$2.$$s;if(index==null)index=nil;return compiler_util.$patch(self,
$rb_plus(index,1),end_target)},{$$s:self})});$def(self,"$generate_test_and_suite",function $$generate_test_and_suite(compiler_util,index){var self=this,test_node=nil,suite_node=nil,test_patch_index=nil,test_false_target=nil;test_node=self.$tests()["$[]"](index);suite_node=self.$suites()["$[]"](index);test_node.$generate(compiler_util);test_patch_index=compiler_util.$mark(self);compiler_util.$op_jump_if_false(self);suite_node.$generate(compiler_util);if($truthy(self["$needs_jump_to_end?"](index))){self.$jump_end_indices().$push(compiler_util.$mark(self));
compiler_util.$op_jump_to(self)}test_false_target=compiler_util.$mark(self);return compiler_util.$patch(self,$rb_plus(test_patch_index,1),test_false_target)});$def(self,"$generate_tests_and_suites",function $$generate_tests_and_suites(){var self=this;return $send(self.$children(),"each",[],function $$3(child){var self=$$3.$$s==null?this:$$3.$$s;if(child==null)child=nil;if($truthy(child["$is_a?"]($$("TestNode"))))return self.$tests().$push(child);else if($truthy(child["$is_a?"]($$("SuiteNode"))))return self.$suites().$push(child);
else return self.$puts("unknown if_node child %s"["$%"](child.$class()))},{$$s:self})});$def(self,"$needs_jump_to_end?",function $IfStmtNode_needs_jump_to_end$ques$4(index){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=self["$has_else_node?"]()))return $ret_or_1;else return $rb_lt(index,$rb_minus(self.$tests().$size(),1))});return $def(self,"$has_else_node?",function $IfStmtNode_has_else_node$ques$5(){var self=this;return $rb_gt(self.$suites().$size(),self.$tests().$size())})}($nesting[0],$$("AstNode"),
$nesting)};Opal.modules["shared/parser/ast/import_as_name_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ImportAsNameNode"),nil};Opal.modules["shared/parser/ast/import_as_names_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ImportAsNamesNode"),nil};
Opal.modules["shared/parser/ast/import_from_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],nil=Opal.nil;return $klass($nesting[0],null,"ImportFromNode"),nil};Opal.modules["shared/parser/ast/import_name_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ImportNameNode"),nil};
Opal.modules["shared/parser/ast/import_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ImportStmtNode"),nil};Opal.modules["shared/parser/ast/lambdef_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"LambdefNode"),nil};
Opal.modules["shared/parser/ast/lambdef_nocond_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"LambdefNocondNode"),nil};Opal.modules["shared/parser/ast/nonlocal_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"NonlocalStmtNode"),nil};
Opal.modules["shared/parser/ast/not_test_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"NotTestNode"),nil};Opal.modules["shared/parser/ast/or_test_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"OrTestNode"),nil};
Opal.modules["shared/parser/ast/parameters_node"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,$return_val=Opal.return_val,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("find_typedargslist,nil?,find_arg_names");return function($base,$super){var self=$klass($base,$super,"ParametersNode");$def(self,"$find_arg_names",function $$find_arg_names(){var self=this,typed_args_list=nil;typed_args_list=self.$find_typedargslist();if($truthy(typed_args_list["$nil?"]()))return[];
else return typed_args_list.$find_arg_names()});return $def(self,"$is_parameters?",$return_val(true))}($nesting[0],$$("AstNode"))};Opal.modules["shared/parser/ast/pass_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"PassStmtNode"),nil};
Opal.modules["shared/parser/ast/power_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"PowerNode"),nil};Opal.modules["shared/parser/ast/raise_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],nil=Opal.nil;return $klass($nesting[0],null,"RaiseStmtNode"),nil};
Opal.modules["shared/parser/ast/return_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ReturnStmtNode"),nil};Opal.modules["shared/parser/ast/shift_expr_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"ShiftExprNode"),nil};
Opal.modules["shared/parser/ast/simple_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"SimpleStmtNode"),nil};Opal.modules["shared/parser/ast/slice_op_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"SliceOpNode"),nil};
Opal.modules["shared/parser/ast/small_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"SmallStmtNode"),nil};Opal.modules["shared/parser/ast/star_expr_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"StarExprNode"),nil};
Opal.modules["shared/parser/ast/stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"StmtNode"),nil};Opal.modules["shared/parser/ast/subscript_list_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"SubscriptListNode"),nil};
Opal.modules["shared/parser/ast/subscript_node"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("is_lhs?,is_last_child?,op_store_subscript,op_load_subscript");return function($base,$super){var self=$klass($base,$super,"Subscript_Node");return $def(self,"$generate_self",function $$generate_self(compiler_util){var self=this;if($truthy(self["$is_last_child?"]())&&$truthy(self["$is_lhs?"]()))return compiler_util.$op_store_subscript(self);
else return compiler_util.$op_load_subscript(self)})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/suite_node"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$send=Opal.send,$truthy=Opal.truthy,$return_val=Opal.return_val,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("attr_reader,each,break_indices,append,continue_indices,children,find_funcdef,nil?,push,has_break?,mark,has_continue?,generate");return function($base,$super){var self=$klass($base,$super,"SuiteNode");self.$attr_reader("break_indices");
self.$attr_reader("continue_indices");$def(self,"$initialize",function $$initialize(name,parent){var $yield=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;$send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",[name,parent],$yield);self.break_indices=[];return self.continue_indices=[]});$def(self,"$collect_break_indices",function $$collect_break_indices(break_indices_list){var $yield=$$collect_break_indices.$$p||nil,self=this;$$collect_break_indices.$$p=null;$send2(self,
$find_super(self,"collect_break_indices",$$collect_break_indices,false,true),"collect_break_indices",[break_indices_list],$yield);return $send(self.$break_indices(),"each",[],function $$1(break_index){if(break_index==null)break_index=nil;return break_indices_list.$append(break_index)})});$def(self,"$collect_continue_indices",function $$collect_continue_indices(continue_indices_list){var $yield=$$collect_continue_indices.$$p||nil,self=this;$$collect_continue_indices.$$p=null;$send2(self,$find_super(self,
"collect_continue_indices",$$collect_continue_indices,false,true),"collect_continue_indices",[continue_indices_list],$yield);return $send(self.$continue_indices(),"each",[],function $$2(continue_index){if(continue_index==null)continue_index=nil;return continue_indices_list.$append(continue_index)})});$def(self,"$find_funcdefs",function $$find_funcdefs(){var self=this,funcdefs=nil;funcdefs=[];$send(self.$children(),"each",[],function $$3(child){var funcdef=nil;if(child==null)child=nil;funcdef=child.$find_funcdef();
if($truthy(funcdef["$nil?"]()))return nil;else return funcdefs.$push(funcdef)});return funcdefs});$def(self,"$generate",function $$generate(compiler_util){var self=this;return $send(self.$children(),"each",[],function $$4(child){var self=$$4.$$s==null?this:$$4.$$s;if(child==null)child=nil;if($truthy(child["$has_break?"]()))self.$break_indices().$push(compiler_util.$mark(self));if($truthy(child["$has_continue?"]()))self.$continue_indices().$push(compiler_util.$mark(self));return child.$generate(compiler_util)},
{$$s:self})});return $def(self,"$is_suite?",$return_val(true))}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/term_node"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$truthy=Opal.truthy,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("has_div?,op_binary_divide,has_idiv?,op_binary_int_divide,has_star?,op_binary_multiply");return function($base,$super){var self=$klass($base,$super,"TermNode");return $def(self,"$generate_self",function $$generate_self(compiler_util){var $yield=$$generate_self.$$p||nil,self=this;
$$generate_self.$$p=null;$send2(self,$find_super(self,"generate_self",$$generate_self,false,true),"generate_self",[compiler_util],$yield);if($truthy(self["$has_div?"]()))return compiler_util.$op_binary_divide(self);else if($truthy(self["$has_idiv?"]()))return compiler_util.$op_binary_int_divide(self);else if($truthy(self["$has_star?"]()))return compiler_util.$op_binary_multiply(self);else return nil})}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/test_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"TestNode"),nil};Opal.modules["shared/parser/ast/test_nocond_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"TestNocondNode"),nil};
Opal.modules["shared/parser/ast/testlist_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"TestlistNode"),nil};Opal.modules["shared/parser/ast/testlist_comp_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"TestlistCompNode"),nil};
Opal.modules["shared/parser/ast/testlist_star_expr_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"TestlistStarExprNode"),nil};
Opal.modules["shared/parser/ast/tfpdef_node"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return function($base,$super){var self=$klass($base,$super,"TfpdefNode");return $def(self,"$is_tfpdef?",$return_val(true))}($nesting[0],$$("AstNode"))};
Opal.modules["shared/parser/ast/trailer_node"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,$return_val=Opal.return_val,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("is_dotted?,find_name_text,op_load_attr,find_arglist,nil?,op_call");return function($base,$super){var self=$klass($base,$super,"TrailerNode");$def(self,"$generate_self",function $$generate_self(compiler_util){var self=this,name=nil,arglist=nil;if($truthy(self["$is_dotted?"]())){name=self.$find_name_text();
return compiler_util.$op_load_attr(self,name)}else{arglist=self.$find_arglist();if($truthy(arglist["$nil?"]()))return compiler_util.$op_call(self,0);else return nil}});return $def(self,"$is_trailer?",$return_val(true))}($nesting[0],$$("AstNode"))};Opal.modules["shared/parser/ast/try_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"TryStmtNode"),nil};
Opal.modules["shared/parser/ast/typed_argslist_node"]=function(Opal){var $klass=Opal.klass,$send=Opal.send,$truthy=Opal.truthy,$def=Opal.def,$return_val=Opal.return_val,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("each,children,find_name_text,nil?,push");return function($base,$super){var self=$klass($base,$super,"TypedArgslistNode");$def(self,"$find_arg_names",function $$find_arg_names(){var self=this,method_names=nil;method_names=[];$send(self.$children(),"each",[],function $$1(child){var method_name=
nil;if(child==null)child=nil;method_name=child.$find_name_text();if($truthy(method_name["$nil?"]()))return nil;else return method_names.$push(method_name)});return method_names});return $def(self,"$is_typedargslist?",$return_val(true))}($nesting[0],$$("AstNode"))};Opal.modules["shared/parser/ast/var_argslist_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"VarArgslistNode"),nil};
Opal.modules["shared/parser/ast/vfpdef_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"VfpdefNode"),nil};
Opal.modules["shared/parser/ast/while_stmt_node"]=function(Opal){var $klass=Opal.klass,$rb_plus=Opal.rb_plus,$send=Opal.send,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("first_child,last_child,mark,generate,op_jump_if_false,op_jump_to,patch,+,collect_break_indices,each,collect_continue_indices");return function($base,$super){var self=$klass($base,$super,"WhileStmtNode");return $def(self,"$generate",function $$generate(compiler_util){var self=this,test_node=nil,suite_node=
nil,loop_start=nil,test_patch_index=nil,loop_exit=nil,break_indices=nil,continue_indices=nil;test_node=self.$first_child();suite_node=self.$last_child();loop_start=compiler_util.$mark(self);test_node.$generate(compiler_util);test_patch_index=compiler_util.$mark(self);compiler_util.$op_jump_if_false(self);suite_node.$generate(compiler_util);compiler_util.$op_jump_to(self,loop_start);loop_exit=compiler_util.$mark(self);compiler_util.$patch(self,$rb_plus(test_patch_index,1),loop_exit);break_indices=
[];suite_node.$collect_break_indices(break_indices);$send(break_indices,"each",[],function $$1(break_index){var self=$$1.$$s==null?this:$$1.$$s;if(break_index==null)break_index=nil;return compiler_util.$patch(self,$rb_plus(break_index,1),loop_exit)},{$$s:self});continue_indices=[];suite_node.$collect_continue_indices(continue_indices);return $send(continue_indices,"each",[],function $$2(continue_index){var self=$$2.$$s==null?this:$$2.$$s;if(continue_index==null)continue_index=nil;return compiler_util.$patch(self,
$rb_plus(continue_index,1),loop_start)},{$$s:self})})}($nesting[0],$$("AstNode"))};Opal.modules["shared/parser/ast/with_item_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"WithItemNode"),nil};Opal.modules["shared/parser/ast/with_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"WithStmtNode"),nil};
Opal.modules["shared/parser/ast/xor_expr_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"XorExprNode"),nil};Opal.modules["shared/parser/ast/yield_arg_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"YieldArgNode"),nil};
Opal.modules["shared/parser/ast/yield_expr_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"YieldExprNode"),nil};Opal.modules["shared/parser/ast/yield_stmt_node"]=function(Opal){var $klass=Opal.klass,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return $klass($nesting[0],$$("AstNode"),"YieldStmtNode"),nil};
Opal.modules["shared/parser/parser"]=function(Opal){var $klass=Opal.klass,$eqeq=Opal.eqeq,$range=Opal.range,$def=Opal.def,$truthy=Opal.truthy,$send=Opal.send,$thrower=Opal.thrower,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,include,==,[],instance_of?,is_attribute_node?,nil?,is_classdef?,is_funcdef?,create_ast_node,type_symbol,set_text,set_type,is_trailer?,set_is_dotted,adjust_text,each,keys,build_ast,to_sym,new,size,member?");self.$require("shared/constants/type_constants");self.$require("shared/parser/ast/ast_node");
self.$require("shared/parser/ast/annassign_node");self.$require("shared/parser/ast/and_expr_node");self.$require("shared/parser/ast/and_test_node");self.$require("shared/parser/ast/arglist_node");self.$require("shared/parser/ast/argument_node");self.$require("shared/parser/ast/arith_expr_node");self.$require("shared/parser/ast/assert_stmt_node");self.$require("shared/parser/ast/async_funcdef_node");self.$require("shared/parser/ast/async_stmt_node");self.$require("shared/parser/ast/atom_node");self.$require("shared/parser/ast/atom_expr_node");
self.$require("shared/parser/ast/break_stmt_node");self.$require("shared/parser/ast/classdef_node");self.$require("shared/parser/ast/comp_if_node");self.$require("shared/parser/ast/comp_iter_node");self.$require("shared/parser/ast/comp_for_node");self.$require("shared/parser/ast/comp_op_node");self.$require("shared/parser/ast/comparison_node");self.$require("shared/parser/ast/compound_stmt_node");self.$require("shared/parser/ast/continue_stmt_node");self.$require("shared/parser/ast/decorated_node");
self.$require("shared/parser/ast/decorator_node");self.$require("shared/parser/ast/decorators_node");self.$require("shared/parser/ast/del_stmt_node");self.$require("shared/parser/ast/dictorsetmaker_node");self.$require("shared/parser/ast/dotted_as_name_node");self.$require("shared/parser/ast/dotted_as_names_node");self.$require("shared/parser/ast/dotted_name_node");self.$require("shared/parser/ast/encoding_decl_node");self.$require("shared/parser/ast/except_clause_node");self.$require("shared/parser/ast/expr_node");
self.$require("shared/parser/ast/expr_stmt_node");self.$require("shared/parser/ast/exprlist_node");self.$require("shared/parser/ast/factor_node");self.$require("shared/parser/ast/file_input_node");self.$require("shared/parser/ast/flow_stmt_node");self.$require("shared/parser/ast/for_stmt_node");self.$require("shared/parser/ast/funcdef_node");self.$require("shared/parser/ast/global_stmt_node");self.$require("shared/parser/ast/if_stmt_node");self.$require("shared/parser/ast/import_as_name_node");self.$require("shared/parser/ast/import_as_names_node");
self.$require("shared/parser/ast/import_from_node");self.$require("shared/parser/ast/import_name_node");self.$require("shared/parser/ast/import_stmt_node");self.$require("shared/parser/ast/lambdef_node");self.$require("shared/parser/ast/lambdef_nocond_node");self.$require("shared/parser/ast/nonlocal_stmt_node");self.$require("shared/parser/ast/not_test_node");self.$require("shared/parser/ast/or_test_node");self.$require("shared/parser/ast/parameters_node");self.$require("shared/parser/ast/pass_stmt_node");
self.$require("shared/parser/ast/power_node");self.$require("shared/parser/ast/raise_stmt_node");self.$require("shared/parser/ast/return_stmt_node");self.$require("shared/parser/ast/shift_expr_node");self.$require("shared/parser/ast/simple_stmt_node");self.$require("shared/parser/ast/slice_op_node");self.$require("shared/parser/ast/small_stmt_node");self.$require("shared/parser/ast/star_expr_node");self.$require("shared/parser/ast/stmt_node");self.$require("shared/parser/ast/subscript_list_node");
self.$require("shared/parser/ast/subscript_node");self.$require("shared/parser/ast/suite_node");self.$require("shared/parser/ast/term_node");self.$require("shared/parser/ast/test_node");self.$require("shared/parser/ast/test_nocond_node");self.$require("shared/parser/ast/testlist_node");self.$require("shared/parser/ast/testlist_comp_node");self.$require("shared/parser/ast/testlist_star_expr_node");self.$require("shared/parser/ast/tfpdef_node");self.$require("shared/parser/ast/trailer_node");self.$require("shared/parser/ast/try_stmt_node");
self.$require("shared/parser/ast/typed_argslist_node");self.$require("shared/parser/ast/var_argslist_node");self.$require("shared/parser/ast/vfpdef_node");self.$require("shared/parser/ast/while_stmt_node");self.$require("shared/parser/ast/with_item_node");self.$require("shared/parser/ast/with_stmt_node");self.$require("shared/parser/ast/xor_expr_node");self.$require("shared/parser/ast/yield_arg_node");self.$require("shared/parser/ast/yield_expr_node");self.$require("shared/parser/ast/yield_stmt_node");
return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Parser");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("TypeConstants"));$def(self,"$adjust_text",function $$adjust_text(text,type){if($eqeq(type,$$("STRING")))return text["$[]"]($range(1,-2,false));else return text});$def(self,"$build_ast",function $$build_ast(tree_node,parent_node){try{var $t_return=$thrower("return");var self=this,text=nil,type=nil,name_node=nil;if(parent_node==null)parent_node=
nil;if($truthy(tree_node["$instance_of?"]($$("Hash"))))if($truthy(self["$is_attribute_node?"](tree_node)))if($truthy(parent_node["$nil?"]()))return nil;else{text=tree_node["$[]"]("text");type=tree_node["$[]"]("type");if(($truthy(parent_node["$is_funcdef?"]())||$truthy(parent_node["$is_classdef?"]()))&&$eqeq(type,$$("NAME"))){name_node=self.$create_ast_node($$("AstUtil").$type_symbol($$("NAME")),parent_node);name_node.$set_text(text);return name_node.$set_type(type)}else if($truthy(parent_node["$is_trailer?"]())&&
$eqeq(type,$$("DOT")))return parent_node.$set_is_dotted();else{parent_node.$set_text(self.$adjust_text(text,type));return parent_node.$set_type(type)}}else return $send(tree_node.$keys(),"each",[],function $$1(key){var self=$$1.$$s==null?this:$$1.$$s,ast_node=nil;if(key==null)key=nil;ast_node=self.$create_ast_node(key,parent_node);self.$build_ast(tree_node["$[]"](key),ast_node);$t_return.$throw(ast_node)},{$$s:self,$$ret:$t_return});else if($truthy(tree_node["$instance_of?"]($$("Array"))))return $send(tree_node,
"each",[],function $$2(item){var self=$$2.$$s==null?this:$$2.$$s;if(item==null)item=nil;return self.$build_ast(item,parent_node)},{$$s:self});else return nil}catch($e){if($e===$t_return)return $e.$v;throw $e;}},-2);$def(self,"$create_ast_node",function $$create_ast_node(name,parent){switch(name.$to_sym()){case "annassign":return $$("AnnassignNode").$new(name,parent);case "and_expr":return $$("AndExprNode").$new(name,parent);case "and_test":return $$("AndTestNode").$new(name,parent);case "arith_expr":return $$("ArithExprNode").$new(name,
parent);case "arglist":return $$("ArglistNode").$new(name,parent);case "argument":return $$("ArgumentNode").$new(name,parent);case "assert_stmt":return $$("AssertStmtNode").$new(name,parent);case "async_funcdef":return $$("AsyncFuncdefNode").$new(name,parent);case "async_stmt":return $$("AsyncStmtNode").$new(name,parent);case "atom":return $$("AtomNode").$new(name,parent);case "atom_expr":return $$("AtomExprNode").$new(name,parent);case "augassign":return $$("AugAssignNode").$new(name,parent);case "break_stmt":return $$("BreakStmtNode").$new(name,
parent);case "classdef":return $$("ClassdefNode").$new(name,parent);case "comparison":return $$("ComparisonNode").$new(name,parent);case "comp_for":return $$("CompForNode").$new(name,parent);case "comp_if":return $$("CompIfNode").$new(name,parent);case "comp_iter":return $$("CompIterNode").$new(name,parent);case "comp_op":return $$("CompOpNode").$new(name,parent);case "compound_stmt":return $$("CompoundStmtNode").$new(name,parent);case "continue_stmt":return $$("ContinueStmtNode").$new(name,parent);
case "decorated":return $$("DecoratedNode").$new(name,parent);case "decorator":return $$("DecoratorNode").$new(name,parent);case "del_stmt":return $$("DelStmtNode").$new(name,parent);case "dictorsetmaker":return $$("DictorsetmakerNode").$new(name,parent);case "dotted_as_name":return $$("DottedAsNameNode").$new(name,parent);case "dotted_as_names":return $$("DottedAsNamesNode").$new(name,parent);case "dotted_name":return $$("DottedNameNode").$new(name,parent);case "except_clause":return $$("ExceptClauseNode").$new(name,
parent);case "encoding_decl":return $$("EncodingDeclNode").$new(name,parent);case "expr":return $$("ExprNode").$new(name,parent);case "expr_stmt":return $$("ExprStmtNode").$new(name,parent);case "exprlist":return $$("ExprlistNode").$new(name,parent);case "factor":return $$("FactorNode").$new(name,parent);case "file_input":return $$("FileInputNode").$new(name,parent);case "flow_stmt":return $$("FlowStmtNode").$new(name,parent);case "funcdef":return $$("FuncdefNode").$new(name,parent);case "for_stmt":return $$("ForStmtNode").$new(name,
parent);case "global_stmt":return $$("GlobalStmtNode").$new(name,parent);case "if_stmt":return $$("IfStmtNode").$new(name,parent);case "import_as_name":return $$("ImportAsNameNode").$new(name,parent);case "import_as_names":return $$("ImportAsNamesNode").$new(name,parent);case "import_from":return $$("ImportFromNode").$new(name,parent);case "import_name":return $$("ImportNameNode").$new(name,parent);case "import_stmt":return $$("ImportStmtNode").$new(name,parent);case "lambdef":return $$("LambdefNode").$new(name,
parent);case "lambdef_nocond":return $$("LambdefNocondNode").$new(name,parent);case "nonlocal_stmt":return $$("NonlocalStmtNode").$new(name,parent);case "not_test":return $$("NotTestNode").$new(name,parent);case "or_test":return $$("OrTestNode").$new(name,parent);case "parameters":return $$("ParametersNode").$new(name,parent);case "pass_stmt":return $$("PassStmtNode").$new(name,parent);case "power":return $$("PowerNode").$new(name,parent);case "raise_stmt":return $$("RaiseStmtNode").$new(name,parent);
case "return_stmt":return $$("ReturnStmtNode").$new(name,parent);case "shift_expr":return $$("ShiftExprNode").$new(name,parent);case "simple_stmt":return $$("SimpleStmtNode").$new(name,parent);case "sliceop":return $$("SliceOpNode").$new(name,parent);case "small_stmt":return $$("SmallStmtNode").$new(name,parent);case "star_expr":return $$("StarExprNode").$new(name,parent);case "stmt":return $$("StmtNode").$new(name,parent);case "subscript_":return $$("Subscript_Node").$new(name,parent);case "subscriptlist":return $$("SubscriptListNode").$new(name,
parent);case "suite":return $$("SuiteNode").$new(name,parent);case "term":return $$("TermNode").$new(name,parent);case "test":return $$("TestNode").$new(name,parent);case "test_nocond":return $$("TestNocondNode").$new(name,parent);case "testlist":return $$("TestlistNode").$new(name,parent);case "testlist_comp":return $$("TestlistCompNode").$new(name,parent);case "testlist_star_expr":return $$("TestlistStarExprNode").$new(name,parent);case "tfpdef":return $$("TfpdefNode").$new(name,parent);case "trailer":return $$("TrailerNode").$new(name,
parent);case "try_stmt":return $$("TryStmtNode").$new(name,parent);case "typedargslist":return $$("TypedArgslistNode").$new(name,parent);case "xor_expr":return $$("XorExprNode").$new(name,parent);case "varargslist":return $$("VarArgslistNode").$new(name,parent);case "vfpdef":return $$("VfpdefNode").$new(name,parent);case "while_stmt":return $$("WhileStmtNode").$new(name,parent);case "with_item":return $$("WithItemNode").$new(name,parent);case "with_stmt":return $$("WithStmtNode").$new(name,parent);
case "yield_arg":return $$("YieldArgNode").$new(name,parent);case "yield_expr":return $$("YieldExprNode").$new(name,parent);case "yield_stmt":return $$("YieldStmtNode").$new(name,parent);default:return $$("AstNode").$new(name,parent)}});$def(self,"$is_attribute_node?",function $Parser_is_attribute_node$ques$3(tree_node){if(!($truthy(tree_node["$instance_of?"]($$("Hash")))&&$eqeq(tree_node.$size(),2)))return false;if(!($truthy(tree_node.$keys()["$member?"]("type"))&&$truthy(tree_node.$keys()["$member?"]("text"))))return false;
return true});return $def(self,"$parse",function $$parse(parse_tree){var self=this;return self.$build_ast(parse_tree)})}($nesting[0],null,$nesting)};
Opal.modules["json"]=function(Opal){var $module=Opal.module,$klass=Opal.klass,$send=Opal.send,$Object=Opal.Object,$hash2=Opal.hash2,$eqeqeq=Opal.eqeqeq,$defs=Opal.defs,$truthy=Opal.truthy,$def=Opal.def,$return_val=Opal.return_val,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("raise,new,push,[]=,[],create_id,json_create,const_get,attr_accessor,create_id=,===,parse,generate,from_object,merge,to_json,responds_to?,to_io,write,to_s,to_a,strftime");(function($base,$parent_nesting){var self=$module($base,
"JSON");var $a,$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$klass($nesting[0],$$("StandardError"),"JSONError");$klass($nesting[0],$$("JSONError"),"ParserError");var $hasOwn=Opal.hasOwnProperty;function $parse(source){try{return JSON.parse(source)}catch(e){self.$raise($$$($$("JSON"),"ParserError"),e.message)}}function to_opal(value,options){var klass,arr,hash,i,ii,k;switch(typeof value){case "string":return value;case "number":return value;case "boolean":return!!value;case "undefined":return nil;
case "object":if(!value)return nil;if(value.$$is_array){arr=options.array_class.$new();for(i=0,ii=value.length;i<ii;i++)arr.$push(to_opal(value[i],options));return arr}else{hash=options.object_class.$new();for(k in value)if($hasOwn.call(value,k))$a=[k,to_opal(value[k],options)],$send(hash,"[]=",$a),$a[$a.length-1];if(!options.parse&&(klass=hash["$[]"]($$("JSON").$create_id()))!=nil)return $Object.$const_get(klass).$json_create(hash);else return hash}}}(function(self,$parent_nesting){return self.$attr_accessor("create_id")})(Opal.get_singleton_class(self),
$nesting);self["$create_id="]("json_class");$defs(self,"$[]",function $JSON_$$$1(value,options){var self=this;if(options==null)options=$hash2([],{});if($eqeqeq($$("String"),value))return self.$parse(value,options);else return self.$generate(value,options)},-2);$defs(self,"$parse",function $$parse(source,options){var self=this;if(options==null)options=$hash2([],{});return self.$from_object($parse(source),options.$merge($hash2(["parse"],{"parse":true})))},-2);$defs(self,"$parse!",function $JSON_parse$excl$2(source,
options){var self=this;if(options==null)options=$hash2([],{});return self.$parse(source,options)},-2);$defs(self,"$load",function $$load(source,options){var self=this;if(options==null)options=$hash2([],{});return self.$from_object($parse(source),options)},-2);$defs(self,"$from_object",function $$from_object(js_object,options){var $ret_or_1=nil;if(options==null)options=$hash2([],{});if($truthy($ret_or_1=options["$[]"]("object_class")))$ret_or_1;else options["$[]="]("object_class",$$("Hash"));if($truthy($ret_or_1=
options["$[]"]("array_class")))$ret_or_1;else options["$[]="]("array_class",$$("Array"));return to_opal(js_object,options.$$smap)},-2);$defs(self,"$generate",function $$generate(obj,options){if(options==null)options=$hash2([],{});return obj.$to_json(options)},-2);return $defs(self,"$dump",function $$dump(obj,io,limit){var self=this,string=nil;if(io==null)io=nil;if(limit==null)limit=nil;string=self.$generate(obj);if($truthy(io)){if($truthy(io["$responds_to?"]("to_io")))io=io.$to_io();io.$write(string);
return io}else return string},-2)})($nesting[0],$nesting);(function($base,$super){var self=$klass($base,$super,"Object");return $def(self,"$to_json",function $$to_json(){var self=this;return self.$to_s().$to_json()})})($nesting[0],null);(function($base){var self=$module($base,"Enumerable");return $def(self,"$to_json",function $$to_json(){var self=this;return self.$to_a().$to_json()})})($nesting[0]);(function($base,$super){var self=$klass($base,$super,"Array");return $def(self,"$to_json",function $$to_json(){var self=
this;var result=[];for(var i=0,length=self.length;i<length;i++)result.push(self[i].$to_json());return"["+result.join(",")+"]"})})($nesting[0],null);(function($base,$super){var self=$klass($base,$super,"Boolean");return $def(self,"$to_json",function $$to_json(){var self=this;return self==true?"true":"false"})})($nesting[0],null);(function($base,$super){var self=$klass($base,$super,"Hash");return $def(self,"$to_json",function $$to_json(){var self=this;var result=[];for(var i=0,keys=self.$$keys,length=
keys.length,key,value;i<length;i++){key=keys[i];if(key.$$is_string)value=self.$$smap[key];else{value=key.value;key=key.key}result.push(key.$to_s().$to_json()+":"+value.$to_json())}return"{"+result.join(",")+"}"})})($nesting[0],null);(function($base,$super){var self=$klass($base,$super,"NilClass");return $def(self,"$to_json",$return_val("null"))})($nesting[0],null);(function($base,$super){var self=$klass($base,$super,"Numeric");return $def(self,"$to_json",function $$to_json(){var self=this;return self.toString()})})($nesting[0],
null);(function($base,$super){var self=$klass($base,$super,"String");return $def(self,"$to_json",function $$to_json(){var self=this;return JSON.stringify(self)})})($nesting[0],null);(function($base,$super){var self=$klass($base,$super,"Time");return $def(self,"$to_json",function $$to_json(){var self=this;return self.$strftime("%FT%T%z").$to_json()})})($nesting[0],null);return function($base,$super){var self=$klass($base,$super,"Date");$def(self,"$to_json",function $$to_json(){var self=this;return self.$to_s().$to_json()});
return $def(self,"$as_json",function $$as_json(){var self=this;return self.$to_s()})}($nesting[0],null)};
Opal.modules["shared/compiler/compiler"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,new,parse,src,generate,get_code_object,parser,parse_tree");self.$require("shared/compiler/core/compiler_util");self.$require("shared/extensions/all");self.$require("shared/parser/parser");self.$require("json");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Compiler");var $nesting=[self].concat($parent_nesting),
$$=Opal.$r($nesting);self.$attr_reader("parse_tree");self.$attr_reader("parser");self.$attr_reader("src");$def(self,"$initialize",function $$initialize(parse_tree_arg,src_arg,name_arg){var self=this;if(src_arg==null)src_arg="";if(name_arg==null)name_arg="<stdin>";self.parse_tree=parse_tree_arg;self.src=src_arg;self.name=name_arg;return self.parser=$$("Parser").$new()},-2);$def(self,"$compile",function $$compile(){var self=this,ast=nil,compiler_util=nil;ast=self.$parse();compiler_util=$$("CompilerUtil").$new(self.$src());
ast.$generate(compiler_util);return compiler_util.$get_code_object()});return $def(self,"$parse",function $$parse(){var self=this;return self.$parser().$parse(self.$parse_tree())})}($nesting[0],null,$nesting)};
Opal.modules["shared/constants/version"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$defs=Opal.defs,$nesting=[],nil=Opal.nil;return function($base,$super){var self=$klass($base,$super,"Version");$defs(self,"$timestamp",$return_val("2024-01-18 14:48"));return $defs(self,"$version",$return_val("1.0.0"))}($nesting[0],null)};
Opal.modules["shared/scheduler/core/async_dispatcher"]=function(Opal){var $klass=Opal.klass,$slice=Opal.slice,$defs=Opal.defs,$nesting=[],nil=Opal.nil;return function($base,$super){var self=$klass($base,$super,"AsyncDispatcher");return $defs(self,"$invoke",function $$invoke(fn,$a){var $post_args,args;$post_args=$slice(arguments,1);args=$post_args;return setTimeout(function(){fn.apply(null,args)},0)},-2)}($nesting[0],null)};
Opal.modules["shared/util/env_util"]=function(Opal){var $klass=Opal.klass,$defs=Opal.defs,$nesting=[],nil=Opal.nil;Opal.add_stubs("==");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"EnvUtil");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$defs(self,"$is_jruby?",function $EnvUtil_is_jruby$ques$1(){return $$("RUBY_ENGINE")["$=="]("jruby")});return $defs(self,"$is_opal?",function $EnvUtil_is_opal$ques$2(){return $$("RUBY_ENGINE")["$=="]("opal")})}($nesting[0],
null,$nesting)};
Opal.modules["shared/vm/core/py_event_handlers"]=function(Opal){var $klass=Opal.klass,$defs=Opal.defs,$hash2=Opal.hash2,$def=Opal.def,$truthy=Opal.truthy,$send=Opal.send,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,get_handler,instance,invoke_event,set_handler,[],handlers,to_sym,to_s,is_a?,schedule,codeobject,[]=");self.$require("shared/scheduler/scheduler");self.$require("shared/vm/core/py_function");self.$require("singleton");return function($base,$super,$parent_nesting){var self=
$klass($base,$super,"PyEventHandlers");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("handlers");self.$include($$("Singleton"));$defs(self,"$get_handler",function $$get_handler(name){var self=this;return self.$instance().$get_handler(name)});$defs(self,"$invoke_event",function $$invoke_event(name,args){var self=this;return self.$instance().$invoke_event(name,args)});$defs(self,"$set_handler",function $$set_handler(name,fn){var self=this;return self.$instance().$set_handler(name,
fn)});$def(self,"$initialize",function $$initialize(){var self=this;return self.handlers=$hash2([],{})});$def(self,"$get_handler",function $$get_handler(name){var self=this;return self.$handlers()["$[]"](name.$to_s().$to_sym())});$def(self,"$invoke_event",function $$invoke_event(name,args){var self=this,handler=nil;handler=self.$get_handler(name.$to_s().$to_sym());if($truthy(handler["$is_a?"]($$("PyFunction"))))return $$("Scheduler").$schedule(handler.$codeobject(),args);else return nil});return $def(self,
"$set_handler",function $$set_handler(name,handler){var $a,self=this;return $a=[name.$to_s().$to_sym(),handler],$send(self.$handlers(),"[]=",$a),$a[$a.length-1]})}($nesting[0],null,$nesting)};
Opal.modules["shared/vm/core/py_locals"]=function(Opal){var $klass=Opal.klass,$hash2=Opal.hash2,$def=Opal.def,$send=Opal.send,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,[],dictionary,to_s,has_key?,[]=");self.$require("singleton");return function($base,$super){var self=$klass($base,$super,"PyLocals");self.$attr_reader("dictionary");$def(self,"$initialize",function $$initialize(){var self=this;return self.dictionary=$hash2([],{})});$def(self,"$get_item",function $$get_item(name_arg){var self=
this;return self.$dictionary()["$[]"](name_arg.$to_s())});$def(self,"$has_key?",function $PyLocals_has_key$ques$1(name_arg){var self=this;return self.$dictionary()["$has_key?"](name_arg)});return $def(self,"$set_item",function $$set_item(name_arg,value_arg){var $a,self=this;return $a=[name_arg.$to_s(),value_arg],$send(self.$dictionary(),"[]=",$a),$a[$a.length-1]})}($nesting[0],null)};
Opal.modules["shared/vm/core/py_globals"]=function(Opal){var $klass=Opal.klass,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/vm/core/py_locals");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"PyGlobals");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return self.$include($$("Singleton"))}($nesting[0],$$("PyLocals"),$nesting)};
Opal.modules["shared/vm/primitives/core/abstract_primitive"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$return_val=Opal.return_val,$nesting=[],nil=Opal.nil;Opal.add_stubs("puts");return function($base,$super){var self=$klass($base,$super,"AbstractPrimitive");$def(self,"$call",function $$call(interpreter,args){var self=this;return self.$puts("AbstractPrimitive call")});$def(self,"$name",$return_val("<unknown>"));return $def(self,"$register",$return_val(nil))}($nesting[0],null)};
Opal.modules["shared/vm/primitives/autotab_primitive"]=function(Opal){var $klass=Opal.klass,$hash2=Opal.hash2,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,unshift,post_action");self.$require("shared/api/vm_api");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"AutotabPrimitive");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);
$def(self,"$call",function $$call(interpreter,args){var data=nil;args.$unshift("autotab");data=$hash2(["service","args"],{"service":"workbench","args":args});return $$("VmApi").$post_action(data)});return $def(self,"$name",$return_val("autotab"))}($nesting[0],$$("AbstractPrimitive"),$nesting)};
Opal.modules["shared/vm/primitives/board_primitive"]=function(Opal){var $klass=Opal.klass,$hash2=Opal.hash2,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,post_action");self.$require("shared/api/vm_api");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"BoardPrimitive");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);
$def(self,"$call",function $$call(interpreter,args){var data=nil;data=$hash2(["service","args"],{"service":"board","args":args});return $$("VmApi").$post_action(data)});return $def(self,"$name",$return_val("board"))}($nesting[0],$$("AbstractPrimitive"),$nesting)};
Opal.modules["shared/vm/primitives/dir_primitive"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,first,respond_to?,push,send,%");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super){var self=$klass($base,$super,"DirPrimitive");$def(self,"$call",function $$call(interpreter,args){var x=nil,method=nil;x=args.$first();method="__dir__";
if($truthy(x["$respond_to?"](method)))return interpreter.$push(x.$send(method));else return interpreter.$push("%s does not understand %s"["$%"]([x,method]))});return $def(self,"$name",$return_val("dir"))}($nesting[0],$$("AbstractPrimitive"))};
Opal.modules["shared/vm/primitives/len_primitive"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,first,respond_to?,push,send,%");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super){var self=$klass($base,$super,"LenPrimitive");$def(self,"$call",function $$call(interpreter,args){var x=nil,method=nil;x=args.$first();method="__len__";
if($truthy(x["$respond_to?"](method)))return interpreter.$push(x.$send(method));else return interpreter.$push("%s does not understand %s"["$%"]([x,method]))});return $def(self,"$name",$return_val("len"))}($nesting[0],$$("AbstractPrimitive"))};
Opal.modules["shared/vm/primitives/print_primitive"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,$send=Opal.send,$rb_minus=Opal.rb_minus,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,std_out,>,count,each,-,pr,%,to_s,[],prn,last,nl");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super){var self=$klass($base,$super,"PrintPrimitive");$def(self,"$call",
function $$call(interpreter,args){var std_out=nil;std_out=interpreter.$std_out();if($truthy($rb_gt(args.$count(),0))){$send(Opal.Range.$new(0,$rb_minus(args.$count(),1),true),"each",[],function $$1(i){if(i==null)i=nil;return std_out.$pr("%s, "["$%"](args["$[]"](i).$to_s()))});return std_out.$prn(args.$last().$to_s())}else return std_out.$nl()});return $def(self,"$name",$return_val("print"))}($nesting[0],$$("AbstractPrimitive"))};
Opal.modules["shared/types/range_type"]=function(Opal){var $klass=Opal.klass,$return_val=Opal.return_val,$def=Opal.def,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,include");self.$require("shared/types/type");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"RangeType");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Singleton"));return $def(self,"$type_name",$return_val("range"))}($nesting[0],
$$("Type"),$nesting)};
Opal.modules["shared/vm/core/py_range"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$truthy=Opal.truthy,$rb_gt=Opal.rb_gt,$rb_ge=Opal.rb_ge,$rb_le=Opal.rb_le,$rb_plus=Opal.rb_plus,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,attr_reader,reset,instance,>,step,>=,index,stop,<=,+,start");self.$require("shared/types/range_type");self.$require("shared/vm/core/py_object");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"PyRange");
var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.index=nil;self.$attr_reader("index");self.$attr_reader("start");self.$attr_reader("step");self.$attr_reader("stop");$def(self,"$initialize",function $$initialize(start_arg,stop_arg,step_arg){var self=this;self.start=start_arg;self.stop=stop_arg;self.step=step_arg;return self.$reset()});$def(self,"$get_initial_type",function $$get_initial_type(){return $$("RangeType").$instance()});$def(self,"$is_eof?",
function $PyRange_is_eof$ques$1(){var self=this;if($truthy($rb_gt(self.$step(),0)))return $rb_ge(self.$index(),self.$stop());else return $rb_le(self.$index(),self.$stop())});$def(self,"$next",function $$next(){var self=this,temp=nil;temp=self.$index();self.index=$rb_plus(self.index,self.$step());return temp});return $def(self,"$reset",function $$reset(){var self=this;return self.index=self.$start()})}($nesting[0],$$("PyObject"),$nesting)};
Opal.modules["shared/vm/primitives/range_primitive"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,size,[],push,new");self.$require("shared/vm/core/py_range");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"RangePrimitive");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,
"$call",function $$call(interpreter,args){var start=nil,stop=nil,step=nil;start=0;stop=0;step=1;switch(args.$size()){case 1:stop=args["$[]"](0);break;case 2:start=args["$[]"](0);stop=args["$[]"](1);break;case 3:start=args["$[]"](0);stop=args["$[]"](1);step=args["$[]"](2);break;default:nil}return interpreter.$push($$("PyRange").$new(start,stop,step))});return $def(self,"$name",$return_val("range"))}($nesting[0],$$("AbstractPrimitive"),$nesting)};
Opal.modules["shared/vm/primitives/register_primitive"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,shift,set_handler");self.$require("shared/vm/core/py_event_handlers");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"RegisterPrimitive");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);
$def(self,"$call",function $$call(interpreter,args){var name=nil,fn=nil;name=args.$shift();fn=args.$shift();return $$("PyEventHandlers").$set_handler(name,fn)});return $def(self,"$name",$return_val("register"))}($nesting[0],$$("AbstractPrimitive"),$nesting)};
Opal.modules["shared/vm/primitives/sleep_primitive"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$rb_times=Opal.rb_times,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,is_a?,first,to_i,*,to_f,sleep");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"SleepPrimitive");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);
$def(self,"$call",function $$call(interpreter,args){var milliseconds=nil;if(!$truthy(args.$first()["$is_a?"]($$("Numeric"))))return"first argument must be numeric";milliseconds=$rb_times(1E3,args.$first().$to_f()).$to_i();interpreter.$sleep(milliseconds);return nil});return $def(self,"$name",$return_val("sleep"))}($nesting[0],$$("AbstractPrimitive"),$nesting)};
Opal.modules["shared/vm/primitives/toast_primitive"]=function(Opal){var $klass=Opal.klass,$hash2=Opal.hash2,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,unshift,post_action");self.$require("shared/api/vm_api");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"ToastPrimitive");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);
$def(self,"$call",function $$call(interpreter,args){var data=nil;args.$unshift("toast");data=$hash2(["service","args"],{"service":"notify","args":args});return $$("VmApi").$post_action(data)});return $def(self,"$name",$return_val("toast"))}($nesting[0],$$("AbstractPrimitive"),$nesting)};
Opal.modules["shared/vm/primitives/type_primitive"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$def=Opal.def,$return_val=Opal.return_val,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,first,respond_to?,push,send,%");self.$require("shared/vm/primitives/core/abstract_primitive");return function($base,$super){var self=$klass($base,$super,"TypePrimitive");$def(self,"$call",function $$call(interpreter,args){var x=nil,method=nil;x=args.$first();method=
"__class__";if($truthy(x["$respond_to?"](method)))return interpreter.$push(x.$send(method));else return interpreter.$push("%s does not understand %s"["$%"]([x,method]))});return $def(self,"$name",$return_val("type"))}($nesting[0],$$("AbstractPrimitive"))};
Opal.modules["shared/vm/core/py_module"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$send=Opal.send,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,instance,register_primitives,get_item,globals,new,set_item,name,each,register_primitive");self.$require("shared/vm/core/py_globals");self.$require("shared/vm/primitives/autotab_primitive");self.$require("shared/vm/primitives/board_primitive");self.$require("shared/vm/primitives/dir_primitive");self.$require("shared/vm/primitives/len_primitive");
self.$require("shared/vm/primitives/print_primitive");self.$require("shared/vm/primitives/range_primitive");self.$require("shared/vm/primitives/register_primitive");self.$require("shared/vm/primitives/sleep_primitive");self.$require("shared/vm/primitives/toast_primitive");self.$require("shared/vm/primitives/type_primitive");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"PyModule");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);
self.$attr_reader("globals");self.$include($$("Singleton"));$def(self,"$initialize",function $$initialize(){var self=this;self.globals=$$("PyGlobals").$instance();return self.$register_primitives()});$def(self,"$get_item",function $$get_item(name_arg){var self=this;return self.$globals().$get_item(name_arg)});$def(self,"$register_primitive",function $$register_primitive(primitive_class){var self=this,primitive=nil;primitive=primitive_class.$new();return self.$globals().$set_item(primitive.$name(),
primitive)});$def(self,"$register_primitives",function $$register_primitives(){var self=this;return $send([$$("AutotabPrimitive"),$$("BoardPrimitive"),$$("DirPrimitive"),$$("LenPrimitive"),$$("PrintPrimitive"),$$("RangePrimitive"),$$("RegisterPrimitive"),$$("SleepPrimitive"),$$("ToastPrimitive"),$$("TypePrimitive")],"each",[],function $$1(primitive_class){var self=$$1.$$s==null?this:$$1.$$s;if(primitive_class==null)primitive_class=nil;return self.$register_primitive(primitive_class)},{$$s:self})});
return $def(self,"$set_item",function $$set_item(name_arg,value_arg){var self=this;return self.$globals().$set_item(name_arg,value_arg)})}($nesting[0],null,$nesting)};
Opal.modules["shared/constants/process_constants"]=function(Opal){var $module=Opal.module,$const_set=Opal.const_set,$nesting=[],nil=Opal.nil;return function($base,$parent_nesting){var self=$module($base,"ProcessConstants");var $nesting=[self].concat($parent_nesting);return $const_set($nesting[0],"TIME_SLICE_LIMIT",100)}($nesting[0],$nesting)};
Opal.modules["shared/vm/core/py_frame"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$truthy=Opal.truthy,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,attr_accessor,instance,new,has_key?,locals,get_item,nil?,parent_frame,globals,get_name,!,set_item");self.$require("shared/vm/core/py_globals");self.$require("shared/vm/core/py_locals");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"PyFrame");var $nesting=[self].concat($parent_nesting),
$$=Opal.$r($nesting);self.$attr_reader("code_object");self.$attr_reader("globals");self.$attr_reader("locals");self.$attr_reader("parent_frame");self.$attr_accessor("pc");self.$attr_accessor("stack");$def(self,"$initialize",function $$initialize(code_object_arg,parent_frame_arg){var self=this;if(parent_frame_arg==null)parent_frame_arg=nil;self.code_object=code_object_arg;self.parent_frame=parent_frame_arg;self.globals=$$("PyGlobals").$instance();self.locals=$$("PyLocals").$new();self.pc=0;return self.stack=
[]},-2);$def(self,"$get_name",function $$get_name(name_arg){var self=this;if($truthy(self.$locals()["$has_key?"](name_arg)))return self.$locals().$get_item(name_arg);if($truthy(self.$parent_frame()["$nil?"]()))return $truthy(self.$globals()["$has_key?"](name_arg))?self.$globals().$get_item(name_arg):nil;else return self.$parent_frame().$get_name(name_arg)});$def(self,"$has_parent_frame?",function $PyFrame_has_parent_frame$ques$1(){var self=this;return self.$parent_frame()["$nil?"]()["$!"]()});$def(self,
"$set_global",function $$set_global(name_arg,value_arg){var self=this;return self.$globals().$set_item(name_arg,value_arg)});return $def(self,"$set_local",function $$set_local(name_arg,value_arg){var self=this;self.$locals().$set_item(name_arg,value_arg);if($truthy(self.$parent_frame()["$nil?"]()))return self.$globals().$set_item(name_arg,value_arg);else return nil})}($nesting[0],null,$nesting)};
Opal.modules["shared/vm/interpreter"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$eqeqeq=Opal.eqeqeq,$rb_plus=Opal.rb_plus,$rb_divide=Opal.rb_divide,$rb_gt=Opal.rb_gt,$rb_ge=Opal.rb_ge,$rb_lt=Opal.rb_lt,$rb_le=Opal.rb_le,$rb_minus=Opal.rb_minus,$rb_times=Opal.rb_times,$hash2=Opal.hash2,$send=Opal.send,$truthy=Opal.truthy,$assign_ivar=Opal.assign_ivar,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,push_frame,new,reset,===,op_binary_add,op_binary_divide,op_binary_equals,op_binary_gt_eq,op_binary_greater_than,op_binary_int_divide,op_binary_lt_eq,op_binary_less_than,op_binary_minus,op_binary_mod,op_binary_not_eq,op_binary_multiply,op_build_dictionary,op_build_ellipsis,op_build_list,op_call,op_iter_is_eof?,op_iter_next,op_iter_reset,op_jump_if_false,op_jump_if_true,op_jump_to,op_load_attr,op_load_const,op_load_name,op_load_subscript,op_store_attr,op_store_local,op_store_global,op_store_subscript,puts,%,pop,push,+,/,to_f,==,>,>=,<,<=,-,*,!=,next_byte_code,times,[]=,unshift,pop_args,nil?,call,is_eof?,next,go_to,get_literal_value,__getattribute__,get_name,current_frame,[],__setattr__,set_local,set_global,pc,size,bytecodes,break_flag,code_object,literals,stack,post_result,flush,std_out,!,at_end_of_frame?,has_parent_frame?,has_wakeup_time?,current_process,is_jruby?,is_opal?,last,pop_n,parent_frame,fetch_registers,store_registers,get_arg_names,clear,dispatch,flush_stdout,has_more?,pop_frame,set_sleeping,set_timed_out,set_ended,run_jruby_time_slice,run_opal_time_slice,set_wakeup_time,pc=,stack=");
self.$require("shared/api/vm_api");self.$require("shared/constants/bytecode_constants");self.$require("shared/constants/process_constants");self.$require("shared/util/ast_util");self.$require("shared/util/env_util");self.$require("shared/util/string_writer");self.$require("shared/vm/core/py_frame");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Interpreter");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.pc=nil;self.$attr_reader("break_flag");
self.$attr_reader("bytecodes");self.$attr_reader("current_frame");self.$attr_reader("current_process");self.$attr_reader("literals");self.$attr_reader("pc");self.$attr_reader("stack");self.$attr_reader("std_out");self.$include($$("BytecodeConstants"));self.$include($$("ProcessConstants"));$def(self,"$initialize",function $$initialize(code_object_arg,current_process_arg){var self=this;self.$push_frame(code_object_arg);self.current_process=current_process_arg;self.std_out=$$("StringWriter").$new();
return self.$reset()});$def(self,"$dispatch",function $$dispatch(bc){var self=this,$ret_or_1=nil;if($eqeqeq($$("BINARY_OP_ADD"),$ret_or_1=bc))return self.$op_binary_add();else if($eqeqeq($$("BINARY_OP_DIV"),$ret_or_1))return self.$op_binary_divide();else if($eqeqeq($$("BINARY_OP_EQ"),$ret_or_1))return self.$op_binary_equals();else if($eqeqeq($$("BINARY_OP_GE"),$ret_or_1))return self.$op_binary_gt_eq();else if($eqeqeq($$("BINARY_OP_GT"),$ret_or_1))return self.$op_binary_greater_than();else if($eqeqeq($$("BINARY_OP_IDIV"),
$ret_or_1))return self.$op_binary_int_divide();else if($eqeqeq($$("BINARY_OP_LE"),$ret_or_1))return self.$op_binary_lt_eq();else if($eqeqeq($$("BINARY_OP_LT"),$ret_or_1))return self.$op_binary_less_than();else if($eqeqeq($$("BINARY_OP_MINUS"),$ret_or_1))return self.$op_binary_minus();else if($eqeqeq($$("BINARY_OP_MOD"),$ret_or_1))return self.$op_binary_mod();else if($eqeqeq($$("BINARY_OP_NEQ"),$ret_or_1))return self.$op_binary_not_eq();else if($eqeqeq($$("BINARY_OP_STAR"),$ret_or_1))return self.$op_binary_multiply();
else if($eqeqeq($$("BUILD_DICTIONARY"),$ret_or_1))return self.$op_build_dictionary();else if($eqeqeq($$("BUILD_ELLIPSIS"),$ret_or_1))return self.$op_build_ellipsis();else if($eqeqeq($$("BUILD_LIST"),$ret_or_1))return self.$op_build_list();else if($eqeqeq($$("CALL"),$ret_or_1))return self.$op_call();else if($eqeqeq($$("ITER_IS_EOF"),$ret_or_1))return self["$op_iter_is_eof?"]();else if($eqeqeq($$("ITER_NEXT"),$ret_or_1))return self.$op_iter_next();else if($eqeqeq($$("ITER_RESET"),$ret_or_1))return self.$op_iter_reset();
else if($eqeqeq($$("JUMP_IF_FALSE"),$ret_or_1))return self.$op_jump_if_false();else if($eqeqeq($$("JUMP_IF_TRUE"),$ret_or_1))return self.$op_jump_if_true();else if($eqeqeq($$("JUMP_TO"),$ret_or_1))return self.$op_jump_to();else if($eqeqeq($$("LOAD_ATTR"),$ret_or_1))return self.$op_load_attr();else if($eqeqeq($$("LOAD_CONST"),$ret_or_1))return self.$op_load_const();else if($eqeqeq($$("LOAD_NAME"),$ret_or_1))return self.$op_load_name();else if($eqeqeq($$("LOAD_SUBSCR"),$ret_or_1))return self.$op_load_subscript();
else if($eqeqeq($$("STORE_ATTR"),$ret_or_1))return self.$op_store_attr();else if($eqeqeq($$("STORE_LOCAL"),$ret_or_1))return self.$op_store_local();else if($eqeqeq($$("STORE_GLOBAL"),$ret_or_1))return self.$op_store_global();else if($eqeqeq($$("STORE_SUBSCR"),$ret_or_1))return self.$op_store_subscript();else return self.$puts("dispatch %s"["$%"](bc))});$def(self,"$op_binary_add",function $$op_binary_add(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_plus(arg1,
arg2))});$def(self,"$op_binary_divide",function $$op_binary_divide(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_divide(arg1.$to_f(),arg2))});$def(self,"$op_binary_equals",function $$op_binary_equals(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push(arg1["$=="](arg2))});$def(self,"$op_binary_greater_than",function $$op_binary_greater_than(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_gt(arg1,
arg2))});$def(self,"$op_binary_gt_eq",function $$op_binary_gt_eq(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_ge(arg1,arg2))});$def(self,"$op_binary_int_divide",function $$op_binary_int_divide(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_divide(arg1,arg2))});$def(self,"$op_binary_less_than",function $$op_binary_less_than(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_lt(arg1,
arg2))});$def(self,"$op_binary_lt_eq",function $$op_binary_lt_eq(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_le(arg1,arg2))});$def(self,"$op_binary_minus",function $$op_binary_minus(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_minus(arg1,arg2))});$def(self,"$op_binary_mod",function $$op_binary_mod(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push(arg1["$%"](arg2))});$def(self,
"$op_binary_multiply",function $$op_binary_multiply(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push($rb_times(arg1,arg2))});$def(self,"$op_binary_not_eq",function $$op_binary_not_eq(){var self=this,arg2=nil,arg1=nil;arg2=self.$pop();arg1=self.$pop();return self.$push(arg1["$!="](arg2))});$def(self,"$op_build_dictionary",function $$op_build_dictionary(){var self=this,dictionary=nil,count=nil;dictionary=$hash2([],{});count=self.$next_byte_code();$send($rb_divide(count,
2),"times",[],function $$1(){var $a,self=$$1.$$s==null?this:$$1.$$s,value=nil,key=nil;value=self.$pop();key=self.$pop();return $a=[key,value],$send(dictionary,"[]=",$a),$a[$a.length-1]},{$$s:self});return self.$push(dictionary)});$def(self,"$op_build_ellipsis",function $$op_build_ellipsis(){var self=this;return self.$push($$("Ellipsis").$new())});$def(self,"$op_build_list",function $$op_build_list(){var self=this,list=nil,count=nil;list=[];count=self.$next_byte_code();$send(count,"times",[],function $$2(){var self=
$$2.$$s==null?this:$$2.$$s;return list.$unshift(self.$pop())},{$$s:self});return self.$push(list)});$def(self,"$op_call",function $$op_call(){var self=this,args=nil,fn=nil;args=self.$pop_args();fn=self.$pop();if($truthy(fn["$nil?"]()))return nil;else return fn.$call(self,args)});$def(self,"$op_iter_is_eof?",function $Interpreter_op_iter_is_eof$ques$3(){var self=this;return self.$push(self.$pop()["$is_eof?"]())});$def(self,"$op_iter_next",function $$op_iter_next(){var self=this;return self.$push(self.$pop().$next())});
$def(self,"$op_iter_reset",function $$op_iter_reset(){var self=this;return self.$pop().$reset()});$def(self,"$op_jump_if_false",function $$op_jump_if_false(){var self=this,test_value=nil,target=nil;test_value=self.$pop();target=self.$next_byte_code();if($truthy(test_value))return nil;else return self.$go_to(target)});$def(self,"$op_jump_if_true",function $$op_jump_if_true(){var self=this,test_value=nil,target=nil;test_value=self.$pop();target=self.$next_byte_code();if($truthy(test_value))return self.$go_to(target);
else return nil});$def(self,"$op_jump_to",function $$op_jump_to(){var self=this;return self.$go_to(self.$next_byte_code())});$def(self,"$op_load_attr",function $$op_load_attr(){var self=this,name=nil,object=nil;name=self.$get_literal_value();object=self.$pop();return self.$push(object.$__getattribute__(name))});$def(self,"$op_load_const",function $$op_load_const(){var self=this;return self.$push(self.$get_literal_value())});$def(self,"$op_load_name",function $$op_load_name(){var self=this,name=nil,
value=nil;name=self.$get_literal_value();value=self.$current_frame().$get_name(name);return self.$push(value)});$def(self,"$op_load_subscript",function $$op_load_subscript(){var self=this,index=nil,object=nil;index=self.$pop();object=self.$pop();return self.$push(object["$[]"](index))});$def(self,"$op_store_attr",function $$op_store_attr(){var self=this,name=nil,object=nil,value=nil;name=self.$pop();object=self.$pop();value=self.$pop();return object.$__setattr__(name,value)});$def(self,"$op_store_local",
function $$op_store_local(){var self=this;return self.$set_local(self.$get_literal_value(),self.$pop())});$def(self,"$op_store_global",function $$op_store_global(){var self=this,name=nil,value=nil;name=self.$get_literal_value();value=self.$pop();return self.$current_frame().$set_global(name,value)});$def(self,"$op_store_subscript",function $$op_store_subscript(){var $a,self=this,index=nil,object=nil,value=nil;index=self.$pop();object=self.$pop();value=self.$pop();return $a=[index,value],$send(object,
"[]=",$a),$a[$a.length-1]});$def(self,"$at_end_of_frame?",function $Interpreter_at_end_of_frame$ques$4(){var self=this,$ret_or_1=nil;if($truthy($ret_or_1=$rb_ge(self.$pc(),self.$bytecodes().$size())))return $ret_or_1;else return self.$break_flag()});$def(self,"$fetch_registers",function $$fetch_registers(){var self=this;self.bytecodes=self.$current_frame().$code_object().$bytecodes();self.literals=self.$current_frame().$code_object().$literals();self.pc=self.$current_frame().$pc();return self.stack=
self.$current_frame().$stack()});$def(self,"$flush_stdout",function $$flush_stdout(){var self=this;return $$("VmApi").$post_result(self.$std_out().$flush())});$def(self,"$get_literal_value",function $$get_literal_value(){var self=this,index=nil;index=self.$next_byte_code();if($truthy($rb_lt(index,self.$literals().$size())))return self.$literals()["$[]"](index);else return nil});$def(self,"$go_to",$assign_ivar("pc"));$def(self,"$has_more?",function $Interpreter_has_more$ques$5(){var self=this,$ret_or_1=
nil;if($truthy($ret_or_1=self["$at_end_of_frame?"]()["$!"]()))return $ret_or_1;else return self.$current_frame()["$has_parent_frame?"]()});$def(self,"$has_wakeup_time?",function $Interpreter_has_wakeup_time$ques$6(){var self=this;return self.$current_process()["$has_wakeup_time?"]()});$def(self,"$is_jruby?",function $Interpreter_is_jruby$ques$7(){return $$("EnvUtil")["$is_jruby?"]()});$def(self,"$is_opal?",function $Interpreter_is_opal$ques$8(){return $$("EnvUtil")["$is_opal?"]()});$def(self,"$next_byte_code",
function $$next_byte_code(){var self=this,bc=nil;if($truthy($rb_lt(self.$pc(),self.$bytecodes().$size()))){bc=self.$bytecodes()["$[]"](self.$pc());self.pc=$rb_plus(self.pc,1);return bc}else return nil});$def(self,"$peek",function $$peek(){var self=this;return self.$stack().$last()});$def(self,"$pop",function $$pop(){var self=this;return self.$stack().$pop()});$def(self,"$pop_args",function $$pop_args(){var self=this;return self.$pop_n(self.$next_byte_code())});$def(self,"$pop_frame",function $$pop_frame(){var self=
this;if(!$truthy(self.$current_frame().$parent_frame()["$nil?"]()))self.current_frame=self.$current_frame().$parent_frame();return self.$fetch_registers()});$def(self,"$pop_n",function $$pop_n(n){var self=this,vals=nil;vals=[];$send(n,"times",[],function $$9(){var self=$$9.$$s==null?this:$$9.$$s;return vals.$unshift(self.$pop())},{$$s:self});return vals});$def(self,"$push",function $$push(value_arg){var self=this;return self.$stack().$push(value_arg)});$def(self,"$push_frame",function $$push_frame(code_object_arg,
args_arg){var self=this,arg_names=nil;if(args_arg==null)args_arg=[];self.$store_registers();arg_names=code_object_arg.$get_arg_names();self.current_frame=$$("PyFrame").$new(code_object_arg,self.$current_frame());self.$fetch_registers();return $send(arg_names.$size(),"times",[],function $$10(i){var self=$$10.$$s==null?this:$$10.$$s,arg_name=nil,arg_value=nil;if(i==null)i=nil;arg_name=arg_names["$[]"](i);arg_value=args_arg["$[]"](i);return self.$set_local(arg_name,arg_value)},{$$s:self})},-2);$def(self,
"$reset",function $$reset(){var self=this;self.break_flag=nil;self.pc=0;self.stack=[];return self.$std_out().$clear()});$def(self,"$run_jruby_time_slice",function $$run_jruby_time_slice(){var self=this;while(!$truthy(self["$at_end_of_frame?"]()))self.$dispatch(self.$next_byte_code());return self.$flush_stdout()});$def(self,"$run_opal_time_slice",function $$run_opal_time_slice(){var self=this,count=nil;count=0;while($truthy($rb_lt(count,$$("TIME_SLICE_LIMIT")))){count=$rb_plus(count,1);while($truthy(self["$at_end_of_frame?"]())){if(!$truthy(self["$has_more?"]()))break;
self.$pop_frame()}if($truthy(self["$at_end_of_frame?"]()))break;self.$dispatch(self.$next_byte_code());if($truthy(self["$has_wakeup_time?"]()))break}if($truthy(self["$has_wakeup_time?"]()))self.$current_process().$set_sleeping();else if($truthy(self["$has_more?"]()))self.$current_process().$set_timed_out();else self.$current_process().$set_ended();return self.$flush_stdout()});$def(self,"$run_time_slice",function $$run_time_slice(){var self=this;if($truthy(self["$is_jruby?"]()))return self.$run_jruby_time_slice();
else return self.$run_opal_time_slice()});$def(self,"$set_local",function $$set_local(name,value){var self=this;return self.$current_frame().$set_local(name,value)});$def(self,"$sleep",function $$sleep(milliseconds){var self=this;return self.$current_process().$set_wakeup_time(milliseconds)});return $def(self,"$store_registers",function $$store_registers(){var $a,self=this;if($truthy(self.$current_frame()["$nil?"]()))return nil;else{self.$current_frame()["$pc="](self.$pc());return $a=[self.$stack()],
$send(self.$current_frame(),"stack=",$a),$a[$a.length-1]}})}($nesting[0],null,$nesting)};
Opal.modules["shared/api/vm_api"]=function(Opal){var $klass=Opal.klass,$defs=Opal.defs,$def=Opal.def,$truthy=Opal.truthy,$assign_ivar=Opal.assign_ivar,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,post_action,instance,post_event,post_result,run_time_slice,set_action_handler,set_result_handler,timestamp,version,dump,is_a?,action_handler,invoke,puts,parse,[],to_s,invoke_event,result_handler,new,compile,schedule_process,nil?,is_opal?,schedule");self.$require("shared/compiler/compiler");
self.$require("shared/constants/version");self.$require("shared/parser/parser");self.$require("shared/scheduler/core/async_dispatcher");self.$require("shared/scheduler/scheduler");self.$require("shared/util/env_util");self.$require("shared/vm/core/py_event_handlers");self.$require("shared/vm/core/py_module");self.$require("shared/vm/interpreter");self.$require("json");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"VmApi");var $nesting=[self].concat($parent_nesting),
$$=Opal.$r($nesting);self.$attr_reader("action_handler");self.$attr_reader("result_handler");self.$include($$("Singleton"));$defs(self,"$post_action",function $$post_action(data){var self=this;return self.$instance().$post_action(data)});$defs(self,"$post_event",function $$post_event(json_str){var self=this;return self.$instance().$post_event(json_str)});$defs(self,"$post_result",function $$post_result(result,id){var self=this;if(id==null)id=-1;return self.$instance().$post_result(result,id)},-2);
$defs(self,"$run",function $$run(src){var self=this;return self.$instance().$run_time_slice(src)});$defs(self,"$set_action_handler",function $$set_action_handler(handler){var self=this;return self.$instance().$set_action_handler(handler)});$defs(self,"$set_result_handler",function $$set_result_handler(handler){var self=this;return self.$instance().$set_result_handler(handler)});$defs(self,"$timestamp",function $$timestamp(){return $$("Version").$timestamp()});$defs(self,"$version",function $$version(){return $$("Version").$version()});
$def(self,"$initialize",function $$initialize(){return $$("PyModule").$instance()});$def(self,"$post_action",function $$post_action(data){var self=this,json_str=nil;json_str=$$("JSON").$dump(data);if($truthy(self.$action_handler()["$is_a?"]($$("Proc"))))return $$("AsyncDispatcher").$invoke(self.$action_handler(),json_str);else return self.$puts(json_str)});$def(self,"$post_event",function $$post_event(json_str){var data=nil,name=nil,args=nil;data=$$("JSON").$parse(json_str);name=data["$[]"]("handler".$to_s());
args=data["$[]"]("args".$to_s());return $$("PyEventHandlers").$invoke_event(name,args)});$def(self,"$post_result",function $$post_result(result,id){var self=this;if($truthy(self.$result_handler()["$is_a?"]($$("Proc"))))return $$("AsyncDispatcher").$invoke(self.$result_handler(),result,id);else return self.$puts(result)});$def(self,"$run_time_slice",function $$run_time_slice(src){var self=this,parse_tree_json=nil,parse_tree=nil,compiler=nil,code_object=nil;parse_tree_json=ParserApi.$parse_python(src);
parse_tree=$$("JSON").$parse(parse_tree_json);compiler=$$("Compiler").$new(parse_tree,src);code_object=compiler.$compile();return self.$schedule_process(code_object)});$def(self,"$schedule_process",function $$schedule_process(codeobject_arg){var id=nil,interpreter=nil;id=nil;if(!$truthy(codeobject_arg["$nil?"]()))if($truthy($$("EnvUtil")["$is_opal?"]()))id=$$("Scheduler").$schedule(codeobject_arg);else{interpreter=$$("Interpreter").$new(codeobject_arg,nil);interpreter.$run_time_slice()}return id});
$def(self,"$set_action_handler",$assign_ivar("action_handler"));return $def(self,"$set_result_handler",$assign_ivar("result_handler"))}($nesting[0],null,$nesting)};
Opal.modules["shared/scheduler/core/active_process_queue"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$send=Opal.send,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("unshift,sort_by_priority,sort_by,priority,pop");return function($base,$super){var self=$klass($base,$super,"ActiveProcessQueue");$def(self,"$add",function $$add(process){var self=this;self.$unshift(process);return self.$sort_by_priority()});$def(self,"$sort_by_priority",function $$sort_by_priority(){var self=this;
return $send(self,"sort_by",[],function $$1(process){if(process==null)process=nil;return process.$priority()})});return $def(self,"$next",function $$next(){var self=this;return self.$pop()})}($nesting[0],$$("Array"))};
Opal.modules["shared/scheduler/core/process_status"]=function(Opal){var $module=Opal.module,$const_set=Opal.const_set,$nesting=[],nil=Opal.nil;return function($base,$parent_nesting){var self=$module($base,"ProcessStatus");var $nesting=[self].concat($parent_nesting);$const_set($nesting[0],"ENDED",1);$const_set($nesting[0],"RUNNING",2);$const_set($nesting[0],"SCHEDULED",3);$const_set($nesting[0],"SLEEPING",4);$const_set($nesting[0],"SUSPENDED",5);$const_set($nesting[0],"TIMEDOUT",6);return $const_set($nesting[0],
"UNSCHEDULED",7)}($nesting[0],$nesting)};
Opal.modules["shared/scheduler/core/sleeping_process_queue"]=function(Opal){var $klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$truthy=Opal.truthy,$send=Opal.send,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("require,attr_reader,unshift,sort_by_wakeup_time,schedule_next_wakeup,nil?,timeout_id,pop,cancel_current_wakeup,time_to_wakeup,zero?,start_next_process,schedule_wakeup,lambda,sort_by,wakeup_time,reverse!,schedule_process,instance");self.$require("shared/scheduler/scheduler");
return function($base,$super,$parent_nesting){var self=$klass($base,$super,"SleepingProcessQueue");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("first_pass");self.$attr_reader("timeout_id");$def(self,"$initialize",function $$initialize(){var $yield=$$initialize.$$p||nil,self=this;$$initialize.$$p=null;$send2(self,$find_super(self,"initialize",$$initialize,false,true),"initialize",[],$yield);self.first_pass=true;return self.timeout_id=nil});$def(self,"$add",function $$add(process){var self=
this;self.first_pass=false;self.$unshift(process);self.$sort_by_wakeup_time();return self.$schedule_next_wakeup()});$def(self,"$cancel_current_wakeup",function $$cancel_current_wakeup(){var self=this;if($truthy(self.$timeout_id()["$nil?"]()))return nil;else{clearTimeout(self.$timeout_id());return self.timeout_id=nil}});$def(self,"$next",function $$next(){var self=this;return self.$pop()});$def(self,"$schedule_next_wakeup",function $$schedule_next_wakeup(){var self=this,process=nil,milliseconds=nil;
self.$cancel_current_wakeup();process=self.$pop();if($truthy(process["$nil?"]()))return nil;milliseconds=process.$time_to_wakeup();if($truthy(milliseconds["$zero?"]()))return self.$start_next_process(process);else return self.$schedule_wakeup(process,milliseconds)});$def(self,"$schedule_wakeup",function $$schedule_wakeup(process,milliseconds){var self=this,fn=nil;fn=$send(self,"lambda",[],function $$1(){var self=$$1.$$s==null?this:$$1.$$s;return self.$start_next_process(process)},{$$s:self});return self.timeout_id=
setTimeout(fn,milliseconds)});$def(self,"$sort_by_wakeup_time",function $$sort_by_wakeup_time(){var self=this;$send(self,"sort_by",[],function $$2(process){if(process==null)process=nil;return process.$wakeup_time()});return self["$reverse!"]()});return $def(self,"$start_next_process",function $$start_next_process(process){return $$("Scheduler").$instance().$schedule_process(process)})}($nesting[0],$$("Array"),$nesting)};
Opal.modules["shared/scheduler/core/suspended_process_queue"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("unshift");return function($base,$super){var self=$klass($base,$super,"SuspendedProcessQueue");return $def(self,"$add",function $$add(process){var self=this;return self.$unshift(process)})}($nesting[0],$$("Array"))};
Opal.modules["shared/util/process_util"]=function(Opal){var $klass=Opal.klass,$eqeqeq=Opal.eqeqeq,$defs=Opal.defs,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,include,===");self.$require("shared/scheduler/core/process_status");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"ProcessUtil");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("ProcessStatus"));return $defs(self,"$status_symbol",function $$status_symbol(status){var $ret_or_1=
nil;if($eqeqeq($$("ENDED"),$ret_or_1=status))return"ENDED";else if($eqeqeq($$("RUNNING"),$ret_or_1))return"RUNNING";else if($eqeqeq($$("SCHEDULED"),$ret_or_1))return"SCHEDULED";else if($eqeqeq($$("SLEEPING"),$ret_or_1))return"SLEEPING";else if($eqeqeq($$("SUSPENDED"),$ret_or_1))return"SUSPENDED";else if($eqeqeq($$("TIMEDOUT"),$ret_or_1))return"TIMEDOUT";else return"UNSCHEDULED"})}($nesting[0],null,$nesting)};
Opal.modules["shared/scheduler/core/vm_process"]=function(Opal){var $klass=Opal.klass,$defs=Opal.defs,$def=Opal.def,$assign_ivar_val=Opal.assign_ivar_val,$truthy=Opal.truthy,$send=Opal.send,$rb_plus=Opal.rb_plus,$rb_divide=Opal.rb_divide,$rb_times=Opal.rb_times,$rb_minus=Opal.rb_minus,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,new,compiled_method,clear,get_stdout,get_result,clear_output_writer,to_s,std_out,interpreter,!,nil?,wakeup_time,==,status,set_running,run_time_slice,signal_completion,is_a?,each,push,keys,set_local,[],clear_wakeup_time,at,to_i,+,now,/,handle_process_completion,scheduler,*,-,max,%,status_symbol");
self.$require("shared/compiler/core/code_object");self.$require("shared/scheduler/core/process_status");self.$require("shared/util/process_util");self.$require("shared/vm/interpreter");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"VmProcess");var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$attr_reader("compiled_method");self.$attr_reader("id");self.$attr_reader("initial_args");self.$attr_reader("interpreter");self.$attr_reader("priority");self.$attr_reader("scheduler");
self.$attr_reader("status");self.$attr_reader("wakeup_time");self.$include($$("ProcessStatus"));$defs(self,"$create",function $$create(scheduler_arg,compiled_method_arg,id_arg,priority_arg){var self=this;if(priority_arg==null)priority_arg=1;return self.$new(scheduler_arg,compiled_method_arg,id_arg,priority_arg)},-4);$def(self,"$initialize",function $$initialize(scheduler_arg,compiled_method_arg,id_arg,priority_arg){var self=this;self.scheduler=scheduler_arg;self.compiled_method=compiled_method_arg;
self.id=id_arg;self.initial_args=nil;self.interpreter=$$("Interpreter").$new(self.$compiled_method(),self);self.priority=priority_arg;self.status=$$("UNSCHEDULED");return self.wakeup_time=nil});$def(self,"$clear_output_writer",function $$clear_output_writer(){var self=this;return self.$get_stdout().$clear()});$def(self,"$clear_wakeup_time",$assign_ivar_val("wakeup_time",nil));$def(self,"$get_and_clear_result",function $$get_and_clear_result(){var self=this,result=nil;result=self.$get_result();self.$clear_output_writer();
return result});$def(self,"$get_result",function $$get_result(){var self=this;return self.$get_stdout().$to_s()});$def(self,"$get_stdout",function $$get_stdout(){var self=this;return self.$interpreter().$std_out()});$def(self,"$has_wakeup_time?",function $VmProcess_has_wakeup_time$ques$1(){var self=this;return self.$wakeup_time()["$nil?"]()["$!"]()});$def(self,"$is_ended?",function $VmProcess_is_ended$ques$2(){var self=this;return self.$status()["$=="]($$("ENDED"))});$def(self,"$is_running?",function $VmProcess_is_running$ques$3(){var self=
this;return self.$status()["$=="]($$("RUNNING"))});$def(self,"$is_scheduled?",function $VmProcess_is_scheduled$ques$4(){var self=this;return self.$status()["$=="]($$("SCHEDULED"))});$def(self,"$is_sleeping?",function $VmProcess_is_sleeping$ques$5(){var self=this;return self.$status()["$=="]($$("SLEEPING"))});$def(self,"$is_suspended?",function $VmProcess_is_suspended$ques$6(){var self=this;return self.$status()["$=="]($$("SUSPENDED"))});$def(self,"$is_timed_out?",function $VmProcess_is_timed_out$ques$7(){var self=
this;return self.$status()["$=="]($$("TIMEDOUT"))});$def(self,"$is_unscheduled?",function $VmProcess_is_unscheduled$ques$8(){var self=this;return self.$status()["$=="]($$("UNSCHEDULED"))});$def(self,"$run_time_slice",function $$run_time_slice(){var self=this;self.$set_running();return self.$interpreter().$run_time_slice()});$def(self,"$set_ended",function $$set_ended(){var self=this;self.status=$$("ENDED");return self.$signal_completion()});$def(self,"$set_initial_args",function $$set_initial_args(args){var self=
this;self.initial_args=args;if($truthy(args["$is_a?"]($$("Array"))))return $send(args,"each",[],function $$9(arg){var self=$$9.$$s==null?this:$$9.$$s;if(arg==null)arg=nil;return self.$interpreter().$push(arg)},{$$s:self});else if($truthy(args["$is_a?"]($$("Hash"))))return $send(args.$keys(),"each",[],function $$10(key){var self=$$10.$$s==null?this:$$10.$$s;if(key==null)key=nil;return self.$interpreter().$set_local(key,args["$[]"](key))},{$$s:self});else return nil});$def(self,"$set_running",function $$set_running(){var self=
this;self.$clear_wakeup_time();return self.status=$$("RUNNING")});$def(self,"$set_scheduled",function $$set_scheduled(){var self=this;return self.status=$$("SCHEDULED")});$def(self,"$set_sleeping",function $$set_sleeping(){var self=this;self.status=$$("SLEEPING");return self.$signal_completion()});$def(self,"$set_suspended",function $$set_suspended(){var self=this;return self.status=$$("SUSPENDED")});$def(self,"$set_timed_out",function $$set_timed_out(){var self=this;self.status=$$("TIMEDOUT");return self.$signal_completion()});
$def(self,"$set_wakeup_time",function $$set_wakeup_time(milliseconds){var self=this;return self.wakeup_time=$$("Time").$at($rb_plus($$("Time").$now().$to_i(),$rb_divide(milliseconds,1E3)).$to_i())});$def(self,"$signal_completion",function $$signal_completion(){var self=this;return self.$scheduler().$handle_process_completion(self)});$def(self,"$time_to_wakeup",function $$time_to_wakeup(){var self=this,milliseconds=nil;if($truthy(self.$wakeup_time()["$nil?"]()))return 0;milliseconds=$rb_times($rb_minus(self.$wakeup_time(),
$$("Time").$now()),1E3).$to_i();return[0,milliseconds].$max()});return $def(self,"$to_s",function $$to_s(){var self=this;return"Process(%s)"["$%"]($$("ProcessUtil").$status_symbol(self.$status()))})}($nesting[0],null,$nesting)};
Opal.modules["shared/scheduler/scheduler"]=function(Opal){var $klass=Opal.klass,$defs=Opal.defs,$def=Opal.def,$eqeqeq=Opal.eqeqeq,$rb_plus=Opal.rb_plus,$not=Opal.not,$truthy=Opal.truthy,$send=Opal.send,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,attr_accessor,include,schedule,instance,new,set_running,add,active_processes,===,status,handle_process_ended,handle_process_sleeping,handle_process_timed_out,puts,%,post_result,sleeping_processes,schedule_process,==,id,+,get_and_clear_result,!,nil?,current_process,empty?,pop,run_process,is_javascript?,lambda,run_time_slice,create,next_id,set_initial_args,activate_process,run_next_process");self.$require("shared/api/vm_api");
self.$require("shared/constants/process_constants");self.$require("shared/scheduler/core/active_process_queue");self.$require("shared/scheduler/core/process_status");self.$require("shared/scheduler/core/sleeping_process_queue");self.$require("shared/scheduler/core/suspended_process_queue");self.$require("shared/scheduler/core/vm_process");self.$require("shared/util/process_util");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"Scheduler");var $nesting=
[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.id=nil;self.$attr_reader("active_processes");self.$attr_reader("current_process");self.$attr_reader("id");self.$attr_accessor("javascript");self.$attr_reader("sleeping_processes");self.$attr_reader("suspended_processes");self.$include($$("ProcessStatus"));self.$include($$("Singleton"));$defs(self,"$schedule",function $$schedule(compiled_method,args){var self=this;if(args==null)args=nil;return self.$instance().$schedule(compiled_method,
args)},-2);$def(self,"$initialize",function $$initialize(){var self=this;self.active_processes=$$("ActiveProcessQueue").$new();self.current_process=nil;self.sleeping_processes=$$("SleepingProcessQueue").$new();self.suspended_processes=$$("SuspendedProcessQueue").$new();self.id=0;return self.javascript=true});$def(self,"$activate_process",function $$activate_process(process){var self=this;process.$set_running();return self.$active_processes().$add(process)});$def(self,"$handle_process_completion",
function $$handle_process_completion(process){var self=this,$ret_or_1=nil;self.current_process=nil;if($eqeqeq($$("ENDED"),$ret_or_1=process.$status()))return self.$handle_process_ended(process);else if($eqeqeq($$("SLEEPING"),$ret_or_1))return self.$handle_process_sleeping(process);else if($eqeqeq($$("TIMEDOUT"),$ret_or_1))return self.$handle_process_timed_out(process);else return self.$puts("unknown handle_process_completion: %s"["$%"](process))});$def(self,"$handle_process_ended",function $$handle_process_ended(process){var self=
this;return self.$post_result(process)});$def(self,"$handle_process_sleeping",function $$handle_process_sleeping(process){var self=this;self.$post_result(process);return self.$sleeping_processes().$add(process)});$def(self,"$handle_process_timed_out",function $$handle_process_timed_out(process){var self=this;self.$post_result(process);return self.$schedule_process(process)});$def(self,"$is_javascript?",function $Scheduler_is_javascript$ques$1(){return $$("RUBY_ENGINE")["$=="]("opal")});$def(self,
"$next_id",function $$next_id(){var self=this,temp=nil;temp=self.$id();self.id=$rb_plus(self.id,1);return temp});$def(self,"$post_result",function $$post_result(process){return $$("VmApi").$post_result(process.$get_and_clear_result(),process.$id())});$def(self,"$run_next_process",function $$run_next_process(){var self=this,process=nil;if($truthy(self.$active_processes()["$empty?"]())||$not(self.$current_process()["$nil?"]()))return nil;else{process=self.$active_processes().$pop();return self.$run_process(process)}});
$def(self,"$run_process",function $$run_process(process){var self=this,fn=nil;self.current_process=process;if($truthy(self["$is_javascript?"]())){fn=$send(self,"lambda",[],function $$2(){return process.$run_time_slice()});return setTimeout(fn,0)}else return process.$run_time_slice()});$def(self,"$schedule",function $$schedule(code_object,args){var self=this,process=nil;process=$$("VmProcess").$create(self,code_object,self.$next_id());process.$set_initial_args(args);return self.$schedule_process(process)});
return $def(self,"$schedule_process",function $$schedule_process(process){var self=this;self.$activate_process(process);return self.$run_next_process()})}($nesting[0],null,$nesting)};
Opal.queue(function(Opal){var $klass=Opal.klass,$defs=Opal.defs,$def=Opal.def,$truthy=Opal.truthy,$assign_ivar=Opal.assign_ivar,self=Opal.top,$nesting=[],nil=Opal.nil;Opal.add_stubs("require,attr_reader,include,post_action,instance,post_event,post_result,run_time_slice,set_action_handler,set_result_handler,timestamp,version,dump,is_a?,action_handler,invoke,puts,parse,[],to_s,invoke_event,result_handler,new,compile,schedule_process,nil?,is_opal?,schedule");self.$require("shared/compiler/compiler");
self.$require("shared/constants/version");self.$require("shared/parser/parser");self.$require("shared/scheduler/core/async_dispatcher");self.$require("shared/scheduler/scheduler");self.$require("shared/util/env_util");self.$require("shared/vm/core/py_event_handlers");self.$require("shared/vm/core/py_module");self.$require("shared/vm/interpreter");self.$require("json");self.$require("singleton");return function($base,$super,$parent_nesting){var self=$klass($base,$super,"VmApi");var $nesting=[self].concat($parent_nesting),
$$=Opal.$r($nesting);self.$attr_reader("action_handler");self.$attr_reader("result_handler");self.$include($$("Singleton"));$defs(self,"$post_action",function $$post_action(data){var self=this;return self.$instance().$post_action(data)});$defs(self,"$post_event",function $$post_event(json_str){var self=this;return self.$instance().$post_event(json_str)});$defs(self,"$post_result",function $$post_result(result,id){var self=this;if(id==null)id=-1;return self.$instance().$post_result(result,id)},-2);
$defs(self,"$run",function $$run(src){var self=this;return self.$instance().$run_time_slice(src)});$defs(self,"$set_action_handler",function $$set_action_handler(handler){var self=this;return self.$instance().$set_action_handler(handler)});$defs(self,"$set_result_handler",function $$set_result_handler(handler){var self=this;return self.$instance().$set_result_handler(handler)});$defs(self,"$timestamp",function $$timestamp(){return $$("Version").$timestamp()});$defs(self,"$version",function $$version(){return $$("Version").$version()});
$def(self,"$initialize",function $$initialize(){return $$("PyModule").$instance()});$def(self,"$post_action",function $$post_action(data){var self=this,json_str=nil;json_str=$$("JSON").$dump(data);if($truthy(self.$action_handler()["$is_a?"]($$("Proc"))))return $$("AsyncDispatcher").$invoke(self.$action_handler(),json_str);else return self.$puts(json_str)});$def(self,"$post_event",function $$post_event(json_str){var data=nil,name=nil,args=nil;data=$$("JSON").$parse(json_str);name=data["$[]"]("handler".$to_s());
args=data["$[]"]("args".$to_s());return $$("PyEventHandlers").$invoke_event(name,args)});$def(self,"$post_result",function $$post_result(result,id){var self=this;if($truthy(self.$result_handler()["$is_a?"]($$("Proc"))))return $$("AsyncDispatcher").$invoke(self.$result_handler(),result,id);else return self.$puts(result)});$def(self,"$run_time_slice",function $$run_time_slice(src){var self=this,parse_tree_json=nil,parse_tree=nil,compiler=nil,code_object=nil;parse_tree_json=ParserApi.$parse_python(src);
parse_tree=$$("JSON").$parse(parse_tree_json);compiler=$$("Compiler").$new(parse_tree,src);code_object=compiler.$compile();return self.$schedule_process(code_object)});$def(self,"$schedule_process",function $$schedule_process(codeobject_arg){var id=nil,interpreter=nil;id=nil;if(!$truthy(codeobject_arg["$nil?"]()))if($truthy($$("EnvUtil")["$is_opal?"]()))id=$$("Scheduler").$schedule(codeobject_arg);else{interpreter=$$("Interpreter").$new(codeobject_arg,nil);interpreter.$run_time_slice()}return id});
$def(self,"$set_action_handler",$assign_ivar("action_handler"));return $def(self,"$set_result_handler",$assign_ivar("result_handler"))}($nesting[0],null,$nesting)});Opal.queue(function(Opal){var $Kernel=Opal.Kernel,nil=Opal.nil;Opal.add_stubs("exit");return $Kernel.$exit()});
